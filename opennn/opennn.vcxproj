<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="Debug|Win32">
      <Configuration>Debug</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|Win32">
      <Configuration>Release</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <ItemGroup>
    <ClInclude Include="..\opennn\adaptive_moment_estimation.h" />
    <ClInclude Include="..\opennn\bounding_layer.h" />
    <ClInclude Include="..\opennn\config.h" />
    <ClInclude Include="..\opennn\conjugate_gradient.h" />
    <ClInclude Include="..\opennn\convolutional_layer.h" />
    <ClInclude Include="..\opennn\correlations.h" />
    <ClInclude Include="..\opennn\cross_entropy_error.h" />
    <ClInclude Include="..\opennn\data_set.h" />
    <ClInclude Include="..\opennn\genetic_algorithm.h" />
    <ClInclude Include="..\opennn\gradient_descent.h" />
    <ClInclude Include="..\opennn\growing_inputs.h" />
    <ClInclude Include="..\opennn\growing_neurons.h" />
    <ClInclude Include="..\opennn\inputs_selection.h" />
    <ClInclude Include="..\opennn\layer.h" />
    <ClInclude Include="..\opennn\learning_rate_algorithm.h" />
    <ClInclude Include="..\opennn\levenberg_marquardt_algorithm.h" />
    <ClInclude Include="..\opennn\long_short_term_memory_layer.h" />
    <ClInclude Include="..\opennn\loss_index.h" />
    <ClInclude Include="..\opennn\mean_squared_error.h" />
    <ClInclude Include="..\opennn\minkowski_error.h" />
    <ClInclude Include="..\opennn\model_selection.h" />
    <ClInclude Include="..\opennn\neural_network.h" />
    <ClInclude Include="..\opennn\neurons_selection.h" />
    <ClInclude Include="..\opennn\normalized_squared_error.h" />
    <ClInclude Include="..\opennn\numerical_differentiation.h" />
    <ClInclude Include="..\opennn\opennn.h" />
    <ClInclude Include="..\opennn\opennn_strings.h" />
    <ClInclude Include="..\opennn\optimization_algorithm.h" />
    <ClInclude Include="..\opennn\perceptron_layer.h" />
    <ClInclude Include="..\opennn\pooling_layer.h" />
    <ClInclude Include="..\opennn\principal_components_layer.h" />
    <ClInclude Include="..\opennn\probabilistic_layer.h" />
    <ClInclude Include="..\opennn\pruning_inputs.h" />
    <ClInclude Include="..\opennn\quasi_newton_method.h" />
    <ClInclude Include="..\opennn\recurrent_layer.h" />
    <ClInclude Include="..\opennn\response_optimization.h" />
    <ClInclude Include="..\opennn\scaling_layer.h" />
    <ClInclude Include="..\opennn\statistics.h" />
    <ClInclude Include="..\opennn\stochastic_gradient_descent.h" />
    <ClInclude Include="..\opennn\sum_squared_error.h" />
    <ClInclude Include="..\opennn\testing_analysis.h" />
    <ClInclude Include="..\opennn\tinyxml2.h" />
    <ClInclude Include="..\opennn\training_strategy.h" />
    <ClInclude Include="..\opennn\unit_testing.h" />
    <ClInclude Include="..\opennn\unscaling_layer.h" />
    <ClInclude Include="..\opennn\weighted_squared_error.h" />
  </ItemGroup>
  <ItemGroup>
    <ClCompile Include="..\opennn\adaptive_moment_estimation.cpp" />
    <ClCompile Include="..\opennn\bounding_layer.cpp" />
    <ClCompile Include="..\opennn\conjugate_gradient.cpp" />
    <ClCompile Include="..\opennn\convolutional_layer.cpp" />
    <ClCompile Include="..\opennn\correlations.cpp" />
    <ClCompile Include="..\opennn\cross_entropy_error.cpp" />
    <ClCompile Include="..\opennn\data_set.cpp" />
    <ClCompile Include="..\opennn\genetic_algorithm.cpp" />
    <ClCompile Include="..\opennn\gradient_descent.cpp" />
    <ClCompile Include="..\opennn\growing_inputs.cpp" />
    <ClCompile Include="..\opennn\growing_neurons.cpp" />
    <ClCompile Include="..\opennn\inputs_selection.cpp" />
    <ClCompile Include="..\opennn\layer.cpp" />
    <ClCompile Include="..\opennn\learning_rate_algorithm.cpp" />
    <ClCompile Include="..\opennn\levenberg_marquardt_algorithm.cpp" />
    <ClCompile Include="..\opennn\long_short_term_memory_layer.cpp" />
    <ClCompile Include="..\opennn\loss_index.cpp" />
    <ClCompile Include="..\opennn\mean_squared_error.cpp" />
    <ClCompile Include="..\opennn\minkowski_error.cpp" />
    <ClCompile Include="..\opennn\model_selection.cpp" />
    <ClCompile Include="..\opennn\neural_network.cpp" />
    <ClCompile Include="..\opennn\neurons_selection.cpp" />
    <ClCompile Include="..\opennn\normalized_squared_error.cpp" />
    <ClCompile Include="..\opennn\numerical_differentiation.cpp" />
    <ClCompile Include="..\opennn\opennn_strings.cpp" />
    <ClCompile Include="..\opennn\optimization_algorithm.cpp" />
    <ClCompile Include="..\opennn\perceptron_layer.cpp" />
    <ClCompile Include="..\opennn\pooling_layer.cpp" />
    <ClCompile Include="..\opennn\principal_components_layer.cpp" />
    <ClCompile Include="..\opennn\probabilistic_layer.cpp" />
    <ClCompile Include="..\opennn\pruning_inputs.cpp" />
    <ClCompile Include="..\opennn\quasi_newton_method.cpp" />
    <ClCompile Include="..\opennn\recurrent_layer.cpp" />
    <ClCompile Include="..\opennn\response_optimization.cpp" />
    <ClCompile Include="..\opennn\scaling_layer.cpp" />
    <ClCompile Include="..\opennn\statistics.cpp" />
    <ClCompile Include="..\opennn\stochastic_gradient_descent.cpp" />
    <ClCompile Include="..\opennn\sum_squared_error.cpp" />
    <ClCompile Include="..\opennn\testing_analysis.cpp" />
    <ClCompile Include="..\opennn\tinyxml2.cpp" />
    <ClCompile Include="..\opennn\training_strategy.cpp" />
    <ClCompile Include="..\opennn\unit_testing.cpp" />
    <ClCompile Include="..\opennn\unscaling_layer.cpp" />
    <ClCompile Include="..\opennn\weighted_squared_error.cpp" />
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <ProjectGuid>{58C46ADE-B923-4FA0-B033-CC461F6035CC}</ProjectGuid>
    <Keyword>Win32Proj</Keyword>
    <RootNamespace>OpenNN</RootNamespace>
    <WindowsTargetPlatformVersion>10.0</WindowsTargetPlatformVersion>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'" Label="Configuration">
    <ConfigurationType>StaticLibrary</ConfigurationType>
    <UseDebugLibraries>true</UseDebugLibraries>
    <CharacterSet>Unicode</CharacterSet>
    <PlatformToolset>v142</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'" Label="Configuration">
    <ConfigurationType>StaticLibrary</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <WholeProgramOptimization>true</WholeProgramOptimization>
    <CharacterSet>Unicode</CharacterSet>
    <PlatformToolset>v142</PlatformToolset>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <ImportGroup Label="ExtensionSettings">
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <PropertyGroup Label="UserMacros" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <OutDir>C:\opennn-build\$(Configuration)\</OutDir>
    <IntDir>C:\opennn-build\$(Configuration)\$(ProjectName)\</IntDir>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <OutDir>C:\opennn-build\$(Configuration)\</OutDir>
    <IntDir>C:\opennn-build\$(Configuration)\$(ProjectName)\</IntDir>
  </PropertyGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <ClCompile>
      <PrecompiledHeader>
      </PrecompiledHeader>
      <WarningLevel>Level4</WarningLevel>
      <Optimization>Disabled</Optimization>
      <PreprocessorDefinitions>WIN32;_DEBUG;_LIB;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <RuntimeLibrary>MultiThreadedDebug</RuntimeLibrary>
    </ClCompile>
    <Link>
      <SubSystem>Windows</SubSystem>
      <GenerateDebugInformation>true</GenerateDebugInformation>
    </Link>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <ClCompile>
      <WarningLevel>Level4</WarningLevel>
      <PrecompiledHeader>
      </PrecompiledHeader>
      <Optimization>MaxSpeed</Optimization>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <PreprocessorDefinitions>WIN32;NDEBUG;_LIB;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <RuntimeLibrary>MultiThreaded</RuntimeLibrary>
    </ClCompile>
    <Link>
      <SubSystem>Windows</SubSystem>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <OptimizeReferences>true</OptimizeReferences>
    </Link>
  </ItemDefinitionGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
  <ImportGroup Label="ExtensionTargets">
  </ImportGroup>
</Project>