<?xml version="1.0" encoding="UTF-8"?>
<DEFECTS>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\opennn\</FILEPATH>
      <FILENAME>tinyxml2.h</FILENAME>
      <LINE>1324</LINE>
      <COLUMN>8</COLUMN>
    </SFA>
    <DEFECTCODE>26812</DEFECTCODE>
    <DESCRIPTION>The enum type 'tinyxml2::XMLError' is unscoped. Prefer 'enum class' over 'enum' (Enum.3).</DESCRIPTION>
    <FUNCTION>tinyxml2::XMLElement::QueryIntAttribute</FUNCTION>
    <DECORATED>?QueryIntAttribute@XMLElement@tinyxml2@@QEBA?AW4XMLError@2@PEBDPEAH@Z</DECORATED>
    <FUNCLINE>1319</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\opennn\</FILEPATH>
      <FILENAME>tinyxml2.h</FILENAME>
      <LINE>1609</LINE>
      <COLUMN>8</COLUMN>
    </SFA>
    <DEFECTCODE>26812</DEFECTCODE>
    <DESCRIPTION>The enum type 'tinyxml2::XMLElement::ElementClosingType' is unscoped. Prefer 'enum class' over 'enum' (Enum.3).</DESCRIPTION>
    <FUNCTION>tinyxml2::XMLElement::ClosingType</FUNCTION>
    <DECORATED>?ClosingType@XMLElement@tinyxml2@@QEBA?AW4ElementClosingType@12@XZ</DECORATED>
    <FUNCLINE>1608</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\opennn\</FILEPATH>
      <FILENAME>tinyxml2.h</FILENAME>
      <LINE>1728</LINE>
      <COLUMN>8</COLUMN>
    </SFA>
    <DEFECTCODE>26812</DEFECTCODE>
    <DESCRIPTION>The enum type 'tinyxml2::Whitespace' is unscoped. Prefer 'enum class' over 'enum' (Enum.3).</DESCRIPTION>
    <FUNCTION>tinyxml2::XMLDocument::WhitespaceMode</FUNCTION>
    <DECORATED>?WhitespaceMode@XMLDocument@tinyxml2@@QEBA?AW4Whitespace@2@XZ</DECORATED>
    <FUNCLINE>1727</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\Eigen\src\Core\arch\SSE\</FILEPATH>
      <FILENAME>Complex.h</FILENAME>
      <LINE>20</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'Eigen::internal::Packet2cf::v' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>Eigen::internal::Packet2cf::{ctor}</FUNCTION>
    <DECORATED>??0Packet2cf@internal@Eigen@@QEAA@XZ</DECORATED>
    <FUNCLINE>20</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>Eigen::internal::Packet2cf::v</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\Eigen\src\Core\arch\SSE\</FILEPATH>
      <FILENAME>Complex.h</FILENAME>
      <LINE>251</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'Eigen::internal::Packet1cd::v' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>Eigen::internal::Packet1cd::{ctor}</FUNCTION>
    <DECORATED>??0Packet1cd@internal@Eigen@@QEAA@XZ</DECORATED>
    <FUNCLINE>251</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>Eigen::internal::Packet1cd::v</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\Eigen\src\Core\arch\CUDA\</FILEPATH>
      <FILENAME>Half.h</FILENAME>
      <LINE>388</LINE>
      <COLUMN>39</COLUMN>
    </SFA>
    <DEFECTCODE>26450</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: '&lt;&lt;' operation causes overflow at compile time. Use a wider type to store the operands (io.1).</DESCRIPTION>
    <FUNCTION>Eigen::half_impl::float_to_half_rtne</FUNCTION>
    <DECORATED>?float_to_half_rtne@half_impl@Eigen@@YA?AU__half_raw@12@M@Z</DECORATED>
    <FUNCLINE>345</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\Eigen\src\Core\products\</FILEPATH>
      <FILENAME>GeneralBlockPanelKernel.h</FILENAME>
      <LINE>55</LINE>
      <COLUMN>12</COLUMN>
    </SFA>
    <DEFECTCODE>26812</DEFECTCODE>
    <DESCRIPTION>The enum type 'Eigen::Action' is unscoped. Prefer 'enum class' over 'enum' (Enum.3).</DESCRIPTION>
    <FUNCTION>Eigen::internal::manage_caching_sizes</FUNCTION>
    <DECORATED>?manage_caching_sizes@internal@Eigen@@YAXW4Action@2@PEA_J11@Z</DECORATED>
    <FUNCLINE>55</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorDeviceThreadPool.h</FILENAME>
      <LINE>214</LINE>
      <COLUMN>47</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::ThreadPoolDevice::parallelFor</FUNCTION>
    <DECORATED>?parallelFor@ThreadPoolDevice@Eigen@@QEBAX_JAEBVTensorOpCost@2@V?$function@$$A6A_J_J@Z@std@@V?$function@$$A6AX_J0@Z@5@@Z</DECORATED>
    <FUNCLINE>182</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorDeviceThreadPool.h</FILENAME>
      <LINE>236</LINE>
      <COLUMN>57</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::ThreadPoolDevice::parallelFor</FUNCTION>
    <DECORATED>?parallelFor@ThreadPoolDevice@Eigen@@QEBAX_JAEBVTensorOpCost@2@V?$function@$$A6A_J_J@Z@std@@V?$function@$$A6AX_J0@Z@5@@Z</DECORATED>
    <FUNCLINE>182</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\opennn\</FILEPATH>
      <FILENAME>statistics.h</FILENAME>
      <LINE>113</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'OpenNN::BoxPlot::maximum' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>OpenNN::BoxPlot::{ctor}</FUNCTION>
    <DECORATED>??0BoxPlot@OpenNN@@QEAA@XZ</DECORATED>
    <FUNCLINE>113</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>OpenNN::BoxPlot::maximum</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\opennn\</FILEPATH>
      <FILENAME>statistics.h</FILENAME>
      <LINE>113</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'OpenNN::BoxPlot::minimum' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>OpenNN::BoxPlot::{ctor}</FUNCTION>
    <DECORATED>??0BoxPlot@OpenNN@@QEAA@XZ</DECORATED>
    <FUNCLINE>113</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>OpenNN::BoxPlot::minimum</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\opennn\</FILEPATH>
      <FILENAME>statistics.h</FILENAME>
      <LINE>113</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'OpenNN::BoxPlot::median' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>OpenNN::BoxPlot::{ctor}</FUNCTION>
    <DECORATED>??0BoxPlot@OpenNN@@QEAA@XZ</DECORATED>
    <FUNCLINE>113</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>OpenNN::BoxPlot::median</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\opennn\</FILEPATH>
      <FILENAME>statistics.h</FILENAME>
      <LINE>113</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'OpenNN::BoxPlot::third_quartile' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>OpenNN::BoxPlot::{ctor}</FUNCTION>
    <DECORATED>??0BoxPlot@OpenNN@@QEAA@XZ</DECORATED>
    <FUNCLINE>113</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>OpenNN::BoxPlot::third_quartile</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\opennn\</FILEPATH>
      <FILENAME>statistics.h</FILENAME>
      <LINE>113</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'OpenNN::BoxPlot::first_quartile' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>OpenNN::BoxPlot::{ctor}</FUNCTION>
    <DECORATED>??0BoxPlot@OpenNN@@QEAA@XZ</DECORATED>
    <FUNCLINE>113</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>OpenNN::BoxPlot::first_quartile</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\opennn\</FILEPATH>
      <FILENAME>correlations.h</FILENAME>
      <LINE>45</LINE>
      <COLUMN>4</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'OpenNN::RegressionResults::regression_type' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>OpenNN::RegressionResults::{ctor}</FUNCTION>
    <DECORATED>??0RegressionResults@OpenNN@@QEAA@XZ</DECORATED>
    <FUNCLINE>45</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>OpenNN::RegressionResults::regression_type</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\opennn\</FILEPATH>
      <FILENAME>correlations.h</FILENAME>
      <LINE>90</LINE>
      <COLUMN>4</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'OpenNN::CorrelationResults::correlation_type' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>OpenNN::CorrelationResults::{ctor}</FUNCTION>
    <DECORATED>??0CorrelationResults@OpenNN@@QEAA@XZ</DECORATED>
    <FUNCLINE>90</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>OpenNN::CorrelationResults::correlation_type</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\opennn\</FILEPATH>
      <FILENAME>data_set.h</FILENAME>
      <LINE>234</LINE>
      <COLUMN>57</COLUMN>
    </SFA>
    <DEFECTCODE>26812</DEFECTCODE>
    <DESCRIPTION>The enum type 'OpenNN::DataSet::ColumnType' is unscoped. Prefer 'enum class' over 'enum' (Enum.3).</DESCRIPTION>
    <FUNCTION>OpenNN::DataSet::get_column_type</FUNCTION>
    <DECORATED>?get_column_type@DataSet@OpenNN@@QEBA?AW4ColumnType@12@AEB_J@Z</DECORATED>
    <FUNCLINE>234</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\opennn\</FILEPATH>
      <FILENAME>layer.h</FILENAME>
      <LINE>232</LINE>
      <COLUMN>22</COLUMN>
    </SFA>
    <DEFECTCODE>26812</DEFECTCODE>
    <DESCRIPTION>The enum type 'OpenNN::Layer::Type' is unscoped. Prefer 'enum class' over 'enum' (Enum.3).</DESCRIPTION>
    <FUNCTION>OpenNN::Layer::{ctor}</FUNCTION>
    <DECORATED>??0Layer@OpenNN@@QEAA@XZ</DECORATED>
    <FUNCLINE>109</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\opennn\</FILEPATH>
      <FILENAME>convolutional_layer.h</FILENAME>
      <LINE>256</LINE>
      <COLUMN>87</COLUMN>
    </SFA>
    <DEFECTCODE>6001</DEFECTCODE>
    <DESCRIPTION>Using uninitialized memory 'outputs_columns_number'.</DESCRIPTION>
    <FUNCTION>OpenNN::ConvolutionalLayerForwardPropagation::set</FUNCTION>
    <DECORATED>?set@ConvolutionalLayerForwardPropagation@OpenNN@@UEAAXAEB_J@Z</DECORATED>
    <FUNCLINE>248</FUNCLINE>
    <PROBABILITY>1</PROBABILITY>
    <RANK>3</RANK>
    <CATEGORY>
      <RULECATEGORY>mspft</RULECATEGORY>
    </CATEGORY>
    <PATH>
      <SFA>
        <FILEPATH>D:\opennn\opennn\</FILEPATH>
        <FILENAME>convolutional_layer.h</FILENAME>
        <LINE>250</LINE>
        <COLUMN>29</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\opennn\opennn\</FILEPATH>
        <FILENAME>convolutional_layer.h</FILENAME>
        <LINE>252</LINE>
        <COLUMN>20</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\opennn\opennn\</FILEPATH>
        <FILENAME>convolutional_layer.h</FILENAME>
        <LINE>254</LINE>
        <COLUMN>14</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\opennn\opennn\</FILEPATH>
        <FILENAME>convolutional_layer.h</FILENAME>
        <LINE>254</LINE>
        <COLUMN>30</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\opennn\opennn\</FILEPATH>
        <FILENAME>convolutional_layer.h</FILENAME>
        <LINE>254</LINE>
        <COLUMN>51</COLUMN>
        <KEYEVENT>
          <ID>1</ID>
          <KIND>declaration</KIND>
          <IMPORTANCE>Essential</IMPORTANCE>
          <MESSAGE>'outputs_columns_number' is not initialized</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\opennn\opennn\</FILEPATH>
        <FILENAME>convolutional_layer.h</FILENAME>
        <LINE>256</LINE>
        <COLUMN>27</COLUMN>
        <KEYEVENT>
          <ID>2</ID>
          <KIND>declaration</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>'outputs_columns_number' is an In/Out argument to 'Eigen::Tensor&lt;float,4,0,__int64&gt;::resize' (declared at d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\tensor.h:423)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\opennn\opennn\</FILEPATH>
        <FILENAME>convolutional_layer.h</FILENAME>
        <LINE>257</LINE>
        <COLUMN>26</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\opennn\opennn\</FILEPATH>
        <FILENAME>convolutional_layer.h</FILENAME>
        <LINE>259</LINE>
        <COLUMN>38</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\opennn\opennn\</FILEPATH>
        <FILENAME>convolutional_layer.h</FILENAME>
        <LINE>260</LINE>
        <COLUMN>4</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\opennn\opennn\</FILEPATH>
        <FILENAME>convolutional_layer.h</FILENAME>
        <LINE>256</LINE>
        <COLUMN>87</COLUMN>
        <KEYEVENT>
          <ID>3</ID>
          <KIND>usage</KIND>
          <IMPORTANCE>Essential</IMPORTANCE>
          <MESSAGE>'outputs_columns_number' is used, but may not have been initialized</MESSAGE>
        </KEYEVENT>
      </SFA>
    </PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\opennn\</FILEPATH>
      <FILENAME>convolutional_layer.h</FILENAME>
      <LINE>256</LINE>
      <COLUMN>66</COLUMN>
    </SFA>
    <DEFECTCODE>6001</DEFECTCODE>
    <DESCRIPTION>Using uninitialized memory 'outputs_rows_number'.</DESCRIPTION>
    <FUNCTION>OpenNN::ConvolutionalLayerForwardPropagation::set</FUNCTION>
    <DECORATED>?set@ConvolutionalLayerForwardPropagation@OpenNN@@UEAAXAEB_J@Z</DECORATED>
    <FUNCLINE>248</FUNCLINE>
    <PROBABILITY>1</PROBABILITY>
    <RANK>3</RANK>
    <CATEGORY>
      <RULECATEGORY>mspft</RULECATEGORY>
    </CATEGORY>
    <PATH>
      <SFA>
        <FILEPATH>D:\opennn\opennn\</FILEPATH>
        <FILENAME>convolutional_layer.h</FILENAME>
        <LINE>250</LINE>
        <COLUMN>29</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\opennn\opennn\</FILEPATH>
        <FILENAME>convolutional_layer.h</FILENAME>
        <LINE>252</LINE>
        <COLUMN>20</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\opennn\opennn\</FILEPATH>
        <FILENAME>convolutional_layer.h</FILENAME>
        <LINE>254</LINE>
        <COLUMN>14</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\opennn\opennn\</FILEPATH>
        <FILENAME>convolutional_layer.h</FILENAME>
        <LINE>254</LINE>
        <COLUMN>30</COLUMN>
        <KEYEVENT>
          <ID>1</ID>
          <KIND>declaration</KIND>
          <IMPORTANCE>Essential</IMPORTANCE>
          <MESSAGE>'outputs_rows_number' is not initialized</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\opennn\opennn\</FILEPATH>
        <FILENAME>convolutional_layer.h</FILENAME>
        <LINE>254</LINE>
        <COLUMN>51</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\opennn\opennn\</FILEPATH>
        <FILENAME>convolutional_layer.h</FILENAME>
        <LINE>256</LINE>
        <COLUMN>27</COLUMN>
        <KEYEVENT>
          <ID>2</ID>
          <KIND>declaration</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>'outputs_rows_number' is an In/Out argument to 'Eigen::Tensor&lt;float,4,0,__int64&gt;::resize' (declared at d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\tensor.h:423)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\opennn\opennn\</FILEPATH>
        <FILENAME>convolutional_layer.h</FILENAME>
        <LINE>257</LINE>
        <COLUMN>26</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\opennn\opennn\</FILEPATH>
        <FILENAME>convolutional_layer.h</FILENAME>
        <LINE>259</LINE>
        <COLUMN>38</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\opennn\opennn\</FILEPATH>
        <FILENAME>convolutional_layer.h</FILENAME>
        <LINE>260</LINE>
        <COLUMN>4</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\opennn\opennn\</FILEPATH>
        <FILENAME>convolutional_layer.h</FILENAME>
        <LINE>256</LINE>
        <COLUMN>66</COLUMN>
        <KEYEVENT>
          <ID>3</ID>
          <KIND>usage</KIND>
          <IMPORTANCE>Essential</IMPORTANCE>
          <MESSAGE>'outputs_rows_number' is used, but may not have been initialized</MESSAGE>
        </KEYEVENT>
      </SFA>
    </PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\opennn\</FILEPATH>
      <FILENAME>convolutional_layer.h</FILENAME>
      <LINE>256</LINE>
      <COLUMN>50</COLUMN>
    </SFA>
    <DEFECTCODE>6001</DEFECTCODE>
    <DESCRIPTION>Using uninitialized memory 'kernels_number'.</DESCRIPTION>
    <FUNCTION>OpenNN::ConvolutionalLayerForwardPropagation::set</FUNCTION>
    <DECORATED>?set@ConvolutionalLayerForwardPropagation@OpenNN@@UEAAXAEB_J@Z</DECORATED>
    <FUNCLINE>248</FUNCLINE>
    <PROBABILITY>1</PROBABILITY>
    <RANK>3</RANK>
    <CATEGORY>
      <RULECATEGORY>mspft</RULECATEGORY>
    </CATEGORY>
    <PATH>
      <SFA>
        <FILEPATH>D:\opennn\opennn\</FILEPATH>
        <FILENAME>convolutional_layer.h</FILENAME>
        <LINE>250</LINE>
        <COLUMN>29</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\opennn\opennn\</FILEPATH>
        <FILENAME>convolutional_layer.h</FILENAME>
        <LINE>252</LINE>
        <COLUMN>20</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\opennn\opennn\</FILEPATH>
        <FILENAME>convolutional_layer.h</FILENAME>
        <LINE>254</LINE>
        <COLUMN>14</COLUMN>
        <KEYEVENT>
          <ID>1</ID>
          <KIND>declaration</KIND>
          <IMPORTANCE>Essential</IMPORTANCE>
          <MESSAGE>'kernels_number' is not initialized</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\opennn\opennn\</FILEPATH>
        <FILENAME>convolutional_layer.h</FILENAME>
        <LINE>254</LINE>
        <COLUMN>30</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\opennn\opennn\</FILEPATH>
        <FILENAME>convolutional_layer.h</FILENAME>
        <LINE>254</LINE>
        <COLUMN>51</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\opennn\opennn\</FILEPATH>
        <FILENAME>convolutional_layer.h</FILENAME>
        <LINE>256</LINE>
        <COLUMN>27</COLUMN>
        <KEYEVENT>
          <ID>2</ID>
          <KIND>declaration</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>'kernels_number' is an In/Out argument to 'Eigen::Tensor&lt;float,4,0,__int64&gt;::resize' (declared at d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\tensor.h:423)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>D:\opennn\opennn\</FILEPATH>
        <FILENAME>convolutional_layer.h</FILENAME>
        <LINE>257</LINE>
        <COLUMN>26</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\opennn\opennn\</FILEPATH>
        <FILENAME>convolutional_layer.h</FILENAME>
        <LINE>259</LINE>
        <COLUMN>38</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\opennn\opennn\</FILEPATH>
        <FILENAME>convolutional_layer.h</FILENAME>
        <LINE>260</LINE>
        <COLUMN>4</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>D:\opennn\opennn\</FILEPATH>
        <FILENAME>convolutional_layer.h</FILENAME>
        <LINE>256</LINE>
        <COLUMN>50</COLUMN>
        <KEYEVENT>
          <ID>3</ID>
          <KIND>usage</KIND>
          <IMPORTANCE>Essential</IMPORTANCE>
          <MESSAGE>'kernels_number' is used, but may not have been initialized</MESSAGE>
        </KEYEVENT>
      </SFA>
    </PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\opennn\</FILEPATH>
      <FILENAME>loss_index.h</FILENAME>
      <LINE>292</LINE>
      <COLUMN>4</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'OpenNN::LossIndexBackPropagation::error' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>OpenNN::LossIndexBackPropagation::{ctor}</FUNCTION>
    <DECORATED>??0LossIndexBackPropagation@OpenNN@@QEAA@XZ</DECORATED>
    <FUNCLINE>292</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>OpenNN::LossIndexBackPropagation::error</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\opennn\</FILEPATH>
      <FILENAME>loss_index.h</FILENAME>
      <LINE>292</LINE>
      <COLUMN>4</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'OpenNN::LossIndexBackPropagation::loss' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>OpenNN::LossIndexBackPropagation::{ctor}</FUNCTION>
    <DECORATED>??0LossIndexBackPropagation@OpenNN@@QEAA@XZ</DECORATED>
    <FUNCLINE>292</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>OpenNN::LossIndexBackPropagation::loss</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\opennn\</FILEPATH>
      <FILENAME>loss_index.h</FILENAME>
      <LINE>294</LINE>
      <COLUMN>4</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'OpenNN::LossIndexBackPropagation::error' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>OpenNN::LossIndexBackPropagation::{ctor}</FUNCTION>
    <DECORATED>??0LossIndexBackPropagation@OpenNN@@QEAA@AEB_JPEAVLossIndex@1@@Z</DECORATED>
    <FUNCLINE>294</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>OpenNN::LossIndexBackPropagation::error</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\opennn\</FILEPATH>
      <FILENAME>loss_index.h</FILENAME>
      <LINE>294</LINE>
      <COLUMN>4</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'OpenNN::LossIndexBackPropagation::loss' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>OpenNN::LossIndexBackPropagation::{ctor}</FUNCTION>
    <DECORATED>??0LossIndexBackPropagation@OpenNN@@QEAA@AEB_JPEAVLossIndex@1@@Z</DECORATED>
    <FUNCLINE>294</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>OpenNN::LossIndexBackPropagation::loss</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\opennn\</FILEPATH>
      <FILENAME>loss_index.h</FILENAME>
      <LINE>379</LINE>
      <COLUMN>4</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'OpenNN::LossIndexBackPropagationLM::error' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>OpenNN::LossIndexBackPropagationLM::{ctor}</FUNCTION>
    <DECORATED>??0LossIndexBackPropagationLM@OpenNN@@QEAA@XZ</DECORATED>
    <FUNCLINE>379</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>OpenNN::LossIndexBackPropagationLM::error</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\opennn\</FILEPATH>
      <FILENAME>loss_index.h</FILENAME>
      <LINE>379</LINE>
      <COLUMN>4</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'OpenNN::LossIndexBackPropagationLM::loss' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>OpenNN::LossIndexBackPropagationLM::{ctor}</FUNCTION>
    <DECORATED>??0LossIndexBackPropagationLM@OpenNN@@QEAA@XZ</DECORATED>
    <FUNCLINE>379</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>OpenNN::LossIndexBackPropagationLM::loss</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\opennn\</FILEPATH>
      <FILENAME>loss_index.h</FILENAME>
      <LINE>381</LINE>
      <COLUMN>4</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'OpenNN::LossIndexBackPropagationLM::error' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>OpenNN::LossIndexBackPropagationLM::{ctor}</FUNCTION>
    <DECORATED>??0LossIndexBackPropagationLM@OpenNN@@QEAA@AEB_J0@Z</DECORATED>
    <FUNCLINE>381</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>OpenNN::LossIndexBackPropagationLM::error</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\opennn\</FILEPATH>
      <FILENAME>optimization_algorithm.h</FILENAME>
      <LINE>231</LINE>
      <COLUMN>4</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'OpenNN::TrainingResults::epochs_number' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>OpenNN::TrainingResults::{ctor}</FUNCTION>
    <DECORATED>??0TrainingResults@OpenNN@@QEAA@XZ</DECORATED>
    <FUNCLINE>231</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>OpenNN::TrainingResults::epochs_number</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\opennn\</FILEPATH>
      <FILENAME>optimization_algorithm.h</FILENAME>
      <LINE>231</LINE>
      <COLUMN>4</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'OpenNN::TrainingResults::final_gradient_norm' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>OpenNN::TrainingResults::{ctor}</FUNCTION>
    <DECORATED>??0TrainingResults@OpenNN@@QEAA@XZ</DECORATED>
    <FUNCLINE>231</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>OpenNN::TrainingResults::final_gradient_norm</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\opennn\</FILEPATH>
      <FILENAME>optimization_algorithm.h</FILENAME>
      <LINE>231</LINE>
      <COLUMN>4</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'OpenNN::TrainingResults::selection_error' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>OpenNN::TrainingResults::{ctor}</FUNCTION>
    <DECORATED>??0TrainingResults@OpenNN@@QEAA@XZ</DECORATED>
    <FUNCLINE>231</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>OpenNN::TrainingResults::selection_error</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\opennn\</FILEPATH>
      <FILENAME>optimization_algorithm.h</FILENAME>
      <LINE>231</LINE>
      <COLUMN>4</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'OpenNN::TrainingResults::training_error' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>OpenNN::TrainingResults::{ctor}</FUNCTION>
    <DECORATED>??0TrainingResults@OpenNN@@QEAA@XZ</DECORATED>
    <FUNCLINE>231</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>OpenNN::TrainingResults::training_error</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\opennn\</FILEPATH>
      <FILENAME>optimization_algorithm.h</FILENAME>
      <LINE>231</LINE>
      <COLUMN>4</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'OpenNN::TrainingResults::final_parameters_norm' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>OpenNN::TrainingResults::{ctor}</FUNCTION>
    <DECORATED>??0TrainingResults@OpenNN@@QEAA@XZ</DECORATED>
    <FUNCLINE>231</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>OpenNN::TrainingResults::final_parameters_norm</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\opennn\</FILEPATH>
      <FILENAME>optimization_algorithm.h</FILENAME>
      <LINE>231</LINE>
      <COLUMN>4</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'OpenNN::TrainingResults::stopping_condition' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>OpenNN::TrainingResults::{ctor}</FUNCTION>
    <DECORATED>??0TrainingResults@OpenNN@@QEAA@XZ</DECORATED>
    <FUNCLINE>231</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>OpenNN::TrainingResults::stopping_condition</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\opennn\</FILEPATH>
      <FILENAME>correlations.cpp</FILENAME>
      <LINE>780</LINE>
      <COLUMN>0</COLUMN>
    </SFA>
    <DEFECTCODE>26812</DEFECTCODE>
    <DESCRIPTION>The enum type 'OpenNN::RegressionMethod' is unscoped. Prefer 'enum class' over 'enum' (Enum.3).</DESCRIPTION>
    <FUNCTION>OpenNN::RegressionResults::{ctor}</FUNCTION>
    <DECORATED>??0RegressionResults@OpenNN@@QEAA@AEBU01@@Z</DECORATED>
    <FUNCLINE>78</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\opennn\</FILEPATH>
      <FILENAME>correlations.cpp</FILENAME>
      <LINE>1001</LINE>
      <COLUMN>129</COLUMN>
    </SFA>
    <DEFECTCODE>26812</DEFECTCODE>
    <DESCRIPTION>The enum type 'OpenNN::PerceptronLayer::ActivationFunction' is unscoped. Prefer 'enum class' over 'enum' (Enum.3).</DESCRIPTION>
    <FUNCTION>OpenNN::logistic_regression</FUNCTION>
    <DECORATED>?logistic_regression@OpenNN@@YA?AURegressionResults@1@PEBUThreadPoolDevice@Eigen@@AEBV?$Tensor@M$00$0A@_J@4@1@Z</DECORATED>
    <FUNCLINE>942</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\opennn\</FILEPATH>
      <FILENAME>correlations.cpp</FILENAME>
      <LINE>1009</LINE>
      <COLUMN>84</COLUMN>
    </SFA>
    <DEFECTCODE>26812</DEFECTCODE>
    <DESCRIPTION>The enum type 'OpenNN::TrainingStrategy::OptimizationMethod' is unscoped. Prefer 'enum class' over 'enum' (Enum.3).</DESCRIPTION>
    <FUNCTION>OpenNN::logistic_regression</FUNCTION>
    <DECORATED>?logistic_regression@OpenNN@@YA?AURegressionResults@1@PEBUThreadPoolDevice@Eigen@@AEBV?$Tensor@M$00$0A@_J@4@1@Z</DECORATED>
    <FUNCLINE>942</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\opennn\</FILEPATH>
      <FILENAME>correlations.cpp</FILENAME>
      <LINE>1010</LINE>
      <COLUMN>68</COLUMN>
    </SFA>
    <DEFECTCODE>26812</DEFECTCODE>
    <DESCRIPTION>The enum type 'OpenNN::TrainingStrategy::LossMethod' is unscoped. Prefer 'enum class' over 'enum' (Enum.3).</DESCRIPTION>
    <FUNCTION>OpenNN::logistic_regression</FUNCTION>
    <DECORATED>?logistic_regression@OpenNN@@YA?AURegressionResults@1@PEBUThreadPoolDevice@Eigen@@AEBV?$Tensor@M$00$0A@_J@4@1@Z</DECORATED>
    <FUNCLINE>942</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\opennn\</FILEPATH>
      <FILENAME>correlations.cpp</FILENAME>
      <LINE>1107</LINE>
      <COLUMN>0</COLUMN>
    </SFA>
    <DEFECTCODE>26812</DEFECTCODE>
    <DESCRIPTION>The enum type 'OpenNN::CorrelationType' is unscoped. Prefer 'enum class' over 'enum' (Enum.3).</DESCRIPTION>
    <FUNCTION>OpenNN::CorrelationResults::{ctor}</FUNCTION>
    <DECORATED>??0CorrelationResults@OpenNN@@QEAA@AEBU01@@Z</DECORATED>
    <FUNCLINE>118</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\opennn\</FILEPATH>
      <FILENAME>correlations.cpp</FILENAME>
      <LINE>1332</LINE>
      <COLUMN>48</COLUMN>
    </SFA>
    <DEFECTCODE>26812</DEFECTCODE>
    <DESCRIPTION>The enum type 'OpenNN::NeuralNetwork::ProjectType' is unscoped. Prefer 'enum class' over 'enum' (Enum.3).</DESCRIPTION>
    <FUNCTION>OpenNN::logistic_correlations</FUNCTION>
    <DECORATED>?logistic_correlations@OpenNN@@YA?AUCorrelationResults@1@PEBUThreadPoolDevice@Eigen@@AEBV?$Tensor@M$00$0A@_J@4@1@Z</DECORATED>
    <FUNCLINE>1226</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\ThreadPool\</FILEPATH>
      <FILENAME>EventCount.h</FILENAME>
      <LINE>183</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'Eigen::EventCount::Waiter::epoch' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>Eigen::EventCount::Waiter::{ctor}</FUNCTION>
    <DECORATED>??0Waiter@EventCount@Eigen@@QEAA@XZ</DECORATED>
    <FUNCLINE>183</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>Eigen::EventCount::Waiter::epoch</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\ThreadPool\</FILEPATH>
      <FILENAME>EventCount.h</FILENAME>
      <LINE>183</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'Eigen::EventCount::Waiter::state' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>Eigen::EventCount::Waiter::{ctor}</FUNCTION>
    <DECORATED>??0Waiter@EventCount@Eigen@@QEAA@XZ</DECORATED>
    <FUNCLINE>183</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>Eigen::EventCount::Waiter::state</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorDimensions.h</FILENAME>
      <LINE>274</LINE>
      <COLUMN>4</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>Ill-defined for-loop:  initial condition does not satisfy test.  Loop body not executed.</DESCRIPTION>
    <FUNCTION>Eigen::DSizes&lt;__int64,0&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$DSizes@_J$0A@@Eigen@@QEAA@XZ</DECORATED>
    <FUNCLINE>273</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\Eigen\src\Core\util\</FILEPATH>
      <FILENAME>Memory.h</FILENAME>
      <LINE>412</LINE>
      <COLUMN>51</COLUMN>
    </SFA>
    <DEFECTCODE>26812</DEFECTCODE>
    <DESCRIPTION>The enum type 'OpenNN::DataSet::VariableUse' is unscoped. Prefer 'enum class' over 'enum' (Enum.3).</DESCRIPTION>
    <FUNCTION>Eigen::internal::conditional_aligned_delete_auto</FUNCTION>
    <DECORATED>??$conditional_aligned_delete_auto@W4VariableUse@DataSet@OpenNN@@$00@internal@Eigen@@YAXPEAW4VariableUse@DataSet@OpenNN@@_K@Z</DECORATED>
    <FUNCLINE>412</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\Eigen\src\Core\</FILEPATH>
      <FILENAME>PlainObjectBase.h</FILENAME>
      <LINE>44</LINE>
      <COLUMN>66</COLUMN>
    </SFA>
    <DEFECTCODE>26454</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: '-' operation produces a negative unsigned result at compile time (io.5).</DESCRIPTION>
    <FUNCTION>Eigen::internal::check_rows_cols_for_overflow&lt;-1&gt;::run</FUNCTION>
    <DECORATED>??$run@_J@?$check_rows_cols_for_overflow@$0?0@internal@Eigen@@SAX_J0@Z</DECORATED>
    <FUNCLINE>40</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>435</LINE>
      <COLUMN>8</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>Ill-defined for-loop:  initial condition does not satisfy test.  Loop body not executed.</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::MaxReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$MaxReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$Tensor@M$00$0A@_J@3@UMakePointer@3@@Eigen@@UDefaultDevice@2@@Eigen@@QEAA@AEBV?$TensorReductionOp@U?$MaxReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$Tensor@M$00$0A@_J@3@UMakePointer@3@@1@AEBUDefaultDevice@1@@Z</DECORATED>
    <FUNCLINE>411</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>440</LINE>
      <COLUMN>8</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>Ill-defined for-loop:  initial condition does not satisfy test.  Loop body not executed.</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::MaxReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$MaxReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$Tensor@M$00$0A@_J@3@UMakePointer@3@@Eigen@@UDefaultDevice@2@@Eigen@@QEAA@AEBV?$TensorReductionOp@U?$MaxReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$Tensor@M$00$0A@_J@3@UMakePointer@3@@1@AEBUDefaultDevice@1@@Z</DECORATED>
    <FUNCLINE>411</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>451</LINE>
      <COLUMN>8</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>Ill-defined for-loop:  initial condition does not satisfy test.  Loop body not executed.</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::MaxReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$MaxReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$Tensor@M$00$0A@_J@3@UMakePointer@3@@Eigen@@UDefaultDevice@2@@Eigen@@QEAA@AEBV?$TensorReductionOp@U?$MaxReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$Tensor@M$00$0A@_J@3@UMakePointer@3@@1@AEBUDefaultDevice@1@@Z</DECORATED>
    <FUNCLINE>411</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>456</LINE>
      <COLUMN>8</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>Ill-defined for-loop:  initial condition does not satisfy test.  Loop body not executed.</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::MaxReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$MaxReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$Tensor@M$00$0A@_J@3@UMakePointer@3@@Eigen@@UDefaultDevice@2@@Eigen@@QEAA@AEBV?$TensorReductionOp@U?$MaxReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$Tensor@M$00$0A@_J@3@UMakePointer@3@@1@AEBUDefaultDevice@1@@Z</DECORATED>
    <FUNCLINE>411</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>411</LINE>
      <COLUMN>20</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::MaxReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::m_outputStrides' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::MaxReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$MaxReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$Tensor@M$00$0A@_J@3@UMakePointer@3@@Eigen@@UDefaultDevice@2@@Eigen@@QEAA@AEBV?$TensorReductionOp@U?$MaxReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$Tensor@M$00$0A@_J@3@UMakePointer@3@@1@AEBUDefaultDevice@1@@Z</DECORATED>
    <FUNCLINE>411</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::MaxReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::m_outputStrides</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>411</LINE>
      <COLUMN>20</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::MaxReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::m_preservedStrides' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::MaxReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$MaxReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$Tensor@M$00$0A@_J@3@UMakePointer@3@@Eigen@@UDefaultDevice@2@@Eigen@@QEAA@AEBV?$TensorReductionOp@U?$MaxReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$Tensor@M$00$0A@_J@3@UMakePointer@3@@1@AEBUDefaultDevice@1@@Z</DECORATED>
    <FUNCLINE>411</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::MaxReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::m_preservedStrides</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>411</LINE>
      <COLUMN>20</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::MaxReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::m_reducedStrides' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::MaxReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$MaxReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$Tensor@M$00$0A@_J@3@UMakePointer@3@@Eigen@@UDefaultDevice@2@@Eigen@@QEAA@AEBV?$TensorReductionOp@U?$MaxReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$Tensor@M$00$0A@_J@3@UMakePointer@3@@1@AEBUDefaultDevice@1@@Z</DECORATED>
    <FUNCLINE>411</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::MaxReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::m_reducedStrides</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>441</LINE>
      <COLUMN>49</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::MaxReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$MaxReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$Tensor@M$00$0A@_J@3@UMakePointer@3@@Eigen@@UDefaultDevice@2@@Eigen@@QEAA@AEBV?$TensorReductionOp@U?$MaxReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$Tensor@M$00$0A@_J@3@UMakePointer@3@@1@AEBUDefaultDevice@1@@Z</DECORATED>
    <FUNCLINE>411</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>441</LINE>
      <COLUMN>71</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::MaxReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$MaxReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$Tensor@M$00$0A@_J@3@UMakePointer@3@@Eigen@@UDefaultDevice@2@@Eigen@@QEAA@AEBV?$TensorReductionOp@U?$MaxReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$Tensor@M$00$0A@_J@3@UMakePointer@3@@1@AEBUDefaultDevice@1@@Z</DECORATED>
    <FUNCLINE>411</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>436</LINE>
      <COLUMN>49</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::MaxReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$MaxReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$Tensor@M$00$0A@_J@3@UMakePointer@3@@Eigen@@UDefaultDevice@2@@Eigen@@QEAA@AEBV?$TensorReductionOp@U?$MaxReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$Tensor@M$00$0A@_J@3@UMakePointer@3@@1@AEBUDefaultDevice@1@@Z</DECORATED>
    <FUNCLINE>411</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>436</LINE>
      <COLUMN>71</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::MaxReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$MaxReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$Tensor@M$00$0A@_J@3@UMakePointer@3@@Eigen@@UDefaultDevice@2@@Eigen@@QEAA@AEBV?$TensorReductionOp@U?$MaxReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$Tensor@M$00$0A@_J@3@UMakePointer@3@@1@AEBUDefaultDevice@1@@Z</DECORATED>
    <FUNCLINE>411</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>457</LINE>
      <COLUMN>45</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::MaxReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$MaxReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$Tensor@M$00$0A@_J@3@UMakePointer@3@@Eigen@@UDefaultDevice@2@@Eigen@@QEAA@AEBV?$TensorReductionOp@U?$MaxReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$Tensor@M$00$0A@_J@3@UMakePointer@3@@1@AEBUDefaultDevice@1@@Z</DECORATED>
    <FUNCLINE>411</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>457</LINE>
      <COLUMN>65</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::MaxReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$MaxReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$Tensor@M$00$0A@_J@3@UMakePointer@3@@Eigen@@UDefaultDevice@2@@Eigen@@QEAA@AEBV?$TensorReductionOp@U?$MaxReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$Tensor@M$00$0A@_J@3@UMakePointer@3@@1@AEBUDefaultDevice@1@@Z</DECORATED>
    <FUNCLINE>411</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>452</LINE>
      <COLUMN>44</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::MaxReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$MaxReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$Tensor@M$00$0A@_J@3@UMakePointer@3@@Eigen@@UDefaultDevice@2@@Eigen@@QEAA@AEBV?$TensorReductionOp@U?$MaxReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$Tensor@M$00$0A@_J@3@UMakePointer@3@@1@AEBUDefaultDevice@1@@Z</DECORATED>
    <FUNCLINE>411</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>452</LINE>
      <COLUMN>62</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::MaxReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$MaxReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$Tensor@M$00$0A@_J@3@UMakePointer@3@@Eigen@@UDefaultDevice@2@@Eigen@@QEAA@AEBV?$TensorReductionOp@U?$MaxReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$Tensor@M$00$0A@_J@3@UMakePointer@3@@1@AEBUDefaultDevice@1@@Z</DECORATED>
    <FUNCLINE>411</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>435</LINE>
      <COLUMN>8</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>Ill-defined for-loop:  initial condition does not satisfy test.  Loop body not executed.</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::MinReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$MinReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$Tensor@M$00$0A@_J@3@UMakePointer@3@@Eigen@@UDefaultDevice@2@@Eigen@@QEAA@AEBV?$TensorReductionOp@U?$MinReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$Tensor@M$00$0A@_J@3@UMakePointer@3@@1@AEBUDefaultDevice@1@@Z</DECORATED>
    <FUNCLINE>411</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>440</LINE>
      <COLUMN>8</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>Ill-defined for-loop:  initial condition does not satisfy test.  Loop body not executed.</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::MinReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$MinReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$Tensor@M$00$0A@_J@3@UMakePointer@3@@Eigen@@UDefaultDevice@2@@Eigen@@QEAA@AEBV?$TensorReductionOp@U?$MinReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$Tensor@M$00$0A@_J@3@UMakePointer@3@@1@AEBUDefaultDevice@1@@Z</DECORATED>
    <FUNCLINE>411</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>451</LINE>
      <COLUMN>8</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>Ill-defined for-loop:  initial condition does not satisfy test.  Loop body not executed.</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::MinReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$MinReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$Tensor@M$00$0A@_J@3@UMakePointer@3@@Eigen@@UDefaultDevice@2@@Eigen@@QEAA@AEBV?$TensorReductionOp@U?$MinReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$Tensor@M$00$0A@_J@3@UMakePointer@3@@1@AEBUDefaultDevice@1@@Z</DECORATED>
    <FUNCLINE>411</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>456</LINE>
      <COLUMN>8</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>Ill-defined for-loop:  initial condition does not satisfy test.  Loop body not executed.</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::MinReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$MinReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$Tensor@M$00$0A@_J@3@UMakePointer@3@@Eigen@@UDefaultDevice@2@@Eigen@@QEAA@AEBV?$TensorReductionOp@U?$MinReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$Tensor@M$00$0A@_J@3@UMakePointer@3@@1@AEBUDefaultDevice@1@@Z</DECORATED>
    <FUNCLINE>411</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>411</LINE>
      <COLUMN>20</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::MinReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::m_outputStrides' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::MinReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$MinReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$Tensor@M$00$0A@_J@3@UMakePointer@3@@Eigen@@UDefaultDevice@2@@Eigen@@QEAA@AEBV?$TensorReductionOp@U?$MinReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$Tensor@M$00$0A@_J@3@UMakePointer@3@@1@AEBUDefaultDevice@1@@Z</DECORATED>
    <FUNCLINE>411</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::MinReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::m_outputStrides</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>411</LINE>
      <COLUMN>20</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::MinReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::m_preservedStrides' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::MinReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$MinReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$Tensor@M$00$0A@_J@3@UMakePointer@3@@Eigen@@UDefaultDevice@2@@Eigen@@QEAA@AEBV?$TensorReductionOp@U?$MinReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$Tensor@M$00$0A@_J@3@UMakePointer@3@@1@AEBUDefaultDevice@1@@Z</DECORATED>
    <FUNCLINE>411</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::MinReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::m_preservedStrides</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>411</LINE>
      <COLUMN>20</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::MinReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::m_reducedStrides' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::MinReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$MinReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$Tensor@M$00$0A@_J@3@UMakePointer@3@@Eigen@@UDefaultDevice@2@@Eigen@@QEAA@AEBV?$TensorReductionOp@U?$MinReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$Tensor@M$00$0A@_J@3@UMakePointer@3@@1@AEBUDefaultDevice@1@@Z</DECORATED>
    <FUNCLINE>411</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::MinReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::m_reducedStrides</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>441</LINE>
      <COLUMN>49</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::MinReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$MinReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$Tensor@M$00$0A@_J@3@UMakePointer@3@@Eigen@@UDefaultDevice@2@@Eigen@@QEAA@AEBV?$TensorReductionOp@U?$MinReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$Tensor@M$00$0A@_J@3@UMakePointer@3@@1@AEBUDefaultDevice@1@@Z</DECORATED>
    <FUNCLINE>411</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>441</LINE>
      <COLUMN>71</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::MinReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$MinReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$Tensor@M$00$0A@_J@3@UMakePointer@3@@Eigen@@UDefaultDevice@2@@Eigen@@QEAA@AEBV?$TensorReductionOp@U?$MinReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$Tensor@M$00$0A@_J@3@UMakePointer@3@@1@AEBUDefaultDevice@1@@Z</DECORATED>
    <FUNCLINE>411</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>436</LINE>
      <COLUMN>49</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::MinReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$MinReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$Tensor@M$00$0A@_J@3@UMakePointer@3@@Eigen@@UDefaultDevice@2@@Eigen@@QEAA@AEBV?$TensorReductionOp@U?$MinReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$Tensor@M$00$0A@_J@3@UMakePointer@3@@1@AEBUDefaultDevice@1@@Z</DECORATED>
    <FUNCLINE>411</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>436</LINE>
      <COLUMN>71</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::MinReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$MinReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$Tensor@M$00$0A@_J@3@UMakePointer@3@@Eigen@@UDefaultDevice@2@@Eigen@@QEAA@AEBV?$TensorReductionOp@U?$MinReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$Tensor@M$00$0A@_J@3@UMakePointer@3@@1@AEBUDefaultDevice@1@@Z</DECORATED>
    <FUNCLINE>411</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>457</LINE>
      <COLUMN>45</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::MinReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$MinReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$Tensor@M$00$0A@_J@3@UMakePointer@3@@Eigen@@UDefaultDevice@2@@Eigen@@QEAA@AEBV?$TensorReductionOp@U?$MinReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$Tensor@M$00$0A@_J@3@UMakePointer@3@@1@AEBUDefaultDevice@1@@Z</DECORATED>
    <FUNCLINE>411</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>457</LINE>
      <COLUMN>65</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::MinReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$MinReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$Tensor@M$00$0A@_J@3@UMakePointer@3@@Eigen@@UDefaultDevice@2@@Eigen@@QEAA@AEBV?$TensorReductionOp@U?$MinReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$Tensor@M$00$0A@_J@3@UMakePointer@3@@1@AEBUDefaultDevice@1@@Z</DECORATED>
    <FUNCLINE>411</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>452</LINE>
      <COLUMN>44</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::MinReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$MinReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$Tensor@M$00$0A@_J@3@UMakePointer@3@@Eigen@@UDefaultDevice@2@@Eigen@@QEAA@AEBV?$TensorReductionOp@U?$MinReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$Tensor@M$00$0A@_J@3@UMakePointer@3@@1@AEBUDefaultDevice@1@@Z</DECORATED>
    <FUNCLINE>411</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>452</LINE>
      <COLUMN>62</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::MinReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$MinReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$Tensor@M$00$0A@_J@3@UMakePointer@3@@Eigen@@UDefaultDevice@2@@Eigen@@QEAA@AEBV?$TensorReductionOp@U?$MinReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$Tensor@M$00$0A@_J@3@UMakePointer@3@@1@AEBUDefaultDevice@1@@Z</DECORATED>
    <FUNCLINE>411</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>435</LINE>
      <COLUMN>8</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>Ill-defined for-loop:  initial condition does not satisfy test.  Loop body not executed.</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::MinReducer&lt;__int64&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::Tensor&lt;__int64,1,0,__int64&gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$MinReducer@_J@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$Tensor@_J$00$0A@_J@3@UMakePointer@3@@Eigen@@UDefaultDevice@2@@Eigen@@QEAA@AEBV?$TensorReductionOp@U?$MinReducer@_J@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$Tensor@_J$00$0A@_J@3@UMakePointer@3@@1@AEBUDefaultDevice@1@@Z</DECORATED>
    <FUNCLINE>411</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>440</LINE>
      <COLUMN>8</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>Ill-defined for-loop:  initial condition does not satisfy test.  Loop body not executed.</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::MinReducer&lt;__int64&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::Tensor&lt;__int64,1,0,__int64&gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$MinReducer@_J@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$Tensor@_J$00$0A@_J@3@UMakePointer@3@@Eigen@@UDefaultDevice@2@@Eigen@@QEAA@AEBV?$TensorReductionOp@U?$MinReducer@_J@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$Tensor@_J$00$0A@_J@3@UMakePointer@3@@1@AEBUDefaultDevice@1@@Z</DECORATED>
    <FUNCLINE>411</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>451</LINE>
      <COLUMN>8</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>Ill-defined for-loop:  initial condition does not satisfy test.  Loop body not executed.</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::MinReducer&lt;__int64&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::Tensor&lt;__int64,1,0,__int64&gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$MinReducer@_J@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$Tensor@_J$00$0A@_J@3@UMakePointer@3@@Eigen@@UDefaultDevice@2@@Eigen@@QEAA@AEBV?$TensorReductionOp@U?$MinReducer@_J@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$Tensor@_J$00$0A@_J@3@UMakePointer@3@@1@AEBUDefaultDevice@1@@Z</DECORATED>
    <FUNCLINE>411</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>456</LINE>
      <COLUMN>8</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>Ill-defined for-loop:  initial condition does not satisfy test.  Loop body not executed.</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::MinReducer&lt;__int64&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::Tensor&lt;__int64,1,0,__int64&gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$MinReducer@_J@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$Tensor@_J$00$0A@_J@3@UMakePointer@3@@Eigen@@UDefaultDevice@2@@Eigen@@QEAA@AEBV?$TensorReductionOp@U?$MinReducer@_J@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$Tensor@_J$00$0A@_J@3@UMakePointer@3@@1@AEBUDefaultDevice@1@@Z</DECORATED>
    <FUNCLINE>411</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>411</LINE>
      <COLUMN>20</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::MinReducer&lt;__int64&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::Tensor&lt;__int64,1,0,__int64&gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::m_outputStrides' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::MinReducer&lt;__int64&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::Tensor&lt;__int64,1,0,__int64&gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$MinReducer@_J@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$Tensor@_J$00$0A@_J@3@UMakePointer@3@@Eigen@@UDefaultDevice@2@@Eigen@@QEAA@AEBV?$TensorReductionOp@U?$MinReducer@_J@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$Tensor@_J$00$0A@_J@3@UMakePointer@3@@1@AEBUDefaultDevice@1@@Z</DECORATED>
    <FUNCLINE>411</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::MinReducer&lt;__int64&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::Tensor&lt;__int64,1,0,__int64&gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::m_outputStrides</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>411</LINE>
      <COLUMN>20</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::MinReducer&lt;__int64&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::Tensor&lt;__int64,1,0,__int64&gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::m_preservedStrides' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::MinReducer&lt;__int64&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::Tensor&lt;__int64,1,0,__int64&gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$MinReducer@_J@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$Tensor@_J$00$0A@_J@3@UMakePointer@3@@Eigen@@UDefaultDevice@2@@Eigen@@QEAA@AEBV?$TensorReductionOp@U?$MinReducer@_J@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$Tensor@_J$00$0A@_J@3@UMakePointer@3@@1@AEBUDefaultDevice@1@@Z</DECORATED>
    <FUNCLINE>411</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::MinReducer&lt;__int64&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::Tensor&lt;__int64,1,0,__int64&gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::m_preservedStrides</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>411</LINE>
      <COLUMN>20</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::MinReducer&lt;__int64&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::Tensor&lt;__int64,1,0,__int64&gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::m_reducedStrides' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::MinReducer&lt;__int64&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::Tensor&lt;__int64,1,0,__int64&gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$MinReducer@_J@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$Tensor@_J$00$0A@_J@3@UMakePointer@3@@Eigen@@UDefaultDevice@2@@Eigen@@QEAA@AEBV?$TensorReductionOp@U?$MinReducer@_J@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$Tensor@_J$00$0A@_J@3@UMakePointer@3@@1@AEBUDefaultDevice@1@@Z</DECORATED>
    <FUNCLINE>411</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::MinReducer&lt;__int64&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::Tensor&lt;__int64,1,0,__int64&gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::m_reducedStrides</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>441</LINE>
      <COLUMN>49</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::MinReducer&lt;__int64&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::Tensor&lt;__int64,1,0,__int64&gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$MinReducer@_J@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$Tensor@_J$00$0A@_J@3@UMakePointer@3@@Eigen@@UDefaultDevice@2@@Eigen@@QEAA@AEBV?$TensorReductionOp@U?$MinReducer@_J@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$Tensor@_J$00$0A@_J@3@UMakePointer@3@@1@AEBUDefaultDevice@1@@Z</DECORATED>
    <FUNCLINE>411</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>441</LINE>
      <COLUMN>71</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::MinReducer&lt;__int64&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::Tensor&lt;__int64,1,0,__int64&gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$MinReducer@_J@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$Tensor@_J$00$0A@_J@3@UMakePointer@3@@Eigen@@UDefaultDevice@2@@Eigen@@QEAA@AEBV?$TensorReductionOp@U?$MinReducer@_J@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$Tensor@_J$00$0A@_J@3@UMakePointer@3@@1@AEBUDefaultDevice@1@@Z</DECORATED>
    <FUNCLINE>411</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>436</LINE>
      <COLUMN>49</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::MinReducer&lt;__int64&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::Tensor&lt;__int64,1,0,__int64&gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$MinReducer@_J@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$Tensor@_J$00$0A@_J@3@UMakePointer@3@@Eigen@@UDefaultDevice@2@@Eigen@@QEAA@AEBV?$TensorReductionOp@U?$MinReducer@_J@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$Tensor@_J$00$0A@_J@3@UMakePointer@3@@1@AEBUDefaultDevice@1@@Z</DECORATED>
    <FUNCLINE>411</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>436</LINE>
      <COLUMN>71</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::MinReducer&lt;__int64&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::Tensor&lt;__int64,1,0,__int64&gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$MinReducer@_J@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$Tensor@_J$00$0A@_J@3@UMakePointer@3@@Eigen@@UDefaultDevice@2@@Eigen@@QEAA@AEBV?$TensorReductionOp@U?$MinReducer@_J@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$Tensor@_J$00$0A@_J@3@UMakePointer@3@@1@AEBUDefaultDevice@1@@Z</DECORATED>
    <FUNCLINE>411</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>457</LINE>
      <COLUMN>45</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::MinReducer&lt;__int64&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::Tensor&lt;__int64,1,0,__int64&gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$MinReducer@_J@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$Tensor@_J$00$0A@_J@3@UMakePointer@3@@Eigen@@UDefaultDevice@2@@Eigen@@QEAA@AEBV?$TensorReductionOp@U?$MinReducer@_J@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$Tensor@_J$00$0A@_J@3@UMakePointer@3@@1@AEBUDefaultDevice@1@@Z</DECORATED>
    <FUNCLINE>411</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>457</LINE>
      <COLUMN>65</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::MinReducer&lt;__int64&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::Tensor&lt;__int64,1,0,__int64&gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$MinReducer@_J@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$Tensor@_J$00$0A@_J@3@UMakePointer@3@@Eigen@@UDefaultDevice@2@@Eigen@@QEAA@AEBV?$TensorReductionOp@U?$MinReducer@_J@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$Tensor@_J$00$0A@_J@3@UMakePointer@3@@1@AEBUDefaultDevice@1@@Z</DECORATED>
    <FUNCLINE>411</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>452</LINE>
      <COLUMN>44</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::MinReducer&lt;__int64&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::Tensor&lt;__int64,1,0,__int64&gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$MinReducer@_J@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$Tensor@_J$00$0A@_J@3@UMakePointer@3@@Eigen@@UDefaultDevice@2@@Eigen@@QEAA@AEBV?$TensorReductionOp@U?$MinReducer@_J@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$Tensor@_J$00$0A@_J@3@UMakePointer@3@@1@AEBUDefaultDevice@1@@Z</DECORATED>
    <FUNCLINE>411</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>452</LINE>
      <COLUMN>62</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::MinReducer&lt;__int64&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::Tensor&lt;__int64,1,0,__int64&gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$MinReducer@_J@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$Tensor@_J$00$0A@_J@3@UMakePointer@3@@Eigen@@UDefaultDevice@2@@Eigen@@QEAA@AEBV?$TensorReductionOp@U?$MinReducer@_J@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$Tensor@_J$00$0A@_J@3@UMakePointer@3@@1@AEBUDefaultDevice@1@@Z</DECORATED>
    <FUNCLINE>411</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>435</LINE>
      <COLUMN>8</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>Ill-defined for-loop:  initial condition does not satisfy test.  Loop body not executed.</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,2&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$01@3@$$CBV?$Tensor@M$01$0A@_J@3@UMakePointer@3@@Eigen@@UDefaultDevice@2@@Eigen@@QEAA@AEBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$01@3@$$CBV?$Tensor@M$01$0A@_J@3@UMakePointer@3@@1@AEBUDefaultDevice@1@@Z</DECORATED>
    <FUNCLINE>411</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>440</LINE>
      <COLUMN>8</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>Ill-defined for-loop:  initial condition does not satisfy test.  Loop body not executed.</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,2&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$01@3@$$CBV?$Tensor@M$01$0A@_J@3@UMakePointer@3@@Eigen@@UDefaultDevice@2@@Eigen@@QEAA@AEBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$01@3@$$CBV?$Tensor@M$01$0A@_J@3@UMakePointer@3@@1@AEBUDefaultDevice@1@@Z</DECORATED>
    <FUNCLINE>411</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>468</LINE>
      <COLUMN>42</COLUMN>
    </SFA>
    <DEFECTCODE>28020</DEFECTCODE>
    <DESCRIPTION>The expression '0&lt;=_Param_(1)&amp;&amp;_Param_(1)&lt;=1-1' is not true at this call.</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,2&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$01@3@$$CBV?$Tensor@M$01$0A@_J@3@UMakePointer@3@@Eigen@@UDefaultDevice@2@@Eigen@@QEAA@AEBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$01@3@$$CBV?$Tensor@M$01$0A@_J@3@UMakePointer@3@@1@AEBUDefaultDevice@1@@Z</DECORATED>
    <FUNCLINE>411</FUNCLINE>
    <PATH>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorreduction.h</FILENAME>
        <LINE>413</LINE>
        <COLUMN>2</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorreduction.h</FILENAME>
        <LINE>412</LINE>
        <COLUMN>14</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorreduction.h</FILENAME>
        <LINE>412</LINE>
        <COLUMN>0</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorreduction.h</FILENAME>
        <LINE>419</LINE>
        <COLUMN>13</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorreduction.h</FILENAME>
        <LINE>419</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorreduction.h</FILENAME>
        <LINE>420</LINE>
        <COLUMN>19</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorreduction.h</FILENAME>
        <LINE>419</LINE>
        <COLUMN>17</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorreduction.h</FILENAME>
        <LINE>419</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorreduction.h</FILENAME>
        <LINE>420</LINE>
        <COLUMN>19</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorreduction.h</FILENAME>
        <LINE>419</LINE>
        <COLUMN>17</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorreduction.h</FILENAME>
        <LINE>419</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorreduction.h</FILENAME>
        <LINE>422</LINE>
        <COLUMN>13</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorreduction.h</FILENAME>
        <LINE>422</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorreduction.h</FILENAME>
        <LINE>423</LINE>
        <COLUMN>6</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorreduction.h</FILENAME>
        <LINE>424</LINE>
        <COLUMN>6</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorreduction.h</FILENAME>
        <LINE>425</LINE>
        <COLUMN>30</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorreduction.h</FILENAME>
        <LINE>422</LINE>
        <COLUMN>19</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorreduction.h</FILENAME>
        <LINE>422</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorreduction.h</FILENAME>
        <LINE>423</LINE>
        <COLUMN>6</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorreduction.h</FILENAME>
        <LINE>424</LINE>
        <COLUMN>6</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorreduction.h</FILENAME>
        <LINE>425</LINE>
        <COLUMN>30</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorreduction.h</FILENAME>
        <LINE>422</LINE>
        <COLUMN>19</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorreduction.h</FILENAME>
        <LINE>422</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorreduction.h</FILENAME>
        <LINE>428</LINE>
        <COLUMN>13</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorreduction.h</FILENAME>
        <LINE>429</LINE>
        <COLUMN>45</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorreduction.h</FILENAME>
        <LINE>432</LINE>
        <COLUMN>22</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorreduction.h</FILENAME>
        <LINE>447</LINE>
        <COLUMN>21</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorreduction.h</FILENAME>
        <LINE>448</LINE>
        <COLUMN>2</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorreduction.h</FILENAME>
        <LINE>449</LINE>
        <COLUMN>35</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorreduction.h</FILENAME>
        <LINE>450</LINE>
        <COLUMN>25</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorreduction.h</FILENAME>
        <LINE>451</LINE>
        <COLUMN>17</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorreduction.h</FILENAME>
        <LINE>451</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorreduction.h</FILENAME>
        <LINE>452</LINE>
        <COLUMN>27</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorreduction.h</FILENAME>
        <LINE>451</LINE>
        <COLUMN>17</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorreduction.h</FILENAME>
        <LINE>451</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorreduction.h</FILENAME>
        <LINE>461</LINE>
        <COLUMN>10</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorreduction.h</FILENAME>
        <LINE>462</LINE>
        <COLUMN>10</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorreduction.h</FILENAME>
        <LINE>463</LINE>
        <COLUMN>15</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorreduction.h</FILENAME>
        <LINE>463</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorreduction.h</FILENAME>
        <LINE>464</LINE>
        <COLUMN>23</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorreduction.h</FILENAME>
        <LINE>468</LINE>
        <COLUMN>42</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorreduction.h</FILENAME>
        <LINE>469</LINE>
        <COLUMN>10</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorreduction.h</FILENAME>
        <LINE>463</LINE>
        <COLUMN>17</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorreduction.h</FILENAME>
        <LINE>463</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorreduction.h</FILENAME>
        <LINE>464</LINE>
        <COLUMN>23</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorreduction.h</FILENAME>
        <LINE>468</LINE>
        <COLUMN>42</COLUMN>
      </SFA>
    </PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>411</LINE>
      <COLUMN>20</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,2&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::m_outputStrides' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,2&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$01@3@$$CBV?$Tensor@M$01$0A@_J@3@UMakePointer@3@@Eigen@@UDefaultDevice@2@@Eigen@@QEAA@AEBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$01@3@$$CBV?$Tensor@M$01$0A@_J@3@UMakePointer@3@@1@AEBUDefaultDevice@1@@Z</DECORATED>
    <FUNCLINE>411</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,2&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::m_outputStrides</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>411</LINE>
      <COLUMN>20</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,2&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::m_preservedStrides' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,2&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$01@3@$$CBV?$Tensor@M$01$0A@_J@3@UMakePointer@3@@Eigen@@UDefaultDevice@2@@Eigen@@QEAA@AEBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$01@3@$$CBV?$Tensor@M$01$0A@_J@3@UMakePointer@3@@1@AEBUDefaultDevice@1@@Z</DECORATED>
    <FUNCLINE>411</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,2&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::m_preservedStrides</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>411</LINE>
      <COLUMN>20</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,2&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::m_reducedStrides' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,2&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$01@3@$$CBV?$Tensor@M$01$0A@_J@3@UMakePointer@3@@Eigen@@UDefaultDevice@2@@Eigen@@QEAA@AEBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$01@3@$$CBV?$Tensor@M$01$0A@_J@3@UMakePointer@3@@1@AEBUDefaultDevice@1@@Z</DECORATED>
    <FUNCLINE>411</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,2&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::m_reducedStrides</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>441</LINE>
      <COLUMN>49</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,2&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$01@3@$$CBV?$Tensor@M$01$0A@_J@3@UMakePointer@3@@Eigen@@UDefaultDevice@2@@Eigen@@QEAA@AEBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$01@3@$$CBV?$Tensor@M$01$0A@_J@3@UMakePointer@3@@1@AEBUDefaultDevice@1@@Z</DECORATED>
    <FUNCLINE>411</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>441</LINE>
      <COLUMN>71</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,2&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$01@3@$$CBV?$Tensor@M$01$0A@_J@3@UMakePointer@3@@Eigen@@UDefaultDevice@2@@Eigen@@QEAA@AEBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$01@3@$$CBV?$Tensor@M$01$0A@_J@3@UMakePointer@3@@1@AEBUDefaultDevice@1@@Z</DECORATED>
    <FUNCLINE>411</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>436</LINE>
      <COLUMN>49</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,2&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$01@3@$$CBV?$Tensor@M$01$0A@_J@3@UMakePointer@3@@Eigen@@UDefaultDevice@2@@Eigen@@QEAA@AEBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$01@3@$$CBV?$Tensor@M$01$0A@_J@3@UMakePointer@3@@1@AEBUDefaultDevice@1@@Z</DECORATED>
    <FUNCLINE>411</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>436</LINE>
      <COLUMN>71</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,2&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$01@3@$$CBV?$Tensor@M$01$0A@_J@3@UMakePointer@3@@Eigen@@UDefaultDevice@2@@Eigen@@QEAA@AEBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$01@3@$$CBV?$Tensor@M$01$0A@_J@3@UMakePointer@3@@1@AEBUDefaultDevice@1@@Z</DECORATED>
    <FUNCLINE>411</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>457</LINE>
      <COLUMN>45</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,2&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$01@3@$$CBV?$Tensor@M$01$0A@_J@3@UMakePointer@3@@Eigen@@UDefaultDevice@2@@Eigen@@QEAA@AEBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$01@3@$$CBV?$Tensor@M$01$0A@_J@3@UMakePointer@3@@1@AEBUDefaultDevice@1@@Z</DECORATED>
    <FUNCLINE>411</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>457</LINE>
      <COLUMN>65</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,2&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$01@3@$$CBV?$Tensor@M$01$0A@_J@3@UMakePointer@3@@Eigen@@UDefaultDevice@2@@Eigen@@QEAA@AEBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$01@3@$$CBV?$Tensor@M$01$0A@_J@3@UMakePointer@3@@1@AEBUDefaultDevice@1@@Z</DECORATED>
    <FUNCLINE>411</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>452</LINE>
      <COLUMN>44</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,2&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$01@3@$$CBV?$Tensor@M$01$0A@_J@3@UMakePointer@3@@Eigen@@UDefaultDevice@2@@Eigen@@QEAA@AEBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$01@3@$$CBV?$Tensor@M$01$0A@_J@3@UMakePointer@3@@1@AEBUDefaultDevice@1@@Z</DECORATED>
    <FUNCLINE>411</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>452</LINE>
      <COLUMN>62</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,2&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$01@3@$$CBV?$Tensor@M$01$0A@_J@3@UMakePointer@3@@Eigen@@UDefaultDevice@2@@Eigen@@QEAA@AEBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$01@3@$$CBV?$Tensor@M$01$0A@_J@3@UMakePointer@3@@1@AEBUDefaultDevice@1@@Z</DECORATED>
    <FUNCLINE>411</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>435</LINE>
      <COLUMN>8</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>Ill-defined for-loop:  initial condition does not satisfy test.  Loop body not executed.</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,std::array&lt;int,1&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBV?$array@H$00@std@@$$CBV?$Tensor@M$01$0A@_J@3@UMakePointer@3@@Eigen@@UDefaultDevice@2@@Eigen@@QEAA@AEBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBV?$array@H$00@std@@$$CBV?$Tensor@M$01$0A@_J@3@UMakePointer@3@@1@AEBUDefaultDevice@1@@Z</DECORATED>
    <FUNCLINE>411</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>440</LINE>
      <COLUMN>8</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>Ill-defined for-loop:  initial condition does not satisfy test.  Loop body not executed.</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,std::array&lt;int,1&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBV?$array@H$00@std@@$$CBV?$Tensor@M$01$0A@_J@3@UMakePointer@3@@Eigen@@UDefaultDevice@2@@Eigen@@QEAA@AEBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBV?$array@H$00@std@@$$CBV?$Tensor@M$01$0A@_J@3@UMakePointer@3@@1@AEBUDefaultDevice@1@@Z</DECORATED>
    <FUNCLINE>411</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>468</LINE>
      <COLUMN>42</COLUMN>
    </SFA>
    <DEFECTCODE>28020</DEFECTCODE>
    <DESCRIPTION>The expression '0&lt;=_Param_(1)&amp;&amp;_Param_(1)&lt;=1-1' is not true at this call.</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,std::array&lt;int,1&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBV?$array@H$00@std@@$$CBV?$Tensor@M$01$0A@_J@3@UMakePointer@3@@Eigen@@UDefaultDevice@2@@Eigen@@QEAA@AEBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBV?$array@H$00@std@@$$CBV?$Tensor@M$01$0A@_J@3@UMakePointer@3@@1@AEBUDefaultDevice@1@@Z</DECORATED>
    <FUNCLINE>411</FUNCLINE>
    <PATH>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorreduction.h</FILENAME>
        <LINE>413</LINE>
        <COLUMN>2</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorreduction.h</FILENAME>
        <LINE>412</LINE>
        <COLUMN>14</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorreduction.h</FILENAME>
        <LINE>412</LINE>
        <COLUMN>0</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorreduction.h</FILENAME>
        <LINE>419</LINE>
        <COLUMN>13</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorreduction.h</FILENAME>
        <LINE>419</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorreduction.h</FILENAME>
        <LINE>420</LINE>
        <COLUMN>19</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorreduction.h</FILENAME>
        <LINE>419</LINE>
        <COLUMN>17</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorreduction.h</FILENAME>
        <LINE>419</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorreduction.h</FILENAME>
        <LINE>420</LINE>
        <COLUMN>19</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorreduction.h</FILENAME>
        <LINE>419</LINE>
        <COLUMN>17</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorreduction.h</FILENAME>
        <LINE>419</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorreduction.h</FILENAME>
        <LINE>422</LINE>
        <COLUMN>13</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorreduction.h</FILENAME>
        <LINE>422</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorreduction.h</FILENAME>
        <LINE>423</LINE>
        <COLUMN>6</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorreduction.h</FILENAME>
        <LINE>424</LINE>
        <COLUMN>6</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorreduction.h</FILENAME>
        <LINE>425</LINE>
        <COLUMN>30</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorreduction.h</FILENAME>
        <LINE>422</LINE>
        <COLUMN>19</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorreduction.h</FILENAME>
        <LINE>422</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorreduction.h</FILENAME>
        <LINE>428</LINE>
        <COLUMN>13</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorreduction.h</FILENAME>
        <LINE>429</LINE>
        <COLUMN>45</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorreduction.h</FILENAME>
        <LINE>432</LINE>
        <COLUMN>22</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorreduction.h</FILENAME>
        <LINE>433</LINE>
        <COLUMN>35</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorreduction.h</FILENAME>
        <LINE>434</LINE>
        <COLUMN>27</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorreduction.h</FILENAME>
        <LINE>435</LINE>
        <COLUMN>17</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorreduction.h</FILENAME>
        <LINE>435</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorreduction.h</FILENAME>
        <LINE>447</LINE>
        <COLUMN>21</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorreduction.h</FILENAME>
        <LINE>448</LINE>
        <COLUMN>2</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorreduction.h</FILENAME>
        <LINE>449</LINE>
        <COLUMN>35</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorreduction.h</FILENAME>
        <LINE>450</LINE>
        <COLUMN>25</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorreduction.h</FILENAME>
        <LINE>451</LINE>
        <COLUMN>17</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorreduction.h</FILENAME>
        <LINE>451</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorreduction.h</FILENAME>
        <LINE>452</LINE>
        <COLUMN>27</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorreduction.h</FILENAME>
        <LINE>451</LINE>
        <COLUMN>17</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorreduction.h</FILENAME>
        <LINE>451</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorreduction.h</FILENAME>
        <LINE>461</LINE>
        <COLUMN>10</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorreduction.h</FILENAME>
        <LINE>462</LINE>
        <COLUMN>10</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorreduction.h</FILENAME>
        <LINE>463</LINE>
        <COLUMN>15</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorreduction.h</FILENAME>
        <LINE>463</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorreduction.h</FILENAME>
        <LINE>464</LINE>
        <COLUMN>23</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorreduction.h</FILENAME>
        <LINE>468</LINE>
        <COLUMN>42</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorreduction.h</FILENAME>
        <LINE>469</LINE>
        <COLUMN>10</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorreduction.h</FILENAME>
        <LINE>463</LINE>
        <COLUMN>17</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorreduction.h</FILENAME>
        <LINE>463</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorreduction.h</FILENAME>
        <LINE>464</LINE>
        <COLUMN>23</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorreduction.h</FILENAME>
        <LINE>468</LINE>
        <COLUMN>42</COLUMN>
      </SFA>
    </PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>411</LINE>
      <COLUMN>20</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,std::array&lt;int,1&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::m_outputStrides' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,std::array&lt;int,1&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBV?$array@H$00@std@@$$CBV?$Tensor@M$01$0A@_J@3@UMakePointer@3@@Eigen@@UDefaultDevice@2@@Eigen@@QEAA@AEBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBV?$array@H$00@std@@$$CBV?$Tensor@M$01$0A@_J@3@UMakePointer@3@@1@AEBUDefaultDevice@1@@Z</DECORATED>
    <FUNCLINE>411</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,std::array&lt;int,1&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::m_outputStrides</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>411</LINE>
      <COLUMN>20</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,std::array&lt;int,1&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::m_preservedStrides' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,std::array&lt;int,1&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBV?$array@H$00@std@@$$CBV?$Tensor@M$01$0A@_J@3@UMakePointer@3@@Eigen@@UDefaultDevice@2@@Eigen@@QEAA@AEBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBV?$array@H$00@std@@$$CBV?$Tensor@M$01$0A@_J@3@UMakePointer@3@@1@AEBUDefaultDevice@1@@Z</DECORATED>
    <FUNCLINE>411</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,std::array&lt;int,1&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::m_preservedStrides</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>411</LINE>
      <COLUMN>20</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,std::array&lt;int,1&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::m_reducedStrides' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,std::array&lt;int,1&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBV?$array@H$00@std@@$$CBV?$Tensor@M$01$0A@_J@3@UMakePointer@3@@Eigen@@UDefaultDevice@2@@Eigen@@QEAA@AEBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBV?$array@H$00@std@@$$CBV?$Tensor@M$01$0A@_J@3@UMakePointer@3@@1@AEBUDefaultDevice@1@@Z</DECORATED>
    <FUNCLINE>411</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,std::array&lt;int,1&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::m_reducedStrides</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>441</LINE>
      <COLUMN>49</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,std::array&lt;int,1&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBV?$array@H$00@std@@$$CBV?$Tensor@M$01$0A@_J@3@UMakePointer@3@@Eigen@@UDefaultDevice@2@@Eigen@@QEAA@AEBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBV?$array@H$00@std@@$$CBV?$Tensor@M$01$0A@_J@3@UMakePointer@3@@1@AEBUDefaultDevice@1@@Z</DECORATED>
    <FUNCLINE>411</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>441</LINE>
      <COLUMN>71</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,std::array&lt;int,1&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBV?$array@H$00@std@@$$CBV?$Tensor@M$01$0A@_J@3@UMakePointer@3@@Eigen@@UDefaultDevice@2@@Eigen@@QEAA@AEBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBV?$array@H$00@std@@$$CBV?$Tensor@M$01$0A@_J@3@UMakePointer@3@@1@AEBUDefaultDevice@1@@Z</DECORATED>
    <FUNCLINE>411</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>436</LINE>
      <COLUMN>49</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,std::array&lt;int,1&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBV?$array@H$00@std@@$$CBV?$Tensor@M$01$0A@_J@3@UMakePointer@3@@Eigen@@UDefaultDevice@2@@Eigen@@QEAA@AEBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBV?$array@H$00@std@@$$CBV?$Tensor@M$01$0A@_J@3@UMakePointer@3@@1@AEBUDefaultDevice@1@@Z</DECORATED>
    <FUNCLINE>411</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>436</LINE>
      <COLUMN>71</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,std::array&lt;int,1&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBV?$array@H$00@std@@$$CBV?$Tensor@M$01$0A@_J@3@UMakePointer@3@@Eigen@@UDefaultDevice@2@@Eigen@@QEAA@AEBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBV?$array@H$00@std@@$$CBV?$Tensor@M$01$0A@_J@3@UMakePointer@3@@1@AEBUDefaultDevice@1@@Z</DECORATED>
    <FUNCLINE>411</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>457</LINE>
      <COLUMN>45</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,std::array&lt;int,1&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBV?$array@H$00@std@@$$CBV?$Tensor@M$01$0A@_J@3@UMakePointer@3@@Eigen@@UDefaultDevice@2@@Eigen@@QEAA@AEBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBV?$array@H$00@std@@$$CBV?$Tensor@M$01$0A@_J@3@UMakePointer@3@@1@AEBUDefaultDevice@1@@Z</DECORATED>
    <FUNCLINE>411</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>457</LINE>
      <COLUMN>65</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,std::array&lt;int,1&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBV?$array@H$00@std@@$$CBV?$Tensor@M$01$0A@_J@3@UMakePointer@3@@Eigen@@UDefaultDevice@2@@Eigen@@QEAA@AEBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBV?$array@H$00@std@@$$CBV?$Tensor@M$01$0A@_J@3@UMakePointer@3@@1@AEBUDefaultDevice@1@@Z</DECORATED>
    <FUNCLINE>411</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>452</LINE>
      <COLUMN>44</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,std::array&lt;int,1&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBV?$array@H$00@std@@$$CBV?$Tensor@M$01$0A@_J@3@UMakePointer@3@@Eigen@@UDefaultDevice@2@@Eigen@@QEAA@AEBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBV?$array@H$00@std@@$$CBV?$Tensor@M$01$0A@_J@3@UMakePointer@3@@1@AEBUDefaultDevice@1@@Z</DECORATED>
    <FUNCLINE>411</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>452</LINE>
      <COLUMN>62</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,std::array&lt;int,1&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBV?$array@H$00@std@@$$CBV?$Tensor@M$01$0A@_J@3@UMakePointer@3@@Eigen@@UDefaultDevice@2@@Eigen@@QEAA@AEBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBV?$array@H$00@std@@$$CBV?$Tensor@M$01$0A@_J@3@UMakePointer@3@@1@AEBUDefaultDevice@1@@Z</DECORATED>
    <FUNCLINE>411</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorChipping.h</FILENAME>
      <LINE>164</LINE>
      <COLUMN>24</COLUMN>
    </SFA>
    <DEFECTCODE>28020</DEFECTCODE>
    <DESCRIPTION>The expression '0&lt;=_Param_(1)&amp;&amp;_Param_(1)&lt;=1-1' is not true at this call.</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorChippingOp&lt;-1,Eigen::Tensor&lt;std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,2,0,__int64&gt; &gt; const ,Eigen::DefaultDevice&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorEvaluator@$$CBV?$TensorChippingOp@$0?0V?$Tensor@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$01$0A@_J@Eigen@@@Eigen@@UDefaultDevice@2@@Eigen@@QEAA@AEBV?$TensorChippingOp@$0?0V?$Tensor@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$01$0A@_J@Eigen@@@1@AEBUDefaultDevice@1@@Z</DECORATED>
    <FUNCLINE>152</FUNCLINE>
    <PATH>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorchipping.h</FILENAME>
        <LINE>154</LINE>
        <COLUMN>2</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorchipping.h</FILENAME>
        <LINE>153</LINE>
        <COLUMN>14</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorchipping.h</FILENAME>
        <LINE>153</LINE>
        <COLUMN>0</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorchipping.h</FILENAME>
        <LINE>156</LINE>
        <COLUMN>4</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorchipping.h</FILENAME>
        <LINE>158</LINE>
        <COLUMN>13</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorchipping.h</FILENAME>
        <LINE>159</LINE>
        <COLUMN>4</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorchipping.h</FILENAME>
        <LINE>161</LINE>
        <COLUMN>8</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorchipping.h</FILENAME>
        <LINE>162</LINE>
        <COLUMN>13</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorchipping.h</FILENAME>
        <LINE>162</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorchipping.h</FILENAME>
        <LINE>163</LINE>
        <COLUMN>12</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorchipping.h</FILENAME>
        <LINE>164</LINE>
        <COLUMN>24</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorchipping.h</FILENAME>
        <LINE>165</LINE>
        <COLUMN>8</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorchipping.h</FILENAME>
        <LINE>162</LINE>
        <COLUMN>17</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorchipping.h</FILENAME>
        <LINE>162</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorchipping.h</FILENAME>
        <LINE>163</LINE>
        <COLUMN>12</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorchipping.h</FILENAME>
        <LINE>164</LINE>
        <COLUMN>24</COLUMN>
      </SFA>
    </PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorChipping.h</FILENAME>
      <LINE>164</LINE>
      <COLUMN>24</COLUMN>
    </SFA>
    <DEFECTCODE>28020</DEFECTCODE>
    <DESCRIPTION>The expression '0&lt;=_Param_(1)&amp;&amp;_Param_(1)&lt;=1-1' is not true at this call.</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorChippingOp&lt;-1,Eigen::Tensor&lt;float,2,0,__int64&gt; &gt; const ,Eigen::DefaultDevice&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorEvaluator@$$CBV?$TensorChippingOp@$0?0V?$Tensor@M$01$0A@_J@Eigen@@@Eigen@@UDefaultDevice@2@@Eigen@@QEAA@AEBV?$TensorChippingOp@$0?0V?$Tensor@M$01$0A@_J@Eigen@@@1@AEBUDefaultDevice@1@@Z</DECORATED>
    <FUNCLINE>152</FUNCLINE>
    <PATH>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorchipping.h</FILENAME>
        <LINE>154</LINE>
        <COLUMN>2</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorchipping.h</FILENAME>
        <LINE>153</LINE>
        <COLUMN>14</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorchipping.h</FILENAME>
        <LINE>153</LINE>
        <COLUMN>0</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorchipping.h</FILENAME>
        <LINE>156</LINE>
        <COLUMN>4</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorchipping.h</FILENAME>
        <LINE>158</LINE>
        <COLUMN>13</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorchipping.h</FILENAME>
        <LINE>159</LINE>
        <COLUMN>4</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorchipping.h</FILENAME>
        <LINE>161</LINE>
        <COLUMN>8</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorchipping.h</FILENAME>
        <LINE>162</LINE>
        <COLUMN>13</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorchipping.h</FILENAME>
        <LINE>162</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorchipping.h</FILENAME>
        <LINE>163</LINE>
        <COLUMN>12</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorchipping.h</FILENAME>
        <LINE>164</LINE>
        <COLUMN>24</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorchipping.h</FILENAME>
        <LINE>165</LINE>
        <COLUMN>8</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorchipping.h</FILENAME>
        <LINE>162</LINE>
        <COLUMN>17</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorchipping.h</FILENAME>
        <LINE>162</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorchipping.h</FILENAME>
        <LINE>163</LINE>
        <COLUMN>12</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorchipping.h</FILENAME>
        <LINE>164</LINE>
        <COLUMN>24</COLUMN>
      </SFA>
    </PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorChipping.h</FILENAME>
      <LINE>164</LINE>
      <COLUMN>24</COLUMN>
    </SFA>
    <DEFECTCODE>28020</DEFECTCODE>
    <DESCRIPTION>The expression '0&lt;=_Param_(1)&amp;&amp;_Param_(1)&lt;=1-1' is not true at this call.</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorChippingOp&lt;-1,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::DefaultDevice&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorEvaluator@$$CBV?$TensorChippingOp@$0?0$$CBV?$Tensor@M$01$0A@_J@Eigen@@@Eigen@@UDefaultDevice@2@@Eigen@@QEAA@AEBV?$TensorChippingOp@$0?0$$CBV?$Tensor@M$01$0A@_J@Eigen@@@1@AEBUDefaultDevice@1@@Z</DECORATED>
    <FUNCLINE>152</FUNCLINE>
    <PATH>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorchipping.h</FILENAME>
        <LINE>154</LINE>
        <COLUMN>2</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorchipping.h</FILENAME>
        <LINE>153</LINE>
        <COLUMN>14</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorchipping.h</FILENAME>
        <LINE>153</LINE>
        <COLUMN>0</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorchipping.h</FILENAME>
        <LINE>156</LINE>
        <COLUMN>4</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorchipping.h</FILENAME>
        <LINE>158</LINE>
        <COLUMN>13</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorchipping.h</FILENAME>
        <LINE>159</LINE>
        <COLUMN>4</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorchipping.h</FILENAME>
        <LINE>161</LINE>
        <COLUMN>8</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorchipping.h</FILENAME>
        <LINE>162</LINE>
        <COLUMN>13</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorchipping.h</FILENAME>
        <LINE>162</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorchipping.h</FILENAME>
        <LINE>163</LINE>
        <COLUMN>12</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorchipping.h</FILENAME>
        <LINE>164</LINE>
        <COLUMN>24</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorchipping.h</FILENAME>
        <LINE>165</LINE>
        <COLUMN>8</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorchipping.h</FILENAME>
        <LINE>162</LINE>
        <COLUMN>17</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorchipping.h</FILENAME>
        <LINE>162</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorchipping.h</FILENAME>
        <LINE>163</LINE>
        <COLUMN>12</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorchipping.h</FILENAME>
        <LINE>164</LINE>
        <COLUMN>24</COLUMN>
      </SFA>
    </PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>435</LINE>
      <COLUMN>8</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>Ill-defined for-loop:  initial condition does not satisfy test.  Loop body not executed.</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@$$CBV43@@3@UMakePointer@3@@Eigen@@UDefaultDevice@2@@Eigen@@QEAA@AEBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@$$CBV43@@3@UMakePointer@3@@1@AEBUDefaultDevice@1@@Z</DECORATED>
    <FUNCLINE>411</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>440</LINE>
      <COLUMN>8</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>Ill-defined for-loop:  initial condition does not satisfy test.  Loop body not executed.</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@$$CBV43@@3@UMakePointer@3@@Eigen@@UDefaultDevice@2@@Eigen@@QEAA@AEBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@$$CBV43@@3@UMakePointer@3@@1@AEBUDefaultDevice@1@@Z</DECORATED>
    <FUNCLINE>411</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>451</LINE>
      <COLUMN>8</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>Ill-defined for-loop:  initial condition does not satisfy test.  Loop body not executed.</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@$$CBV43@@3@UMakePointer@3@@Eigen@@UDefaultDevice@2@@Eigen@@QEAA@AEBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@$$CBV43@@3@UMakePointer@3@@1@AEBUDefaultDevice@1@@Z</DECORATED>
    <FUNCLINE>411</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>456</LINE>
      <COLUMN>8</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>Ill-defined for-loop:  initial condition does not satisfy test.  Loop body not executed.</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@$$CBV43@@3@UMakePointer@3@@Eigen@@UDefaultDevice@2@@Eigen@@QEAA@AEBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@$$CBV43@@3@UMakePointer@3@@1@AEBUDefaultDevice@1@@Z</DECORATED>
    <FUNCLINE>411</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>411</LINE>
      <COLUMN>20</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::m_outputStrides' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@$$CBV43@@3@UMakePointer@3@@Eigen@@UDefaultDevice@2@@Eigen@@QEAA@AEBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@$$CBV43@@3@UMakePointer@3@@1@AEBUDefaultDevice@1@@Z</DECORATED>
    <FUNCLINE>411</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::m_outputStrides</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>411</LINE>
      <COLUMN>20</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::m_preservedStrides' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@$$CBV43@@3@UMakePointer@3@@Eigen@@UDefaultDevice@2@@Eigen@@QEAA@AEBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@$$CBV43@@3@UMakePointer@3@@1@AEBUDefaultDevice@1@@Z</DECORATED>
    <FUNCLINE>411</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::m_preservedStrides</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>411</LINE>
      <COLUMN>20</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::m_reducedStrides' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@$$CBV43@@3@UMakePointer@3@@Eigen@@UDefaultDevice@2@@Eigen@@QEAA@AEBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@$$CBV43@@3@UMakePointer@3@@1@AEBUDefaultDevice@1@@Z</DECORATED>
    <FUNCLINE>411</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::m_reducedStrides</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>441</LINE>
      <COLUMN>49</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@$$CBV43@@3@UMakePointer@3@@Eigen@@UDefaultDevice@2@@Eigen@@QEAA@AEBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@$$CBV43@@3@UMakePointer@3@@1@AEBUDefaultDevice@1@@Z</DECORATED>
    <FUNCLINE>411</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>441</LINE>
      <COLUMN>71</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@$$CBV43@@3@UMakePointer@3@@Eigen@@UDefaultDevice@2@@Eigen@@QEAA@AEBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@$$CBV43@@3@UMakePointer@3@@1@AEBUDefaultDevice@1@@Z</DECORATED>
    <FUNCLINE>411</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>436</LINE>
      <COLUMN>49</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@$$CBV43@@3@UMakePointer@3@@Eigen@@UDefaultDevice@2@@Eigen@@QEAA@AEBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@$$CBV43@@3@UMakePointer@3@@1@AEBUDefaultDevice@1@@Z</DECORATED>
    <FUNCLINE>411</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>436</LINE>
      <COLUMN>71</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@$$CBV43@@3@UMakePointer@3@@Eigen@@UDefaultDevice@2@@Eigen@@QEAA@AEBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@$$CBV43@@3@UMakePointer@3@@1@AEBUDefaultDevice@1@@Z</DECORATED>
    <FUNCLINE>411</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>457</LINE>
      <COLUMN>45</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@$$CBV43@@3@UMakePointer@3@@Eigen@@UDefaultDevice@2@@Eigen@@QEAA@AEBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@$$CBV43@@3@UMakePointer@3@@1@AEBUDefaultDevice@1@@Z</DECORATED>
    <FUNCLINE>411</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>457</LINE>
      <COLUMN>65</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@$$CBV43@@3@UMakePointer@3@@Eigen@@UDefaultDevice@2@@Eigen@@QEAA@AEBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@$$CBV43@@3@UMakePointer@3@@1@AEBUDefaultDevice@1@@Z</DECORATED>
    <FUNCLINE>411</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>452</LINE>
      <COLUMN>44</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@$$CBV43@@3@UMakePointer@3@@Eigen@@UDefaultDevice@2@@Eigen@@QEAA@AEBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@$$CBV43@@3@UMakePointer@3@@1@AEBUDefaultDevice@1@@Z</DECORATED>
    <FUNCLINE>411</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>452</LINE>
      <COLUMN>62</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@$$CBV43@@3@UMakePointer@3@@Eigen@@UDefaultDevice@2@@Eigen@@QEAA@AEBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@$$CBV43@@3@UMakePointer@3@@1@AEBUDefaultDevice@1@@Z</DECORATED>
    <FUNCLINE>411</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>435</LINE>
      <COLUMN>8</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>Ill-defined for-loop:  initial condition does not satisfy test.  Loop body not executed.</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$Tensor@M$00$0A@_J@3@UMakePointer@3@@Eigen@@UDefaultDevice@2@@Eigen@@QEAA@AEBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$Tensor@M$00$0A@_J@3@UMakePointer@3@@1@AEBUDefaultDevice@1@@Z</DECORATED>
    <FUNCLINE>411</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>440</LINE>
      <COLUMN>8</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>Ill-defined for-loop:  initial condition does not satisfy test.  Loop body not executed.</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$Tensor@M$00$0A@_J@3@UMakePointer@3@@Eigen@@UDefaultDevice@2@@Eigen@@QEAA@AEBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$Tensor@M$00$0A@_J@3@UMakePointer@3@@1@AEBUDefaultDevice@1@@Z</DECORATED>
    <FUNCLINE>411</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>451</LINE>
      <COLUMN>8</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>Ill-defined for-loop:  initial condition does not satisfy test.  Loop body not executed.</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$Tensor@M$00$0A@_J@3@UMakePointer@3@@Eigen@@UDefaultDevice@2@@Eigen@@QEAA@AEBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$Tensor@M$00$0A@_J@3@UMakePointer@3@@1@AEBUDefaultDevice@1@@Z</DECORATED>
    <FUNCLINE>411</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>456</LINE>
      <COLUMN>8</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>Ill-defined for-loop:  initial condition does not satisfy test.  Loop body not executed.</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$Tensor@M$00$0A@_J@3@UMakePointer@3@@Eigen@@UDefaultDevice@2@@Eigen@@QEAA@AEBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$Tensor@M$00$0A@_J@3@UMakePointer@3@@1@AEBUDefaultDevice@1@@Z</DECORATED>
    <FUNCLINE>411</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>411</LINE>
      <COLUMN>20</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::m_outputStrides' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$Tensor@M$00$0A@_J@3@UMakePointer@3@@Eigen@@UDefaultDevice@2@@Eigen@@QEAA@AEBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$Tensor@M$00$0A@_J@3@UMakePointer@3@@1@AEBUDefaultDevice@1@@Z</DECORATED>
    <FUNCLINE>411</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::m_outputStrides</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>411</LINE>
      <COLUMN>20</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::m_preservedStrides' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$Tensor@M$00$0A@_J@3@UMakePointer@3@@Eigen@@UDefaultDevice@2@@Eigen@@QEAA@AEBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$Tensor@M$00$0A@_J@3@UMakePointer@3@@1@AEBUDefaultDevice@1@@Z</DECORATED>
    <FUNCLINE>411</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::m_preservedStrides</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>411</LINE>
      <COLUMN>20</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::m_reducedStrides' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$Tensor@M$00$0A@_J@3@UMakePointer@3@@Eigen@@UDefaultDevice@2@@Eigen@@QEAA@AEBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$Tensor@M$00$0A@_J@3@UMakePointer@3@@1@AEBUDefaultDevice@1@@Z</DECORATED>
    <FUNCLINE>411</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::m_reducedStrides</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>441</LINE>
      <COLUMN>49</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$Tensor@M$00$0A@_J@3@UMakePointer@3@@Eigen@@UDefaultDevice@2@@Eigen@@QEAA@AEBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$Tensor@M$00$0A@_J@3@UMakePointer@3@@1@AEBUDefaultDevice@1@@Z</DECORATED>
    <FUNCLINE>411</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>441</LINE>
      <COLUMN>71</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$Tensor@M$00$0A@_J@3@UMakePointer@3@@Eigen@@UDefaultDevice@2@@Eigen@@QEAA@AEBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$Tensor@M$00$0A@_J@3@UMakePointer@3@@1@AEBUDefaultDevice@1@@Z</DECORATED>
    <FUNCLINE>411</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>436</LINE>
      <COLUMN>49</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$Tensor@M$00$0A@_J@3@UMakePointer@3@@Eigen@@UDefaultDevice@2@@Eigen@@QEAA@AEBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$Tensor@M$00$0A@_J@3@UMakePointer@3@@1@AEBUDefaultDevice@1@@Z</DECORATED>
    <FUNCLINE>411</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>436</LINE>
      <COLUMN>71</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$Tensor@M$00$0A@_J@3@UMakePointer@3@@Eigen@@UDefaultDevice@2@@Eigen@@QEAA@AEBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$Tensor@M$00$0A@_J@3@UMakePointer@3@@1@AEBUDefaultDevice@1@@Z</DECORATED>
    <FUNCLINE>411</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>457</LINE>
      <COLUMN>45</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$Tensor@M$00$0A@_J@3@UMakePointer@3@@Eigen@@UDefaultDevice@2@@Eigen@@QEAA@AEBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$Tensor@M$00$0A@_J@3@UMakePointer@3@@1@AEBUDefaultDevice@1@@Z</DECORATED>
    <FUNCLINE>411</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>457</LINE>
      <COLUMN>65</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$Tensor@M$00$0A@_J@3@UMakePointer@3@@Eigen@@UDefaultDevice@2@@Eigen@@QEAA@AEBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$Tensor@M$00$0A@_J@3@UMakePointer@3@@1@AEBUDefaultDevice@1@@Z</DECORATED>
    <FUNCLINE>411</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>452</LINE>
      <COLUMN>44</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$Tensor@M$00$0A@_J@3@UMakePointer@3@@Eigen@@UDefaultDevice@2@@Eigen@@QEAA@AEBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$Tensor@M$00$0A@_J@3@UMakePointer@3@@1@AEBUDefaultDevice@1@@Z</DECORATED>
    <FUNCLINE>411</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>452</LINE>
      <COLUMN>62</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$Tensor@M$00$0A@_J@3@UMakePointer@3@@Eigen@@UDefaultDevice@2@@Eigen@@QEAA@AEBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$Tensor@M$00$0A@_J@3@UMakePointer@3@@1@AEBUDefaultDevice@1@@Z</DECORATED>
    <FUNCLINE>411</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>435</LINE>
      <COLUMN>8</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>Ill-defined for-loop:  initial condition does not satisfy test.  Loop body not executed.</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::scalar_square_op&lt;float&gt;,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_difference_op&lt;float,float&gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const &gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseUnaryOp@U?$scalar_square_op@M@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_difference_op@MM@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@$$CBV43@@3@@3@UMakePointer@3@@Eigen@@UDefaultDevice@2@@Eigen@@QEAA@AEBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseUnaryOp@U?$scalar_square_op@M@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_difference_op@MM@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@$$CBV43@@3@@3@UMakePointer@3@@1@AEBUDefaultDevice@1@@Z</DECORATED>
    <FUNCLINE>411</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>440</LINE>
      <COLUMN>8</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>Ill-defined for-loop:  initial condition does not satisfy test.  Loop body not executed.</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::scalar_square_op&lt;float&gt;,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_difference_op&lt;float,float&gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const &gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseUnaryOp@U?$scalar_square_op@M@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_difference_op@MM@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@$$CBV43@@3@@3@UMakePointer@3@@Eigen@@UDefaultDevice@2@@Eigen@@QEAA@AEBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseUnaryOp@U?$scalar_square_op@M@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_difference_op@MM@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@$$CBV43@@3@@3@UMakePointer@3@@1@AEBUDefaultDevice@1@@Z</DECORATED>
    <FUNCLINE>411</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>451</LINE>
      <COLUMN>8</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>Ill-defined for-loop:  initial condition does not satisfy test.  Loop body not executed.</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::scalar_square_op&lt;float&gt;,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_difference_op&lt;float,float&gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const &gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseUnaryOp@U?$scalar_square_op@M@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_difference_op@MM@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@$$CBV43@@3@@3@UMakePointer@3@@Eigen@@UDefaultDevice@2@@Eigen@@QEAA@AEBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseUnaryOp@U?$scalar_square_op@M@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_difference_op@MM@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@$$CBV43@@3@@3@UMakePointer@3@@1@AEBUDefaultDevice@1@@Z</DECORATED>
    <FUNCLINE>411</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>456</LINE>
      <COLUMN>8</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>Ill-defined for-loop:  initial condition does not satisfy test.  Loop body not executed.</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::scalar_square_op&lt;float&gt;,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_difference_op&lt;float,float&gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const &gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseUnaryOp@U?$scalar_square_op@M@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_difference_op@MM@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@$$CBV43@@3@@3@UMakePointer@3@@Eigen@@UDefaultDevice@2@@Eigen@@QEAA@AEBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseUnaryOp@U?$scalar_square_op@M@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_difference_op@MM@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@$$CBV43@@3@@3@UMakePointer@3@@1@AEBUDefaultDevice@1@@Z</DECORATED>
    <FUNCLINE>411</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>411</LINE>
      <COLUMN>20</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::scalar_square_op&lt;float&gt;,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_difference_op&lt;float,float&gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const &gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::m_outputStrides' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::scalar_square_op&lt;float&gt;,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_difference_op&lt;float,float&gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const &gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseUnaryOp@U?$scalar_square_op@M@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_difference_op@MM@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@$$CBV43@@3@@3@UMakePointer@3@@Eigen@@UDefaultDevice@2@@Eigen@@QEAA@AEBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseUnaryOp@U?$scalar_square_op@M@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_difference_op@MM@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@$$CBV43@@3@@3@UMakePointer@3@@1@AEBUDefaultDevice@1@@Z</DECORATED>
    <FUNCLINE>411</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::scalar_square_op&lt;float&gt;,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_difference_op&lt;float,float&gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const &gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::m_outputStrides</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>411</LINE>
      <COLUMN>20</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::scalar_square_op&lt;float&gt;,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_difference_op&lt;float,float&gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const &gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::m_preservedStrides' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::scalar_square_op&lt;float&gt;,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_difference_op&lt;float,float&gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const &gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseUnaryOp@U?$scalar_square_op@M@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_difference_op@MM@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@$$CBV43@@3@@3@UMakePointer@3@@Eigen@@UDefaultDevice@2@@Eigen@@QEAA@AEBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseUnaryOp@U?$scalar_square_op@M@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_difference_op@MM@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@$$CBV43@@3@@3@UMakePointer@3@@1@AEBUDefaultDevice@1@@Z</DECORATED>
    <FUNCLINE>411</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::scalar_square_op&lt;float&gt;,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_difference_op&lt;float,float&gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const &gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::m_preservedStrides</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>411</LINE>
      <COLUMN>20</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::scalar_square_op&lt;float&gt;,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_difference_op&lt;float,float&gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const &gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::m_reducedStrides' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::scalar_square_op&lt;float&gt;,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_difference_op&lt;float,float&gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const &gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseUnaryOp@U?$scalar_square_op@M@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_difference_op@MM@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@$$CBV43@@3@@3@UMakePointer@3@@Eigen@@UDefaultDevice@2@@Eigen@@QEAA@AEBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseUnaryOp@U?$scalar_square_op@M@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_difference_op@MM@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@$$CBV43@@3@@3@UMakePointer@3@@1@AEBUDefaultDevice@1@@Z</DECORATED>
    <FUNCLINE>411</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::scalar_square_op&lt;float&gt;,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_difference_op&lt;float,float&gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const &gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::m_reducedStrides</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>441</LINE>
      <COLUMN>49</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::scalar_square_op&lt;float&gt;,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_difference_op&lt;float,float&gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const &gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseUnaryOp@U?$scalar_square_op@M@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_difference_op@MM@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@$$CBV43@@3@@3@UMakePointer@3@@Eigen@@UDefaultDevice@2@@Eigen@@QEAA@AEBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseUnaryOp@U?$scalar_square_op@M@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_difference_op@MM@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@$$CBV43@@3@@3@UMakePointer@3@@1@AEBUDefaultDevice@1@@Z</DECORATED>
    <FUNCLINE>411</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>441</LINE>
      <COLUMN>71</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::scalar_square_op&lt;float&gt;,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_difference_op&lt;float,float&gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const &gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseUnaryOp@U?$scalar_square_op@M@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_difference_op@MM@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@$$CBV43@@3@@3@UMakePointer@3@@Eigen@@UDefaultDevice@2@@Eigen@@QEAA@AEBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseUnaryOp@U?$scalar_square_op@M@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_difference_op@MM@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@$$CBV43@@3@@3@UMakePointer@3@@1@AEBUDefaultDevice@1@@Z</DECORATED>
    <FUNCLINE>411</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>436</LINE>
      <COLUMN>49</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::scalar_square_op&lt;float&gt;,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_difference_op&lt;float,float&gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const &gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseUnaryOp@U?$scalar_square_op@M@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_difference_op@MM@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@$$CBV43@@3@@3@UMakePointer@3@@Eigen@@UDefaultDevice@2@@Eigen@@QEAA@AEBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseUnaryOp@U?$scalar_square_op@M@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_difference_op@MM@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@$$CBV43@@3@@3@UMakePointer@3@@1@AEBUDefaultDevice@1@@Z</DECORATED>
    <FUNCLINE>411</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>436</LINE>
      <COLUMN>71</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::scalar_square_op&lt;float&gt;,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_difference_op&lt;float,float&gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const &gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseUnaryOp@U?$scalar_square_op@M@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_difference_op@MM@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@$$CBV43@@3@@3@UMakePointer@3@@Eigen@@UDefaultDevice@2@@Eigen@@QEAA@AEBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseUnaryOp@U?$scalar_square_op@M@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_difference_op@MM@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@$$CBV43@@3@@3@UMakePointer@3@@1@AEBUDefaultDevice@1@@Z</DECORATED>
    <FUNCLINE>411</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>457</LINE>
      <COLUMN>45</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::scalar_square_op&lt;float&gt;,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_difference_op&lt;float,float&gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const &gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseUnaryOp@U?$scalar_square_op@M@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_difference_op@MM@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@$$CBV43@@3@@3@UMakePointer@3@@Eigen@@UDefaultDevice@2@@Eigen@@QEAA@AEBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseUnaryOp@U?$scalar_square_op@M@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_difference_op@MM@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@$$CBV43@@3@@3@UMakePointer@3@@1@AEBUDefaultDevice@1@@Z</DECORATED>
    <FUNCLINE>411</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>457</LINE>
      <COLUMN>65</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::scalar_square_op&lt;float&gt;,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_difference_op&lt;float,float&gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const &gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseUnaryOp@U?$scalar_square_op@M@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_difference_op@MM@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@$$CBV43@@3@@3@UMakePointer@3@@Eigen@@UDefaultDevice@2@@Eigen@@QEAA@AEBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseUnaryOp@U?$scalar_square_op@M@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_difference_op@MM@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@$$CBV43@@3@@3@UMakePointer@3@@1@AEBUDefaultDevice@1@@Z</DECORATED>
    <FUNCLINE>411</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>452</LINE>
      <COLUMN>44</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::scalar_square_op&lt;float&gt;,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_difference_op&lt;float,float&gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const &gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseUnaryOp@U?$scalar_square_op@M@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_difference_op@MM@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@$$CBV43@@3@@3@UMakePointer@3@@Eigen@@UDefaultDevice@2@@Eigen@@QEAA@AEBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseUnaryOp@U?$scalar_square_op@M@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_difference_op@MM@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@$$CBV43@@3@@3@UMakePointer@3@@1@AEBUDefaultDevice@1@@Z</DECORATED>
    <FUNCLINE>411</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>452</LINE>
      <COLUMN>62</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::scalar_square_op&lt;float&gt;,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_difference_op&lt;float,float&gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const &gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseUnaryOp@U?$scalar_square_op@M@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_difference_op@MM@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@$$CBV43@@3@@3@UMakePointer@3@@Eigen@@UDefaultDevice@2@@Eigen@@QEAA@AEBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseUnaryOp@U?$scalar_square_op@M@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_difference_op@MM@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@$$CBV43@@3@@3@UMakePointer@3@@1@AEBUDefaultDevice@1@@Z</DECORATED>
    <FUNCLINE>411</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>435</LINE>
      <COLUMN>8</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>Ill-defined for-loop:  initial condition does not satisfy test.  Loop body not executed.</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::bind1st_op&lt;Eigen::internal::scalar_product_op&lt;float,float&gt; &gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::bind1st_op&lt;Eigen::internal::scalar_sum_op&lt;float,float&gt; &gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const &gt; const ,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::scalar_opposite_op&lt;float&gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const &gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseUnaryOp@U?$bind1st_op@U?$scalar_product_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@$$CBV?$Tensor@M$00$0A@_J@3@@3@$$CBV?$TensorCwiseUnaryOp@U?$bind1st_op@U?$scalar_sum_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@@3@$$CBV?$TensorCwiseUnaryOp@U?$scalar_opposite_op@M@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@@3@UMakePointer@3@@Eigen@@UDefaultDevice@2@@Eigen@@QEAA@AEBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseUnaryOp@U?$bind1st_op@U?$scalar_product_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@$$CBV?$Tensor@M$00$0A@_J@3@@3@$$CBV?$TensorCwiseUnaryOp@U?$bind1st_op@U?$scalar_sum_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@@3@$$CBV?$TensorCwiseUnaryOp@U?$scalar_opposite_op@M@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@@3@UMakePointer@3@@1@AEBUDefaultDevice@1@@Z</DECORATED>
    <FUNCLINE>411</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>440</LINE>
      <COLUMN>8</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>Ill-defined for-loop:  initial condition does not satisfy test.  Loop body not executed.</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::bind1st_op&lt;Eigen::internal::scalar_product_op&lt;float,float&gt; &gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::bind1st_op&lt;Eigen::internal::scalar_sum_op&lt;float,float&gt; &gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const &gt; const ,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::scalar_opposite_op&lt;float&gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const &gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseUnaryOp@U?$bind1st_op@U?$scalar_product_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@$$CBV?$Tensor@M$00$0A@_J@3@@3@$$CBV?$TensorCwiseUnaryOp@U?$bind1st_op@U?$scalar_sum_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@@3@$$CBV?$TensorCwiseUnaryOp@U?$scalar_opposite_op@M@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@@3@UMakePointer@3@@Eigen@@UDefaultDevice@2@@Eigen@@QEAA@AEBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseUnaryOp@U?$bind1st_op@U?$scalar_product_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@$$CBV?$Tensor@M$00$0A@_J@3@@3@$$CBV?$TensorCwiseUnaryOp@U?$bind1st_op@U?$scalar_sum_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@@3@$$CBV?$TensorCwiseUnaryOp@U?$scalar_opposite_op@M@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@@3@UMakePointer@3@@1@AEBUDefaultDevice@1@@Z</DECORATED>
    <FUNCLINE>411</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>451</LINE>
      <COLUMN>8</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>Ill-defined for-loop:  initial condition does not satisfy test.  Loop body not executed.</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::bind1st_op&lt;Eigen::internal::scalar_product_op&lt;float,float&gt; &gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::bind1st_op&lt;Eigen::internal::scalar_sum_op&lt;float,float&gt; &gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const &gt; const ,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::scalar_opposite_op&lt;float&gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const &gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseUnaryOp@U?$bind1st_op@U?$scalar_product_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@$$CBV?$Tensor@M$00$0A@_J@3@@3@$$CBV?$TensorCwiseUnaryOp@U?$bind1st_op@U?$scalar_sum_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@@3@$$CBV?$TensorCwiseUnaryOp@U?$scalar_opposite_op@M@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@@3@UMakePointer@3@@Eigen@@UDefaultDevice@2@@Eigen@@QEAA@AEBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseUnaryOp@U?$bind1st_op@U?$scalar_product_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@$$CBV?$Tensor@M$00$0A@_J@3@@3@$$CBV?$TensorCwiseUnaryOp@U?$bind1st_op@U?$scalar_sum_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@@3@$$CBV?$TensorCwiseUnaryOp@U?$scalar_opposite_op@M@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@@3@UMakePointer@3@@1@AEBUDefaultDevice@1@@Z</DECORATED>
    <FUNCLINE>411</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>456</LINE>
      <COLUMN>8</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>Ill-defined for-loop:  initial condition does not satisfy test.  Loop body not executed.</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::bind1st_op&lt;Eigen::internal::scalar_product_op&lt;float,float&gt; &gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::bind1st_op&lt;Eigen::internal::scalar_sum_op&lt;float,float&gt; &gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const &gt; const ,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::scalar_opposite_op&lt;float&gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const &gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseUnaryOp@U?$bind1st_op@U?$scalar_product_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@$$CBV?$Tensor@M$00$0A@_J@3@@3@$$CBV?$TensorCwiseUnaryOp@U?$bind1st_op@U?$scalar_sum_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@@3@$$CBV?$TensorCwiseUnaryOp@U?$scalar_opposite_op@M@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@@3@UMakePointer@3@@Eigen@@UDefaultDevice@2@@Eigen@@QEAA@AEBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseUnaryOp@U?$bind1st_op@U?$scalar_product_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@$$CBV?$Tensor@M$00$0A@_J@3@@3@$$CBV?$TensorCwiseUnaryOp@U?$bind1st_op@U?$scalar_sum_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@@3@$$CBV?$TensorCwiseUnaryOp@U?$scalar_opposite_op@M@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@@3@UMakePointer@3@@1@AEBUDefaultDevice@1@@Z</DECORATED>
    <FUNCLINE>411</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>411</LINE>
      <COLUMN>20</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::bind1st_op&lt;Eigen::internal::scalar_product_op&lt;float,float&gt; &gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::bind1st_op&lt;Eigen::internal::scalar_sum_op&lt;float,float&gt; &gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const &gt; const ,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::scalar_opposite_op&lt;float&gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const &gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::m_outputStrides' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::bind1st_op&lt;Eigen::internal::scalar_product_op&lt;float,float&gt; &gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::bind1st_op&lt;Eigen::internal::scalar_sum_op&lt;float,float&gt; &gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const &gt; const ,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::scalar_opposite_op&lt;float&gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const &gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseUnaryOp@U?$bind1st_op@U?$scalar_product_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@$$CBV?$Tensor@M$00$0A@_J@3@@3@$$CBV?$TensorCwiseUnaryOp@U?$bind1st_op@U?$scalar_sum_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@@3@$$CBV?$TensorCwiseUnaryOp@U?$scalar_opposite_op@M@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@@3@UMakePointer@3@@Eigen@@UDefaultDevice@2@@Eigen@@QEAA@AEBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseUnaryOp@U?$bind1st_op@U?$scalar_product_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@$$CBV?$Tensor@M$00$0A@_J@3@@3@$$CBV?$TensorCwiseUnaryOp@U?$bind1st_op@U?$scalar_sum_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@@3@$$CBV?$TensorCwiseUnaryOp@U?$scalar_opposite_op@M@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@@3@UMakePointer@3@@1@AEBUDefaultDevice@1@@Z</DECORATED>
    <FUNCLINE>411</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::bind1st_op&lt;Eigen::internal::scalar_product_op&lt;float,float&gt; &gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::bind1st_op&lt;Eigen::internal::scalar_sum_op&lt;float,float&gt; &gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const &gt; const ,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::scalar_opposite_op&lt;float&gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const &gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::m_outputStrides</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>411</LINE>
      <COLUMN>20</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::bind1st_op&lt;Eigen::internal::scalar_product_op&lt;float,float&gt; &gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::bind1st_op&lt;Eigen::internal::scalar_sum_op&lt;float,float&gt; &gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const &gt; const ,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::scalar_opposite_op&lt;float&gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const &gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::m_preservedStrides' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::bind1st_op&lt;Eigen::internal::scalar_product_op&lt;float,float&gt; &gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::bind1st_op&lt;Eigen::internal::scalar_sum_op&lt;float,float&gt; &gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const &gt; const ,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::scalar_opposite_op&lt;float&gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const &gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseUnaryOp@U?$bind1st_op@U?$scalar_product_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@$$CBV?$Tensor@M$00$0A@_J@3@@3@$$CBV?$TensorCwiseUnaryOp@U?$bind1st_op@U?$scalar_sum_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@@3@$$CBV?$TensorCwiseUnaryOp@U?$scalar_opposite_op@M@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@@3@UMakePointer@3@@Eigen@@UDefaultDevice@2@@Eigen@@QEAA@AEBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseUnaryOp@U?$bind1st_op@U?$scalar_product_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@$$CBV?$Tensor@M$00$0A@_J@3@@3@$$CBV?$TensorCwiseUnaryOp@U?$bind1st_op@U?$scalar_sum_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@@3@$$CBV?$TensorCwiseUnaryOp@U?$scalar_opposite_op@M@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@@3@UMakePointer@3@@1@AEBUDefaultDevice@1@@Z</DECORATED>
    <FUNCLINE>411</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::bind1st_op&lt;Eigen::internal::scalar_product_op&lt;float,float&gt; &gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::bind1st_op&lt;Eigen::internal::scalar_sum_op&lt;float,float&gt; &gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const &gt; const ,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::scalar_opposite_op&lt;float&gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const &gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::m_preservedStrides</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>411</LINE>
      <COLUMN>20</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::bind1st_op&lt;Eigen::internal::scalar_product_op&lt;float,float&gt; &gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::bind1st_op&lt;Eigen::internal::scalar_sum_op&lt;float,float&gt; &gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const &gt; const ,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::scalar_opposite_op&lt;float&gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const &gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::m_reducedStrides' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::bind1st_op&lt;Eigen::internal::scalar_product_op&lt;float,float&gt; &gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::bind1st_op&lt;Eigen::internal::scalar_sum_op&lt;float,float&gt; &gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const &gt; const ,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::scalar_opposite_op&lt;float&gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const &gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseUnaryOp@U?$bind1st_op@U?$scalar_product_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@$$CBV?$Tensor@M$00$0A@_J@3@@3@$$CBV?$TensorCwiseUnaryOp@U?$bind1st_op@U?$scalar_sum_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@@3@$$CBV?$TensorCwiseUnaryOp@U?$scalar_opposite_op@M@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@@3@UMakePointer@3@@Eigen@@UDefaultDevice@2@@Eigen@@QEAA@AEBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseUnaryOp@U?$bind1st_op@U?$scalar_product_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@$$CBV?$Tensor@M$00$0A@_J@3@@3@$$CBV?$TensorCwiseUnaryOp@U?$bind1st_op@U?$scalar_sum_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@@3@$$CBV?$TensorCwiseUnaryOp@U?$scalar_opposite_op@M@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@@3@UMakePointer@3@@1@AEBUDefaultDevice@1@@Z</DECORATED>
    <FUNCLINE>411</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::bind1st_op&lt;Eigen::internal::scalar_product_op&lt;float,float&gt; &gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::bind1st_op&lt;Eigen::internal::scalar_sum_op&lt;float,float&gt; &gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const &gt; const ,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::scalar_opposite_op&lt;float&gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const &gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::m_reducedStrides</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>441</LINE>
      <COLUMN>49</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::bind1st_op&lt;Eigen::internal::scalar_product_op&lt;float,float&gt; &gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::bind1st_op&lt;Eigen::internal::scalar_sum_op&lt;float,float&gt; &gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const &gt; const ,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::scalar_opposite_op&lt;float&gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const &gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseUnaryOp@U?$bind1st_op@U?$scalar_product_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@$$CBV?$Tensor@M$00$0A@_J@3@@3@$$CBV?$TensorCwiseUnaryOp@U?$bind1st_op@U?$scalar_sum_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@@3@$$CBV?$TensorCwiseUnaryOp@U?$scalar_opposite_op@M@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@@3@UMakePointer@3@@Eigen@@UDefaultDevice@2@@Eigen@@QEAA@AEBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseUnaryOp@U?$bind1st_op@U?$scalar_product_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@$$CBV?$Tensor@M$00$0A@_J@3@@3@$$CBV?$TensorCwiseUnaryOp@U?$bind1st_op@U?$scalar_sum_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@@3@$$CBV?$TensorCwiseUnaryOp@U?$scalar_opposite_op@M@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@@3@UMakePointer@3@@1@AEBUDefaultDevice@1@@Z</DECORATED>
    <FUNCLINE>411</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>441</LINE>
      <COLUMN>71</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::bind1st_op&lt;Eigen::internal::scalar_product_op&lt;float,float&gt; &gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::bind1st_op&lt;Eigen::internal::scalar_sum_op&lt;float,float&gt; &gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const &gt; const ,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::scalar_opposite_op&lt;float&gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const &gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseUnaryOp@U?$bind1st_op@U?$scalar_product_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@$$CBV?$Tensor@M$00$0A@_J@3@@3@$$CBV?$TensorCwiseUnaryOp@U?$bind1st_op@U?$scalar_sum_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@@3@$$CBV?$TensorCwiseUnaryOp@U?$scalar_opposite_op@M@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@@3@UMakePointer@3@@Eigen@@UDefaultDevice@2@@Eigen@@QEAA@AEBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseUnaryOp@U?$bind1st_op@U?$scalar_product_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@$$CBV?$Tensor@M$00$0A@_J@3@@3@$$CBV?$TensorCwiseUnaryOp@U?$bind1st_op@U?$scalar_sum_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@@3@$$CBV?$TensorCwiseUnaryOp@U?$scalar_opposite_op@M@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@@3@UMakePointer@3@@1@AEBUDefaultDevice@1@@Z</DECORATED>
    <FUNCLINE>411</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>436</LINE>
      <COLUMN>49</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::bind1st_op&lt;Eigen::internal::scalar_product_op&lt;float,float&gt; &gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::bind1st_op&lt;Eigen::internal::scalar_sum_op&lt;float,float&gt; &gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const &gt; const ,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::scalar_opposite_op&lt;float&gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const &gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseUnaryOp@U?$bind1st_op@U?$scalar_product_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@$$CBV?$Tensor@M$00$0A@_J@3@@3@$$CBV?$TensorCwiseUnaryOp@U?$bind1st_op@U?$scalar_sum_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@@3@$$CBV?$TensorCwiseUnaryOp@U?$scalar_opposite_op@M@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@@3@UMakePointer@3@@Eigen@@UDefaultDevice@2@@Eigen@@QEAA@AEBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseUnaryOp@U?$bind1st_op@U?$scalar_product_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@$$CBV?$Tensor@M$00$0A@_J@3@@3@$$CBV?$TensorCwiseUnaryOp@U?$bind1st_op@U?$scalar_sum_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@@3@$$CBV?$TensorCwiseUnaryOp@U?$scalar_opposite_op@M@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@@3@UMakePointer@3@@1@AEBUDefaultDevice@1@@Z</DECORATED>
    <FUNCLINE>411</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>436</LINE>
      <COLUMN>71</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::bind1st_op&lt;Eigen::internal::scalar_product_op&lt;float,float&gt; &gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::bind1st_op&lt;Eigen::internal::scalar_sum_op&lt;float,float&gt; &gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const &gt; const ,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::scalar_opposite_op&lt;float&gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const &gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseUnaryOp@U?$bind1st_op@U?$scalar_product_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@$$CBV?$Tensor@M$00$0A@_J@3@@3@$$CBV?$TensorCwiseUnaryOp@U?$bind1st_op@U?$scalar_sum_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@@3@$$CBV?$TensorCwiseUnaryOp@U?$scalar_opposite_op@M@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@@3@UMakePointer@3@@Eigen@@UDefaultDevice@2@@Eigen@@QEAA@AEBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseUnaryOp@U?$bind1st_op@U?$scalar_product_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@$$CBV?$Tensor@M$00$0A@_J@3@@3@$$CBV?$TensorCwiseUnaryOp@U?$bind1st_op@U?$scalar_sum_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@@3@$$CBV?$TensorCwiseUnaryOp@U?$scalar_opposite_op@M@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@@3@UMakePointer@3@@1@AEBUDefaultDevice@1@@Z</DECORATED>
    <FUNCLINE>411</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>457</LINE>
      <COLUMN>45</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::bind1st_op&lt;Eigen::internal::scalar_product_op&lt;float,float&gt; &gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::bind1st_op&lt;Eigen::internal::scalar_sum_op&lt;float,float&gt; &gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const &gt; const ,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::scalar_opposite_op&lt;float&gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const &gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseUnaryOp@U?$bind1st_op@U?$scalar_product_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@$$CBV?$Tensor@M$00$0A@_J@3@@3@$$CBV?$TensorCwiseUnaryOp@U?$bind1st_op@U?$scalar_sum_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@@3@$$CBV?$TensorCwiseUnaryOp@U?$scalar_opposite_op@M@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@@3@UMakePointer@3@@Eigen@@UDefaultDevice@2@@Eigen@@QEAA@AEBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseUnaryOp@U?$bind1st_op@U?$scalar_product_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@$$CBV?$Tensor@M$00$0A@_J@3@@3@$$CBV?$TensorCwiseUnaryOp@U?$bind1st_op@U?$scalar_sum_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@@3@$$CBV?$TensorCwiseUnaryOp@U?$scalar_opposite_op@M@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@@3@UMakePointer@3@@1@AEBUDefaultDevice@1@@Z</DECORATED>
    <FUNCLINE>411</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>457</LINE>
      <COLUMN>65</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::bind1st_op&lt;Eigen::internal::scalar_product_op&lt;float,float&gt; &gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::bind1st_op&lt;Eigen::internal::scalar_sum_op&lt;float,float&gt; &gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const &gt; const ,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::scalar_opposite_op&lt;float&gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const &gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseUnaryOp@U?$bind1st_op@U?$scalar_product_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@$$CBV?$Tensor@M$00$0A@_J@3@@3@$$CBV?$TensorCwiseUnaryOp@U?$bind1st_op@U?$scalar_sum_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@@3@$$CBV?$TensorCwiseUnaryOp@U?$scalar_opposite_op@M@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@@3@UMakePointer@3@@Eigen@@UDefaultDevice@2@@Eigen@@QEAA@AEBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseUnaryOp@U?$bind1st_op@U?$scalar_product_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@$$CBV?$Tensor@M$00$0A@_J@3@@3@$$CBV?$TensorCwiseUnaryOp@U?$bind1st_op@U?$scalar_sum_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@@3@$$CBV?$TensorCwiseUnaryOp@U?$scalar_opposite_op@M@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@@3@UMakePointer@3@@1@AEBUDefaultDevice@1@@Z</DECORATED>
    <FUNCLINE>411</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>452</LINE>
      <COLUMN>44</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::bind1st_op&lt;Eigen::internal::scalar_product_op&lt;float,float&gt; &gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::bind1st_op&lt;Eigen::internal::scalar_sum_op&lt;float,float&gt; &gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const &gt; const ,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::scalar_opposite_op&lt;float&gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const &gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseUnaryOp@U?$bind1st_op@U?$scalar_product_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@$$CBV?$Tensor@M$00$0A@_J@3@@3@$$CBV?$TensorCwiseUnaryOp@U?$bind1st_op@U?$scalar_sum_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@@3@$$CBV?$TensorCwiseUnaryOp@U?$scalar_opposite_op@M@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@@3@UMakePointer@3@@Eigen@@UDefaultDevice@2@@Eigen@@QEAA@AEBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseUnaryOp@U?$bind1st_op@U?$scalar_product_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@$$CBV?$Tensor@M$00$0A@_J@3@@3@$$CBV?$TensorCwiseUnaryOp@U?$bind1st_op@U?$scalar_sum_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@@3@$$CBV?$TensorCwiseUnaryOp@U?$scalar_opposite_op@M@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@@3@UMakePointer@3@@1@AEBUDefaultDevice@1@@Z</DECORATED>
    <FUNCLINE>411</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>452</LINE>
      <COLUMN>62</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::bind1st_op&lt;Eigen::internal::scalar_product_op&lt;float,float&gt; &gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::bind1st_op&lt;Eigen::internal::scalar_sum_op&lt;float,float&gt; &gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const &gt; const ,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::scalar_opposite_op&lt;float&gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const &gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseUnaryOp@U?$bind1st_op@U?$scalar_product_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@$$CBV?$Tensor@M$00$0A@_J@3@@3@$$CBV?$TensorCwiseUnaryOp@U?$bind1st_op@U?$scalar_sum_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@@3@$$CBV?$TensorCwiseUnaryOp@U?$scalar_opposite_op@M@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@@3@UMakePointer@3@@Eigen@@UDefaultDevice@2@@Eigen@@QEAA@AEBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseUnaryOp@U?$bind1st_op@U?$scalar_product_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@$$CBV?$Tensor@M$00$0A@_J@3@@3@$$CBV?$TensorCwiseUnaryOp@U?$bind1st_op@U?$scalar_sum_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@@3@$$CBV?$TensorCwiseUnaryOp@U?$scalar_opposite_op@M@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@@3@UMakePointer@3@@1@AEBUDefaultDevice@1@@Z</DECORATED>
    <FUNCLINE>411</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>435</LINE>
      <COLUMN>8</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>Ill-defined for-loop:  initial condition does not satisfy test.  Loop body not executed.</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::bind1st_op&lt;Eigen::internal::scalar_product_op&lt;float,float&gt; &gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::bind1st_op&lt;Eigen::internal::scalar_sum_op&lt;float,float&gt; &gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const &gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseUnaryOp@U?$bind1st_op@U?$scalar_product_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@$$CBV?$Tensor@M$00$0A@_J@3@@3@$$CBV?$TensorCwiseUnaryOp@U?$bind1st_op@U?$scalar_sum_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@@3@UMakePointer@3@@Eigen@@UDefaultDevice@2@@Eigen@@QEAA@AEBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseUnaryOp@U?$bind1st_op@U?$scalar_product_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@$$CBV?$Tensor@M$00$0A@_J@3@@3@$$CBV?$TensorCwiseUnaryOp@U?$bind1st_op@U?$scalar_sum_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@@3@UMakePointer@3@@1@AEBUDefaultDevice@1@@Z</DECORATED>
    <FUNCLINE>411</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>440</LINE>
      <COLUMN>8</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>Ill-defined for-loop:  initial condition does not satisfy test.  Loop body not executed.</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::bind1st_op&lt;Eigen::internal::scalar_product_op&lt;float,float&gt; &gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::bind1st_op&lt;Eigen::internal::scalar_sum_op&lt;float,float&gt; &gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const &gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseUnaryOp@U?$bind1st_op@U?$scalar_product_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@$$CBV?$Tensor@M$00$0A@_J@3@@3@$$CBV?$TensorCwiseUnaryOp@U?$bind1st_op@U?$scalar_sum_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@@3@UMakePointer@3@@Eigen@@UDefaultDevice@2@@Eigen@@QEAA@AEBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseUnaryOp@U?$bind1st_op@U?$scalar_product_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@$$CBV?$Tensor@M$00$0A@_J@3@@3@$$CBV?$TensorCwiseUnaryOp@U?$bind1st_op@U?$scalar_sum_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@@3@UMakePointer@3@@1@AEBUDefaultDevice@1@@Z</DECORATED>
    <FUNCLINE>411</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>451</LINE>
      <COLUMN>8</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>Ill-defined for-loop:  initial condition does not satisfy test.  Loop body not executed.</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::bind1st_op&lt;Eigen::internal::scalar_product_op&lt;float,float&gt; &gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::bind1st_op&lt;Eigen::internal::scalar_sum_op&lt;float,float&gt; &gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const &gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseUnaryOp@U?$bind1st_op@U?$scalar_product_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@$$CBV?$Tensor@M$00$0A@_J@3@@3@$$CBV?$TensorCwiseUnaryOp@U?$bind1st_op@U?$scalar_sum_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@@3@UMakePointer@3@@Eigen@@UDefaultDevice@2@@Eigen@@QEAA@AEBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseUnaryOp@U?$bind1st_op@U?$scalar_product_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@$$CBV?$Tensor@M$00$0A@_J@3@@3@$$CBV?$TensorCwiseUnaryOp@U?$bind1st_op@U?$scalar_sum_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@@3@UMakePointer@3@@1@AEBUDefaultDevice@1@@Z</DECORATED>
    <FUNCLINE>411</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>456</LINE>
      <COLUMN>8</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>Ill-defined for-loop:  initial condition does not satisfy test.  Loop body not executed.</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::bind1st_op&lt;Eigen::internal::scalar_product_op&lt;float,float&gt; &gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::bind1st_op&lt;Eigen::internal::scalar_sum_op&lt;float,float&gt; &gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const &gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseUnaryOp@U?$bind1st_op@U?$scalar_product_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@$$CBV?$Tensor@M$00$0A@_J@3@@3@$$CBV?$TensorCwiseUnaryOp@U?$bind1st_op@U?$scalar_sum_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@@3@UMakePointer@3@@Eigen@@UDefaultDevice@2@@Eigen@@QEAA@AEBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseUnaryOp@U?$bind1st_op@U?$scalar_product_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@$$CBV?$Tensor@M$00$0A@_J@3@@3@$$CBV?$TensorCwiseUnaryOp@U?$bind1st_op@U?$scalar_sum_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@@3@UMakePointer@3@@1@AEBUDefaultDevice@1@@Z</DECORATED>
    <FUNCLINE>411</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>411</LINE>
      <COLUMN>20</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::bind1st_op&lt;Eigen::internal::scalar_product_op&lt;float,float&gt; &gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::bind1st_op&lt;Eigen::internal::scalar_sum_op&lt;float,float&gt; &gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const &gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::m_outputStrides' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::bind1st_op&lt;Eigen::internal::scalar_product_op&lt;float,float&gt; &gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::bind1st_op&lt;Eigen::internal::scalar_sum_op&lt;float,float&gt; &gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const &gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseUnaryOp@U?$bind1st_op@U?$scalar_product_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@$$CBV?$Tensor@M$00$0A@_J@3@@3@$$CBV?$TensorCwiseUnaryOp@U?$bind1st_op@U?$scalar_sum_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@@3@UMakePointer@3@@Eigen@@UDefaultDevice@2@@Eigen@@QEAA@AEBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseUnaryOp@U?$bind1st_op@U?$scalar_product_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@$$CBV?$Tensor@M$00$0A@_J@3@@3@$$CBV?$TensorCwiseUnaryOp@U?$bind1st_op@U?$scalar_sum_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@@3@UMakePointer@3@@1@AEBUDefaultDevice@1@@Z</DECORATED>
    <FUNCLINE>411</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::bind1st_op&lt;Eigen::internal::scalar_product_op&lt;float,float&gt; &gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::bind1st_op&lt;Eigen::internal::scalar_sum_op&lt;float,float&gt; &gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const &gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::m_outputStrides</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>411</LINE>
      <COLUMN>20</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::bind1st_op&lt;Eigen::internal::scalar_product_op&lt;float,float&gt; &gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::bind1st_op&lt;Eigen::internal::scalar_sum_op&lt;float,float&gt; &gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const &gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::m_preservedStrides' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::bind1st_op&lt;Eigen::internal::scalar_product_op&lt;float,float&gt; &gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::bind1st_op&lt;Eigen::internal::scalar_sum_op&lt;float,float&gt; &gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const &gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseUnaryOp@U?$bind1st_op@U?$scalar_product_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@$$CBV?$Tensor@M$00$0A@_J@3@@3@$$CBV?$TensorCwiseUnaryOp@U?$bind1st_op@U?$scalar_sum_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@@3@UMakePointer@3@@Eigen@@UDefaultDevice@2@@Eigen@@QEAA@AEBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseUnaryOp@U?$bind1st_op@U?$scalar_product_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@$$CBV?$Tensor@M$00$0A@_J@3@@3@$$CBV?$TensorCwiseUnaryOp@U?$bind1st_op@U?$scalar_sum_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@@3@UMakePointer@3@@1@AEBUDefaultDevice@1@@Z</DECORATED>
    <FUNCLINE>411</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::bind1st_op&lt;Eigen::internal::scalar_product_op&lt;float,float&gt; &gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::bind1st_op&lt;Eigen::internal::scalar_sum_op&lt;float,float&gt; &gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const &gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::m_preservedStrides</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>411</LINE>
      <COLUMN>20</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::bind1st_op&lt;Eigen::internal::scalar_product_op&lt;float,float&gt; &gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::bind1st_op&lt;Eigen::internal::scalar_sum_op&lt;float,float&gt; &gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const &gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::m_reducedStrides' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::bind1st_op&lt;Eigen::internal::scalar_product_op&lt;float,float&gt; &gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::bind1st_op&lt;Eigen::internal::scalar_sum_op&lt;float,float&gt; &gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const &gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseUnaryOp@U?$bind1st_op@U?$scalar_product_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@$$CBV?$Tensor@M$00$0A@_J@3@@3@$$CBV?$TensorCwiseUnaryOp@U?$bind1st_op@U?$scalar_sum_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@@3@UMakePointer@3@@Eigen@@UDefaultDevice@2@@Eigen@@QEAA@AEBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseUnaryOp@U?$bind1st_op@U?$scalar_product_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@$$CBV?$Tensor@M$00$0A@_J@3@@3@$$CBV?$TensorCwiseUnaryOp@U?$bind1st_op@U?$scalar_sum_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@@3@UMakePointer@3@@1@AEBUDefaultDevice@1@@Z</DECORATED>
    <FUNCLINE>411</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::bind1st_op&lt;Eigen::internal::scalar_product_op&lt;float,float&gt; &gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::bind1st_op&lt;Eigen::internal::scalar_sum_op&lt;float,float&gt; &gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const &gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::m_reducedStrides</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>441</LINE>
      <COLUMN>49</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::bind1st_op&lt;Eigen::internal::scalar_product_op&lt;float,float&gt; &gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::bind1st_op&lt;Eigen::internal::scalar_sum_op&lt;float,float&gt; &gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const &gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseUnaryOp@U?$bind1st_op@U?$scalar_product_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@$$CBV?$Tensor@M$00$0A@_J@3@@3@$$CBV?$TensorCwiseUnaryOp@U?$bind1st_op@U?$scalar_sum_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@@3@UMakePointer@3@@Eigen@@UDefaultDevice@2@@Eigen@@QEAA@AEBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseUnaryOp@U?$bind1st_op@U?$scalar_product_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@$$CBV?$Tensor@M$00$0A@_J@3@@3@$$CBV?$TensorCwiseUnaryOp@U?$bind1st_op@U?$scalar_sum_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@@3@UMakePointer@3@@1@AEBUDefaultDevice@1@@Z</DECORATED>
    <FUNCLINE>411</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>441</LINE>
      <COLUMN>71</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::bind1st_op&lt;Eigen::internal::scalar_product_op&lt;float,float&gt; &gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::bind1st_op&lt;Eigen::internal::scalar_sum_op&lt;float,float&gt; &gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const &gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseUnaryOp@U?$bind1st_op@U?$scalar_product_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@$$CBV?$Tensor@M$00$0A@_J@3@@3@$$CBV?$TensorCwiseUnaryOp@U?$bind1st_op@U?$scalar_sum_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@@3@UMakePointer@3@@Eigen@@UDefaultDevice@2@@Eigen@@QEAA@AEBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseUnaryOp@U?$bind1st_op@U?$scalar_product_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@$$CBV?$Tensor@M$00$0A@_J@3@@3@$$CBV?$TensorCwiseUnaryOp@U?$bind1st_op@U?$scalar_sum_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@@3@UMakePointer@3@@1@AEBUDefaultDevice@1@@Z</DECORATED>
    <FUNCLINE>411</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>436</LINE>
      <COLUMN>49</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::bind1st_op&lt;Eigen::internal::scalar_product_op&lt;float,float&gt; &gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::bind1st_op&lt;Eigen::internal::scalar_sum_op&lt;float,float&gt; &gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const &gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseUnaryOp@U?$bind1st_op@U?$scalar_product_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@$$CBV?$Tensor@M$00$0A@_J@3@@3@$$CBV?$TensorCwiseUnaryOp@U?$bind1st_op@U?$scalar_sum_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@@3@UMakePointer@3@@Eigen@@UDefaultDevice@2@@Eigen@@QEAA@AEBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseUnaryOp@U?$bind1st_op@U?$scalar_product_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@$$CBV?$Tensor@M$00$0A@_J@3@@3@$$CBV?$TensorCwiseUnaryOp@U?$bind1st_op@U?$scalar_sum_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@@3@UMakePointer@3@@1@AEBUDefaultDevice@1@@Z</DECORATED>
    <FUNCLINE>411</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>436</LINE>
      <COLUMN>71</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::bind1st_op&lt;Eigen::internal::scalar_product_op&lt;float,float&gt; &gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::bind1st_op&lt;Eigen::internal::scalar_sum_op&lt;float,float&gt; &gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const &gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseUnaryOp@U?$bind1st_op@U?$scalar_product_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@$$CBV?$Tensor@M$00$0A@_J@3@@3@$$CBV?$TensorCwiseUnaryOp@U?$bind1st_op@U?$scalar_sum_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@@3@UMakePointer@3@@Eigen@@UDefaultDevice@2@@Eigen@@QEAA@AEBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseUnaryOp@U?$bind1st_op@U?$scalar_product_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@$$CBV?$Tensor@M$00$0A@_J@3@@3@$$CBV?$TensorCwiseUnaryOp@U?$bind1st_op@U?$scalar_sum_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@@3@UMakePointer@3@@1@AEBUDefaultDevice@1@@Z</DECORATED>
    <FUNCLINE>411</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>457</LINE>
      <COLUMN>45</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::bind1st_op&lt;Eigen::internal::scalar_product_op&lt;float,float&gt; &gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::bind1st_op&lt;Eigen::internal::scalar_sum_op&lt;float,float&gt; &gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const &gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseUnaryOp@U?$bind1st_op@U?$scalar_product_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@$$CBV?$Tensor@M$00$0A@_J@3@@3@$$CBV?$TensorCwiseUnaryOp@U?$bind1st_op@U?$scalar_sum_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@@3@UMakePointer@3@@Eigen@@UDefaultDevice@2@@Eigen@@QEAA@AEBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseUnaryOp@U?$bind1st_op@U?$scalar_product_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@$$CBV?$Tensor@M$00$0A@_J@3@@3@$$CBV?$TensorCwiseUnaryOp@U?$bind1st_op@U?$scalar_sum_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@@3@UMakePointer@3@@1@AEBUDefaultDevice@1@@Z</DECORATED>
    <FUNCLINE>411</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>457</LINE>
      <COLUMN>65</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::bind1st_op&lt;Eigen::internal::scalar_product_op&lt;float,float&gt; &gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::bind1st_op&lt;Eigen::internal::scalar_sum_op&lt;float,float&gt; &gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const &gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseUnaryOp@U?$bind1st_op@U?$scalar_product_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@$$CBV?$Tensor@M$00$0A@_J@3@@3@$$CBV?$TensorCwiseUnaryOp@U?$bind1st_op@U?$scalar_sum_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@@3@UMakePointer@3@@Eigen@@UDefaultDevice@2@@Eigen@@QEAA@AEBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseUnaryOp@U?$bind1st_op@U?$scalar_product_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@$$CBV?$Tensor@M$00$0A@_J@3@@3@$$CBV?$TensorCwiseUnaryOp@U?$bind1st_op@U?$scalar_sum_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@@3@UMakePointer@3@@1@AEBUDefaultDevice@1@@Z</DECORATED>
    <FUNCLINE>411</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>452</LINE>
      <COLUMN>44</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::bind1st_op&lt;Eigen::internal::scalar_product_op&lt;float,float&gt; &gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::bind1st_op&lt;Eigen::internal::scalar_sum_op&lt;float,float&gt; &gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const &gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseUnaryOp@U?$bind1st_op@U?$scalar_product_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@$$CBV?$Tensor@M$00$0A@_J@3@@3@$$CBV?$TensorCwiseUnaryOp@U?$bind1st_op@U?$scalar_sum_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@@3@UMakePointer@3@@Eigen@@UDefaultDevice@2@@Eigen@@QEAA@AEBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseUnaryOp@U?$bind1st_op@U?$scalar_product_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@$$CBV?$Tensor@M$00$0A@_J@3@@3@$$CBV?$TensorCwiseUnaryOp@U?$bind1st_op@U?$scalar_sum_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@@3@UMakePointer@3@@1@AEBUDefaultDevice@1@@Z</DECORATED>
    <FUNCLINE>411</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>452</LINE>
      <COLUMN>62</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::bind1st_op&lt;Eigen::internal::scalar_product_op&lt;float,float&gt; &gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::bind1st_op&lt;Eigen::internal::scalar_sum_op&lt;float,float&gt; &gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const &gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseUnaryOp@U?$bind1st_op@U?$scalar_product_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@$$CBV?$Tensor@M$00$0A@_J@3@@3@$$CBV?$TensorCwiseUnaryOp@U?$bind1st_op@U?$scalar_sum_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@@3@UMakePointer@3@@Eigen@@UDefaultDevice@2@@Eigen@@QEAA@AEBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseUnaryOp@U?$bind1st_op@U?$scalar_product_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@$$CBV?$Tensor@M$00$0A@_J@3@@3@$$CBV?$TensorCwiseUnaryOp@U?$bind1st_op@U?$scalar_sum_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@@3@UMakePointer@3@@1@AEBUDefaultDevice@1@@Z</DECORATED>
    <FUNCLINE>411</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>435</LINE>
      <COLUMN>8</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>Ill-defined for-loop:  initial condition does not satisfy test.  Loop body not executed.</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::MeanReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$MeanReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$Tensor@M$00$0A@_J@3@UMakePointer@3@@Eigen@@UDefaultDevice@2@@Eigen@@QEAA@AEBV?$TensorReductionOp@U?$MeanReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$Tensor@M$00$0A@_J@3@UMakePointer@3@@1@AEBUDefaultDevice@1@@Z</DECORATED>
    <FUNCLINE>411</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>440</LINE>
      <COLUMN>8</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>Ill-defined for-loop:  initial condition does not satisfy test.  Loop body not executed.</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::MeanReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$MeanReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$Tensor@M$00$0A@_J@3@UMakePointer@3@@Eigen@@UDefaultDevice@2@@Eigen@@QEAA@AEBV?$TensorReductionOp@U?$MeanReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$Tensor@M$00$0A@_J@3@UMakePointer@3@@1@AEBUDefaultDevice@1@@Z</DECORATED>
    <FUNCLINE>411</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>451</LINE>
      <COLUMN>8</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>Ill-defined for-loop:  initial condition does not satisfy test.  Loop body not executed.</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::MeanReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$MeanReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$Tensor@M$00$0A@_J@3@UMakePointer@3@@Eigen@@UDefaultDevice@2@@Eigen@@QEAA@AEBV?$TensorReductionOp@U?$MeanReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$Tensor@M$00$0A@_J@3@UMakePointer@3@@1@AEBUDefaultDevice@1@@Z</DECORATED>
    <FUNCLINE>411</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>456</LINE>
      <COLUMN>8</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>Ill-defined for-loop:  initial condition does not satisfy test.  Loop body not executed.</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::MeanReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$MeanReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$Tensor@M$00$0A@_J@3@UMakePointer@3@@Eigen@@UDefaultDevice@2@@Eigen@@QEAA@AEBV?$TensorReductionOp@U?$MeanReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$Tensor@M$00$0A@_J@3@UMakePointer@3@@1@AEBUDefaultDevice@1@@Z</DECORATED>
    <FUNCLINE>411</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>411</LINE>
      <COLUMN>20</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::MeanReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::m_outputStrides' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::MeanReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$MeanReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$Tensor@M$00$0A@_J@3@UMakePointer@3@@Eigen@@UDefaultDevice@2@@Eigen@@QEAA@AEBV?$TensorReductionOp@U?$MeanReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$Tensor@M$00$0A@_J@3@UMakePointer@3@@1@AEBUDefaultDevice@1@@Z</DECORATED>
    <FUNCLINE>411</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::MeanReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::m_outputStrides</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>411</LINE>
      <COLUMN>20</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::MeanReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::m_preservedStrides' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::MeanReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$MeanReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$Tensor@M$00$0A@_J@3@UMakePointer@3@@Eigen@@UDefaultDevice@2@@Eigen@@QEAA@AEBV?$TensorReductionOp@U?$MeanReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$Tensor@M$00$0A@_J@3@UMakePointer@3@@1@AEBUDefaultDevice@1@@Z</DECORATED>
    <FUNCLINE>411</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::MeanReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::m_preservedStrides</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>411</LINE>
      <COLUMN>20</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::MeanReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::m_reducedStrides' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::MeanReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$MeanReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$Tensor@M$00$0A@_J@3@UMakePointer@3@@Eigen@@UDefaultDevice@2@@Eigen@@QEAA@AEBV?$TensorReductionOp@U?$MeanReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$Tensor@M$00$0A@_J@3@UMakePointer@3@@1@AEBUDefaultDevice@1@@Z</DECORATED>
    <FUNCLINE>411</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::MeanReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::m_reducedStrides</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>441</LINE>
      <COLUMN>49</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::MeanReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$MeanReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$Tensor@M$00$0A@_J@3@UMakePointer@3@@Eigen@@UDefaultDevice@2@@Eigen@@QEAA@AEBV?$TensorReductionOp@U?$MeanReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$Tensor@M$00$0A@_J@3@UMakePointer@3@@1@AEBUDefaultDevice@1@@Z</DECORATED>
    <FUNCLINE>411</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>441</LINE>
      <COLUMN>71</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::MeanReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$MeanReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$Tensor@M$00$0A@_J@3@UMakePointer@3@@Eigen@@UDefaultDevice@2@@Eigen@@QEAA@AEBV?$TensorReductionOp@U?$MeanReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$Tensor@M$00$0A@_J@3@UMakePointer@3@@1@AEBUDefaultDevice@1@@Z</DECORATED>
    <FUNCLINE>411</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>436</LINE>
      <COLUMN>49</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::MeanReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$MeanReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$Tensor@M$00$0A@_J@3@UMakePointer@3@@Eigen@@UDefaultDevice@2@@Eigen@@QEAA@AEBV?$TensorReductionOp@U?$MeanReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$Tensor@M$00$0A@_J@3@UMakePointer@3@@1@AEBUDefaultDevice@1@@Z</DECORATED>
    <FUNCLINE>411</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>436</LINE>
      <COLUMN>71</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::MeanReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$MeanReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$Tensor@M$00$0A@_J@3@UMakePointer@3@@Eigen@@UDefaultDevice@2@@Eigen@@QEAA@AEBV?$TensorReductionOp@U?$MeanReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$Tensor@M$00$0A@_J@3@UMakePointer@3@@1@AEBUDefaultDevice@1@@Z</DECORATED>
    <FUNCLINE>411</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>457</LINE>
      <COLUMN>45</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::MeanReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$MeanReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$Tensor@M$00$0A@_J@3@UMakePointer@3@@Eigen@@UDefaultDevice@2@@Eigen@@QEAA@AEBV?$TensorReductionOp@U?$MeanReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$Tensor@M$00$0A@_J@3@UMakePointer@3@@1@AEBUDefaultDevice@1@@Z</DECORATED>
    <FUNCLINE>411</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>457</LINE>
      <COLUMN>65</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::MeanReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$MeanReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$Tensor@M$00$0A@_J@3@UMakePointer@3@@Eigen@@UDefaultDevice@2@@Eigen@@QEAA@AEBV?$TensorReductionOp@U?$MeanReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$Tensor@M$00$0A@_J@3@UMakePointer@3@@1@AEBUDefaultDevice@1@@Z</DECORATED>
    <FUNCLINE>411</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>452</LINE>
      <COLUMN>44</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::MeanReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$MeanReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$Tensor@M$00$0A@_J@3@UMakePointer@3@@Eigen@@UDefaultDevice@2@@Eigen@@QEAA@AEBV?$TensorReductionOp@U?$MeanReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$Tensor@M$00$0A@_J@3@UMakePointer@3@@1@AEBUDefaultDevice@1@@Z</DECORATED>
    <FUNCLINE>411</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>452</LINE>
      <COLUMN>62</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::MeanReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$MeanReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$Tensor@M$00$0A@_J@3@UMakePointer@3@@Eigen@@UDefaultDevice@2@@Eigen@@QEAA@AEBV?$TensorReductionOp@U?$MeanReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$Tensor@M$00$0A@_J@3@UMakePointer@3@@1@AEBUDefaultDevice@1@@Z</DECORATED>
    <FUNCLINE>411</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>435</LINE>
      <COLUMN>8</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>Ill-defined for-loop:  initial condition does not satisfy test.  Loop body not executed.</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,2&gt; const ,Eigen::TensorConversionOp&lt;float,Eigen::Tensor&lt;__int64,2,0,__int64&gt; const &gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$01@3@$$CBV?$TensorConversionOp@M$$CBV?$Tensor@_J$01$0A@_J@Eigen@@@3@UMakePointer@3@@Eigen@@UDefaultDevice@2@@Eigen@@QEAA@AEBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$01@3@$$CBV?$TensorConversionOp@M$$CBV?$Tensor@_J$01$0A@_J@Eigen@@@3@UMakePointer@3@@1@AEBUDefaultDevice@1@@Z</DECORATED>
    <FUNCLINE>411</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>440</LINE>
      <COLUMN>8</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>Ill-defined for-loop:  initial condition does not satisfy test.  Loop body not executed.</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,2&gt; const ,Eigen::TensorConversionOp&lt;float,Eigen::Tensor&lt;__int64,2,0,__int64&gt; const &gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$01@3@$$CBV?$TensorConversionOp@M$$CBV?$Tensor@_J$01$0A@_J@Eigen@@@3@UMakePointer@3@@Eigen@@UDefaultDevice@2@@Eigen@@QEAA@AEBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$01@3@$$CBV?$TensorConversionOp@M$$CBV?$Tensor@_J$01$0A@_J@Eigen@@@3@UMakePointer@3@@1@AEBUDefaultDevice@1@@Z</DECORATED>
    <FUNCLINE>411</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>468</LINE>
      <COLUMN>42</COLUMN>
    </SFA>
    <DEFECTCODE>28020</DEFECTCODE>
    <DESCRIPTION>The expression '0&lt;=_Param_(1)&amp;&amp;_Param_(1)&lt;=1-1' is not true at this call.</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,2&gt; const ,Eigen::TensorConversionOp&lt;float,Eigen::Tensor&lt;__int64,2,0,__int64&gt; const &gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$01@3@$$CBV?$TensorConversionOp@M$$CBV?$Tensor@_J$01$0A@_J@Eigen@@@3@UMakePointer@3@@Eigen@@UDefaultDevice@2@@Eigen@@QEAA@AEBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$01@3@$$CBV?$TensorConversionOp@M$$CBV?$Tensor@_J$01$0A@_J@Eigen@@@3@UMakePointer@3@@1@AEBUDefaultDevice@1@@Z</DECORATED>
    <FUNCLINE>411</FUNCLINE>
    <PATH>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorreduction.h</FILENAME>
        <LINE>413</LINE>
        <COLUMN>2</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorreduction.h</FILENAME>
        <LINE>412</LINE>
        <COLUMN>14</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorreduction.h</FILENAME>
        <LINE>412</LINE>
        <COLUMN>0</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorreduction.h</FILENAME>
        <LINE>419</LINE>
        <COLUMN>13</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorreduction.h</FILENAME>
        <LINE>419</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorreduction.h</FILENAME>
        <LINE>420</LINE>
        <COLUMN>19</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorreduction.h</FILENAME>
        <LINE>419</LINE>
        <COLUMN>17</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorreduction.h</FILENAME>
        <LINE>419</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorreduction.h</FILENAME>
        <LINE>420</LINE>
        <COLUMN>19</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorreduction.h</FILENAME>
        <LINE>419</LINE>
        <COLUMN>17</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorreduction.h</FILENAME>
        <LINE>419</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorreduction.h</FILENAME>
        <LINE>422</LINE>
        <COLUMN>13</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorreduction.h</FILENAME>
        <LINE>422</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorreduction.h</FILENAME>
        <LINE>423</LINE>
        <COLUMN>6</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorreduction.h</FILENAME>
        <LINE>424</LINE>
        <COLUMN>6</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorreduction.h</FILENAME>
        <LINE>425</LINE>
        <COLUMN>30</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorreduction.h</FILENAME>
        <LINE>422</LINE>
        <COLUMN>19</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorreduction.h</FILENAME>
        <LINE>422</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorreduction.h</FILENAME>
        <LINE>423</LINE>
        <COLUMN>6</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorreduction.h</FILENAME>
        <LINE>424</LINE>
        <COLUMN>6</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorreduction.h</FILENAME>
        <LINE>425</LINE>
        <COLUMN>30</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorreduction.h</FILENAME>
        <LINE>422</LINE>
        <COLUMN>19</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorreduction.h</FILENAME>
        <LINE>422</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorreduction.h</FILENAME>
        <LINE>428</LINE>
        <COLUMN>13</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorreduction.h</FILENAME>
        <LINE>429</LINE>
        <COLUMN>45</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorreduction.h</FILENAME>
        <LINE>432</LINE>
        <COLUMN>22</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorreduction.h</FILENAME>
        <LINE>447</LINE>
        <COLUMN>21</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorreduction.h</FILENAME>
        <LINE>448</LINE>
        <COLUMN>2</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorreduction.h</FILENAME>
        <LINE>449</LINE>
        <COLUMN>35</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorreduction.h</FILENAME>
        <LINE>450</LINE>
        <COLUMN>25</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorreduction.h</FILENAME>
        <LINE>451</LINE>
        <COLUMN>17</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorreduction.h</FILENAME>
        <LINE>451</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorreduction.h</FILENAME>
        <LINE>452</LINE>
        <COLUMN>27</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorreduction.h</FILENAME>
        <LINE>451</LINE>
        <COLUMN>17</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorreduction.h</FILENAME>
        <LINE>451</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorreduction.h</FILENAME>
        <LINE>461</LINE>
        <COLUMN>10</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorreduction.h</FILENAME>
        <LINE>462</LINE>
        <COLUMN>10</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorreduction.h</FILENAME>
        <LINE>463</LINE>
        <COLUMN>15</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorreduction.h</FILENAME>
        <LINE>463</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorreduction.h</FILENAME>
        <LINE>464</LINE>
        <COLUMN>23</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorreduction.h</FILENAME>
        <LINE>468</LINE>
        <COLUMN>42</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorreduction.h</FILENAME>
        <LINE>469</LINE>
        <COLUMN>10</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorreduction.h</FILENAME>
        <LINE>463</LINE>
        <COLUMN>17</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorreduction.h</FILENAME>
        <LINE>463</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorreduction.h</FILENAME>
        <LINE>464</LINE>
        <COLUMN>23</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorreduction.h</FILENAME>
        <LINE>468</LINE>
        <COLUMN>42</COLUMN>
      </SFA>
    </PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>411</LINE>
      <COLUMN>20</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,2&gt; const ,Eigen::TensorConversionOp&lt;float,Eigen::Tensor&lt;__int64,2,0,__int64&gt; const &gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::m_outputStrides' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,2&gt; const ,Eigen::TensorConversionOp&lt;float,Eigen::Tensor&lt;__int64,2,0,__int64&gt; const &gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$01@3@$$CBV?$TensorConversionOp@M$$CBV?$Tensor@_J$01$0A@_J@Eigen@@@3@UMakePointer@3@@Eigen@@UDefaultDevice@2@@Eigen@@QEAA@AEBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$01@3@$$CBV?$TensorConversionOp@M$$CBV?$Tensor@_J$01$0A@_J@Eigen@@@3@UMakePointer@3@@1@AEBUDefaultDevice@1@@Z</DECORATED>
    <FUNCLINE>411</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,2&gt; const ,Eigen::TensorConversionOp&lt;float,Eigen::Tensor&lt;__int64,2,0,__int64&gt; const &gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::m_outputStrides</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>411</LINE>
      <COLUMN>20</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,2&gt; const ,Eigen::TensorConversionOp&lt;float,Eigen::Tensor&lt;__int64,2,0,__int64&gt; const &gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::m_preservedStrides' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,2&gt; const ,Eigen::TensorConversionOp&lt;float,Eigen::Tensor&lt;__int64,2,0,__int64&gt; const &gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$01@3@$$CBV?$TensorConversionOp@M$$CBV?$Tensor@_J$01$0A@_J@Eigen@@@3@UMakePointer@3@@Eigen@@UDefaultDevice@2@@Eigen@@QEAA@AEBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$01@3@$$CBV?$TensorConversionOp@M$$CBV?$Tensor@_J$01$0A@_J@Eigen@@@3@UMakePointer@3@@1@AEBUDefaultDevice@1@@Z</DECORATED>
    <FUNCLINE>411</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,2&gt; const ,Eigen::TensorConversionOp&lt;float,Eigen::Tensor&lt;__int64,2,0,__int64&gt; const &gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::m_preservedStrides</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>411</LINE>
      <COLUMN>20</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,2&gt; const ,Eigen::TensorConversionOp&lt;float,Eigen::Tensor&lt;__int64,2,0,__int64&gt; const &gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::m_reducedStrides' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,2&gt; const ,Eigen::TensorConversionOp&lt;float,Eigen::Tensor&lt;__int64,2,0,__int64&gt; const &gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$01@3@$$CBV?$TensorConversionOp@M$$CBV?$Tensor@_J$01$0A@_J@Eigen@@@3@UMakePointer@3@@Eigen@@UDefaultDevice@2@@Eigen@@QEAA@AEBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$01@3@$$CBV?$TensorConversionOp@M$$CBV?$Tensor@_J$01$0A@_J@Eigen@@@3@UMakePointer@3@@1@AEBUDefaultDevice@1@@Z</DECORATED>
    <FUNCLINE>411</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,2&gt; const ,Eigen::TensorConversionOp&lt;float,Eigen::Tensor&lt;__int64,2,0,__int64&gt; const &gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::m_reducedStrides</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>441</LINE>
      <COLUMN>49</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,2&gt; const ,Eigen::TensorConversionOp&lt;float,Eigen::Tensor&lt;__int64,2,0,__int64&gt; const &gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$01@3@$$CBV?$TensorConversionOp@M$$CBV?$Tensor@_J$01$0A@_J@Eigen@@@3@UMakePointer@3@@Eigen@@UDefaultDevice@2@@Eigen@@QEAA@AEBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$01@3@$$CBV?$TensorConversionOp@M$$CBV?$Tensor@_J$01$0A@_J@Eigen@@@3@UMakePointer@3@@1@AEBUDefaultDevice@1@@Z</DECORATED>
    <FUNCLINE>411</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>441</LINE>
      <COLUMN>71</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,2&gt; const ,Eigen::TensorConversionOp&lt;float,Eigen::Tensor&lt;__int64,2,0,__int64&gt; const &gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$01@3@$$CBV?$TensorConversionOp@M$$CBV?$Tensor@_J$01$0A@_J@Eigen@@@3@UMakePointer@3@@Eigen@@UDefaultDevice@2@@Eigen@@QEAA@AEBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$01@3@$$CBV?$TensorConversionOp@M$$CBV?$Tensor@_J$01$0A@_J@Eigen@@@3@UMakePointer@3@@1@AEBUDefaultDevice@1@@Z</DECORATED>
    <FUNCLINE>411</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>436</LINE>
      <COLUMN>49</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,2&gt; const ,Eigen::TensorConversionOp&lt;float,Eigen::Tensor&lt;__int64,2,0,__int64&gt; const &gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$01@3@$$CBV?$TensorConversionOp@M$$CBV?$Tensor@_J$01$0A@_J@Eigen@@@3@UMakePointer@3@@Eigen@@UDefaultDevice@2@@Eigen@@QEAA@AEBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$01@3@$$CBV?$TensorConversionOp@M$$CBV?$Tensor@_J$01$0A@_J@Eigen@@@3@UMakePointer@3@@1@AEBUDefaultDevice@1@@Z</DECORATED>
    <FUNCLINE>411</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>436</LINE>
      <COLUMN>71</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,2&gt; const ,Eigen::TensorConversionOp&lt;float,Eigen::Tensor&lt;__int64,2,0,__int64&gt; const &gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$01@3@$$CBV?$TensorConversionOp@M$$CBV?$Tensor@_J$01$0A@_J@Eigen@@@3@UMakePointer@3@@Eigen@@UDefaultDevice@2@@Eigen@@QEAA@AEBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$01@3@$$CBV?$TensorConversionOp@M$$CBV?$Tensor@_J$01$0A@_J@Eigen@@@3@UMakePointer@3@@1@AEBUDefaultDevice@1@@Z</DECORATED>
    <FUNCLINE>411</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>457</LINE>
      <COLUMN>45</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,2&gt; const ,Eigen::TensorConversionOp&lt;float,Eigen::Tensor&lt;__int64,2,0,__int64&gt; const &gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$01@3@$$CBV?$TensorConversionOp@M$$CBV?$Tensor@_J$01$0A@_J@Eigen@@@3@UMakePointer@3@@Eigen@@UDefaultDevice@2@@Eigen@@QEAA@AEBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$01@3@$$CBV?$TensorConversionOp@M$$CBV?$Tensor@_J$01$0A@_J@Eigen@@@3@UMakePointer@3@@1@AEBUDefaultDevice@1@@Z</DECORATED>
    <FUNCLINE>411</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>457</LINE>
      <COLUMN>65</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,2&gt; const ,Eigen::TensorConversionOp&lt;float,Eigen::Tensor&lt;__int64,2,0,__int64&gt; const &gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$01@3@$$CBV?$TensorConversionOp@M$$CBV?$Tensor@_J$01$0A@_J@Eigen@@@3@UMakePointer@3@@Eigen@@UDefaultDevice@2@@Eigen@@QEAA@AEBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$01@3@$$CBV?$TensorConversionOp@M$$CBV?$Tensor@_J$01$0A@_J@Eigen@@@3@UMakePointer@3@@1@AEBUDefaultDevice@1@@Z</DECORATED>
    <FUNCLINE>411</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>452</LINE>
      <COLUMN>44</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,2&gt; const ,Eigen::TensorConversionOp&lt;float,Eigen::Tensor&lt;__int64,2,0,__int64&gt; const &gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$01@3@$$CBV?$TensorConversionOp@M$$CBV?$Tensor@_J$01$0A@_J@Eigen@@@3@UMakePointer@3@@Eigen@@UDefaultDevice@2@@Eigen@@QEAA@AEBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$01@3@$$CBV?$TensorConversionOp@M$$CBV?$Tensor@_J$01$0A@_J@Eigen@@@3@UMakePointer@3@@1@AEBUDefaultDevice@1@@Z</DECORATED>
    <FUNCLINE>411</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>452</LINE>
      <COLUMN>62</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,2&gt; const ,Eigen::TensorConversionOp&lt;float,Eigen::Tensor&lt;__int64,2,0,__int64&gt; const &gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$01@3@$$CBV?$TensorConversionOp@M$$CBV?$Tensor@_J$01$0A@_J@Eigen@@@3@UMakePointer@3@@Eigen@@UDefaultDevice@2@@Eigen@@QEAA@AEBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$01@3@$$CBV?$TensorConversionOp@M$$CBV?$Tensor@_J$01$0A@_J@Eigen@@@3@UMakePointer@3@@1@AEBUDefaultDevice@1@@Z</DECORATED>
    <FUNCLINE>411</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>519</LINE>
      <COLUMN>60</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::MaxReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::evalSubExprsIfNeeded</FUNCTION>
    <DECORATED>?evalSubExprsIfNeeded@?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$MaxReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$Tensor@M$00$0A@_J@3@UMakePointer@3@@Eigen@@UDefaultDevice@2@@Eigen@@QEAA_NPEAM@Z</DECORATED>
    <FUNCLINE>482</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>550</LINE>
      <COLUMN>62</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::MaxReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::evalSubExprsIfNeeded</FUNCTION>
    <DECORATED>?evalSubExprsIfNeeded@?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$MaxReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$Tensor@M$00$0A@_J@3@UMakePointer@3@@Eigen@@UDefaultDevice@2@@Eigen@@QEAA_NPEAM@Z</DECORATED>
    <FUNCLINE>482</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>519</LINE>
      <COLUMN>60</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::MinReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::evalSubExprsIfNeeded</FUNCTION>
    <DECORATED>?evalSubExprsIfNeeded@?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$MinReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$Tensor@M$00$0A@_J@3@UMakePointer@3@@Eigen@@UDefaultDevice@2@@Eigen@@QEAA_NPEAM@Z</DECORATED>
    <FUNCLINE>482</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>550</LINE>
      <COLUMN>62</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::MinReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::evalSubExprsIfNeeded</FUNCTION>
    <DECORATED>?evalSubExprsIfNeeded@?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$MinReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$Tensor@M$00$0A@_J@3@UMakePointer@3@@Eigen@@UDefaultDevice@2@@Eigen@@QEAA_NPEAM@Z</DECORATED>
    <FUNCLINE>482</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>519</LINE>
      <COLUMN>60</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::MinReducer&lt;__int64&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::Tensor&lt;__int64,1,0,__int64&gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::evalSubExprsIfNeeded</FUNCTION>
    <DECORATED>?evalSubExprsIfNeeded@?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$MinReducer@_J@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$Tensor@_J$00$0A@_J@3@UMakePointer@3@@Eigen@@UDefaultDevice@2@@Eigen@@QEAA_NPEA_J@Z</DECORATED>
    <FUNCLINE>482</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>550</LINE>
      <COLUMN>62</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::MinReducer&lt;__int64&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::Tensor&lt;__int64,1,0,__int64&gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::evalSubExprsIfNeeded</FUNCTION>
    <DECORATED>?evalSubExprsIfNeeded@?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$MinReducer@_J@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$Tensor@_J$00$0A@_J@3@UMakePointer@3@@Eigen@@UDefaultDevice@2@@Eigen@@QEAA_NPEA_J@Z</DECORATED>
    <FUNCLINE>482</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>519</LINE>
      <COLUMN>60</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,2&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::evalSubExprsIfNeeded</FUNCTION>
    <DECORATED>?evalSubExprsIfNeeded@?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$01@3@$$CBV?$Tensor@M$01$0A@_J@3@UMakePointer@3@@Eigen@@UDefaultDevice@2@@Eigen@@QEAA_NPEAM@Z</DECORATED>
    <FUNCLINE>482</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>550</LINE>
      <COLUMN>62</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,2&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::evalSubExprsIfNeeded</FUNCTION>
    <DECORATED>?evalSubExprsIfNeeded@?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$01@3@$$CBV?$Tensor@M$01$0A@_J@3@UMakePointer@3@@Eigen@@UDefaultDevice@2@@Eigen@@QEAA_NPEAM@Z</DECORATED>
    <FUNCLINE>482</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>519</LINE>
      <COLUMN>60</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,std::array&lt;int,1&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::evalSubExprsIfNeeded</FUNCTION>
    <DECORATED>?evalSubExprsIfNeeded@?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBV?$array@H$00@std@@$$CBV?$Tensor@M$01$0A@_J@3@UMakePointer@3@@Eigen@@UDefaultDevice@2@@Eigen@@QEAA_NPEAM@Z</DECORATED>
    <FUNCLINE>482</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>550</LINE>
      <COLUMN>62</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,std::array&lt;int,1&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::evalSubExprsIfNeeded</FUNCTION>
    <DECORATED>?evalSubExprsIfNeeded@?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBV?$array@H$00@std@@$$CBV?$Tensor@M$01$0A@_J@3@UMakePointer@3@@Eigen@@UDefaultDevice@2@@Eigen@@QEAA_NPEAM@Z</DECORATED>
    <FUNCLINE>482</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>435</LINE>
      <COLUMN>8</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>Ill-defined for-loop:  initial condition does not satisfy test.  Loop body not executed.</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::scalar_square_op&lt;float&gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseUnaryOp@U?$scalar_square_op@M@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@UMakePointer@3@@Eigen@@UDefaultDevice@2@@Eigen@@QEAA@AEBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseUnaryOp@U?$scalar_square_op@M@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@UMakePointer@3@@1@AEBUDefaultDevice@1@@Z</DECORATED>
    <FUNCLINE>411</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>440</LINE>
      <COLUMN>8</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>Ill-defined for-loop:  initial condition does not satisfy test.  Loop body not executed.</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::scalar_square_op&lt;float&gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseUnaryOp@U?$scalar_square_op@M@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@UMakePointer@3@@Eigen@@UDefaultDevice@2@@Eigen@@QEAA@AEBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseUnaryOp@U?$scalar_square_op@M@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@UMakePointer@3@@1@AEBUDefaultDevice@1@@Z</DECORATED>
    <FUNCLINE>411</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>451</LINE>
      <COLUMN>8</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>Ill-defined for-loop:  initial condition does not satisfy test.  Loop body not executed.</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::scalar_square_op&lt;float&gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseUnaryOp@U?$scalar_square_op@M@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@UMakePointer@3@@Eigen@@UDefaultDevice@2@@Eigen@@QEAA@AEBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseUnaryOp@U?$scalar_square_op@M@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@UMakePointer@3@@1@AEBUDefaultDevice@1@@Z</DECORATED>
    <FUNCLINE>411</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>456</LINE>
      <COLUMN>8</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>Ill-defined for-loop:  initial condition does not satisfy test.  Loop body not executed.</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::scalar_square_op&lt;float&gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseUnaryOp@U?$scalar_square_op@M@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@UMakePointer@3@@Eigen@@UDefaultDevice@2@@Eigen@@QEAA@AEBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseUnaryOp@U?$scalar_square_op@M@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@UMakePointer@3@@1@AEBUDefaultDevice@1@@Z</DECORATED>
    <FUNCLINE>411</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>411</LINE>
      <COLUMN>20</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::scalar_square_op&lt;float&gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::m_outputStrides' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::scalar_square_op&lt;float&gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseUnaryOp@U?$scalar_square_op@M@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@UMakePointer@3@@Eigen@@UDefaultDevice@2@@Eigen@@QEAA@AEBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseUnaryOp@U?$scalar_square_op@M@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@UMakePointer@3@@1@AEBUDefaultDevice@1@@Z</DECORATED>
    <FUNCLINE>411</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::scalar_square_op&lt;float&gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::m_outputStrides</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>411</LINE>
      <COLUMN>20</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::scalar_square_op&lt;float&gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::m_preservedStrides' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::scalar_square_op&lt;float&gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseUnaryOp@U?$scalar_square_op@M@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@UMakePointer@3@@Eigen@@UDefaultDevice@2@@Eigen@@QEAA@AEBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseUnaryOp@U?$scalar_square_op@M@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@UMakePointer@3@@1@AEBUDefaultDevice@1@@Z</DECORATED>
    <FUNCLINE>411</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::scalar_square_op&lt;float&gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::m_preservedStrides</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>411</LINE>
      <COLUMN>20</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::scalar_square_op&lt;float&gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::m_reducedStrides' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::scalar_square_op&lt;float&gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseUnaryOp@U?$scalar_square_op@M@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@UMakePointer@3@@Eigen@@UDefaultDevice@2@@Eigen@@QEAA@AEBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseUnaryOp@U?$scalar_square_op@M@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@UMakePointer@3@@1@AEBUDefaultDevice@1@@Z</DECORATED>
    <FUNCLINE>411</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::scalar_square_op&lt;float&gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::m_reducedStrides</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>441</LINE>
      <COLUMN>49</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::scalar_square_op&lt;float&gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseUnaryOp@U?$scalar_square_op@M@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@UMakePointer@3@@Eigen@@UDefaultDevice@2@@Eigen@@QEAA@AEBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseUnaryOp@U?$scalar_square_op@M@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@UMakePointer@3@@1@AEBUDefaultDevice@1@@Z</DECORATED>
    <FUNCLINE>411</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>441</LINE>
      <COLUMN>71</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::scalar_square_op&lt;float&gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseUnaryOp@U?$scalar_square_op@M@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@UMakePointer@3@@Eigen@@UDefaultDevice@2@@Eigen@@QEAA@AEBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseUnaryOp@U?$scalar_square_op@M@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@UMakePointer@3@@1@AEBUDefaultDevice@1@@Z</DECORATED>
    <FUNCLINE>411</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>436</LINE>
      <COLUMN>49</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::scalar_square_op&lt;float&gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseUnaryOp@U?$scalar_square_op@M@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@UMakePointer@3@@Eigen@@UDefaultDevice@2@@Eigen@@QEAA@AEBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseUnaryOp@U?$scalar_square_op@M@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@UMakePointer@3@@1@AEBUDefaultDevice@1@@Z</DECORATED>
    <FUNCLINE>411</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>436</LINE>
      <COLUMN>71</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::scalar_square_op&lt;float&gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseUnaryOp@U?$scalar_square_op@M@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@UMakePointer@3@@Eigen@@UDefaultDevice@2@@Eigen@@QEAA@AEBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseUnaryOp@U?$scalar_square_op@M@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@UMakePointer@3@@1@AEBUDefaultDevice@1@@Z</DECORATED>
    <FUNCLINE>411</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>457</LINE>
      <COLUMN>45</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::scalar_square_op&lt;float&gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseUnaryOp@U?$scalar_square_op@M@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@UMakePointer@3@@Eigen@@UDefaultDevice@2@@Eigen@@QEAA@AEBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseUnaryOp@U?$scalar_square_op@M@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@UMakePointer@3@@1@AEBUDefaultDevice@1@@Z</DECORATED>
    <FUNCLINE>411</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>457</LINE>
      <COLUMN>65</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::scalar_square_op&lt;float&gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseUnaryOp@U?$scalar_square_op@M@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@UMakePointer@3@@Eigen@@UDefaultDevice@2@@Eigen@@QEAA@AEBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseUnaryOp@U?$scalar_square_op@M@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@UMakePointer@3@@1@AEBUDefaultDevice@1@@Z</DECORATED>
    <FUNCLINE>411</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>452</LINE>
      <COLUMN>44</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::scalar_square_op&lt;float&gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseUnaryOp@U?$scalar_square_op@M@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@UMakePointer@3@@Eigen@@UDefaultDevice@2@@Eigen@@QEAA@AEBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseUnaryOp@U?$scalar_square_op@M@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@UMakePointer@3@@1@AEBUDefaultDevice@1@@Z</DECORATED>
    <FUNCLINE>411</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>452</LINE>
      <COLUMN>62</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::scalar_square_op&lt;float&gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseUnaryOp@U?$scalar_square_op@M@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@UMakePointer@3@@Eigen@@UDefaultDevice@2@@Eigen@@QEAA@AEBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseUnaryOp@U?$scalar_square_op@M@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@UMakePointer@3@@1@AEBUDefaultDevice@1@@Z</DECORATED>
    <FUNCLINE>411</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>519</LINE>
      <COLUMN>60</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::bind2nd_op&lt;Eigen::internal::scalar_quotient_op&lt;float,float&gt; &gt;,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::bind1st_op&lt;Eigen::internal::scalar_product_op&lt;float,float&gt; &gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::bind2nd_op&lt;Eigen::internal::scalar_difference_op&lt;float,float&gt; &gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const &gt; const ,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::bind2nd_op&lt;Eigen::internal::scalar_difference_op&lt;float,float&gt; &gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const &gt; const &gt; const ,Eigen::MakePointer&gt; const ,Eigen::ThreadPoolDevice&gt;::evalSubExprsIfNeeded</FUNCTION>
    <DECORATED>?evalSubExprsIfNeeded@?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseUnaryOp@U?$bind2nd_op@U?$scalar_quotient_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseUnaryOp@U?$bind1st_op@U?$scalar_product_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@$$CBV?$Tensor@M$00$0A@_J@3@@3@$$CBV?$TensorCwiseUnaryOp@U?$bind2nd_op@U?$scalar_difference_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@@3@$$CBV?$TensorCwiseUnaryOp@U?$bind2nd_op@U?$scalar_difference_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@@3@@3@UMakePointer@3@@Eigen@@UThreadPoolDevice@2@@Eigen@@QEAA_NPEAM@Z</DECORATED>
    <FUNCLINE>482</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>550</LINE>
      <COLUMN>62</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::bind2nd_op&lt;Eigen::internal::scalar_quotient_op&lt;float,float&gt; &gt;,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::bind1st_op&lt;Eigen::internal::scalar_product_op&lt;float,float&gt; &gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::bind2nd_op&lt;Eigen::internal::scalar_difference_op&lt;float,float&gt; &gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const &gt; const ,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::bind2nd_op&lt;Eigen::internal::scalar_difference_op&lt;float,float&gt; &gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const &gt; const &gt; const ,Eigen::MakePointer&gt; const ,Eigen::ThreadPoolDevice&gt;::evalSubExprsIfNeeded</FUNCTION>
    <DECORATED>?evalSubExprsIfNeeded@?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseUnaryOp@U?$bind2nd_op@U?$scalar_quotient_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseUnaryOp@U?$bind1st_op@U?$scalar_product_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@$$CBV?$Tensor@M$00$0A@_J@3@@3@$$CBV?$TensorCwiseUnaryOp@U?$bind2nd_op@U?$scalar_difference_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@@3@$$CBV?$TensorCwiseUnaryOp@U?$bind2nd_op@U?$scalar_difference_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@@3@@3@UMakePointer@3@@Eigen@@UThreadPoolDevice@2@@Eigen@@QEAA_NPEAM@Z</DECORATED>
    <FUNCLINE>482</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>435</LINE>
      <COLUMN>8</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>Ill-defined for-loop:  initial condition does not satisfy test.  Loop body not executed.</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::bind2nd_op&lt;Eigen::internal::scalar_quotient_op&lt;float,float&gt; &gt;,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::bind1st_op&lt;Eigen::internal::scalar_product_op&lt;float,float&gt; &gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::bind2nd_op&lt;Eigen::internal::scalar_difference_op&lt;float,float&gt; &gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const &gt; const ,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::bind2nd_op&lt;Eigen::internal::scalar_difference_op&lt;float,float&gt; &gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const &gt; const &gt; const ,Eigen::MakePointer&gt; const ,Eigen::ThreadPoolDevice&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseUnaryOp@U?$bind2nd_op@U?$scalar_quotient_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseUnaryOp@U?$bind1st_op@U?$scalar_product_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@$$CBV?$Tensor@M$00$0A@_J@3@@3@$$CBV?$TensorCwiseUnaryOp@U?$bind2nd_op@U?$scalar_difference_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@@3@$$CBV?$TensorCwiseUnaryOp@U?$bind2nd_op@U?$scalar_difference_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@@3@@3@UMakePointer@3@@Eigen@@UThreadPoolDevice@2@@Eigen@@QEAA@AEBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseUnaryOp@U?$bind2nd_op@U?$scalar_quotient_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseUnaryOp@U?$bind1st_op@U?$scalar_product_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@$$CBV?$Tensor@M$00$0A@_J@3@@3@$$CBV?$TensorCwiseUnaryOp@U?$bind2nd_op@U?$scalar_difference_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@@3@$$CBV?$TensorCwiseUnaryOp@U?$bind2nd_op@U?$scalar_difference_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@@3@@3@UMakePointer@3@@1@AEBUThreadPoolDevice@1@@Z</DECORATED>
    <FUNCLINE>411</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>440</LINE>
      <COLUMN>8</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>Ill-defined for-loop:  initial condition does not satisfy test.  Loop body not executed.</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::bind2nd_op&lt;Eigen::internal::scalar_quotient_op&lt;float,float&gt; &gt;,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::bind1st_op&lt;Eigen::internal::scalar_product_op&lt;float,float&gt; &gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::bind2nd_op&lt;Eigen::internal::scalar_difference_op&lt;float,float&gt; &gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const &gt; const ,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::bind2nd_op&lt;Eigen::internal::scalar_difference_op&lt;float,float&gt; &gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const &gt; const &gt; const ,Eigen::MakePointer&gt; const ,Eigen::ThreadPoolDevice&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseUnaryOp@U?$bind2nd_op@U?$scalar_quotient_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseUnaryOp@U?$bind1st_op@U?$scalar_product_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@$$CBV?$Tensor@M$00$0A@_J@3@@3@$$CBV?$TensorCwiseUnaryOp@U?$bind2nd_op@U?$scalar_difference_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@@3@$$CBV?$TensorCwiseUnaryOp@U?$bind2nd_op@U?$scalar_difference_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@@3@@3@UMakePointer@3@@Eigen@@UThreadPoolDevice@2@@Eigen@@QEAA@AEBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseUnaryOp@U?$bind2nd_op@U?$scalar_quotient_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseUnaryOp@U?$bind1st_op@U?$scalar_product_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@$$CBV?$Tensor@M$00$0A@_J@3@@3@$$CBV?$TensorCwiseUnaryOp@U?$bind2nd_op@U?$scalar_difference_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@@3@$$CBV?$TensorCwiseUnaryOp@U?$bind2nd_op@U?$scalar_difference_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@@3@@3@UMakePointer@3@@1@AEBUThreadPoolDevice@1@@Z</DECORATED>
    <FUNCLINE>411</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>451</LINE>
      <COLUMN>8</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>Ill-defined for-loop:  initial condition does not satisfy test.  Loop body not executed.</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::bind2nd_op&lt;Eigen::internal::scalar_quotient_op&lt;float,float&gt; &gt;,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::bind1st_op&lt;Eigen::internal::scalar_product_op&lt;float,float&gt; &gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::bind2nd_op&lt;Eigen::internal::scalar_difference_op&lt;float,float&gt; &gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const &gt; const ,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::bind2nd_op&lt;Eigen::internal::scalar_difference_op&lt;float,float&gt; &gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const &gt; const &gt; const ,Eigen::MakePointer&gt; const ,Eigen::ThreadPoolDevice&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseUnaryOp@U?$bind2nd_op@U?$scalar_quotient_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseUnaryOp@U?$bind1st_op@U?$scalar_product_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@$$CBV?$Tensor@M$00$0A@_J@3@@3@$$CBV?$TensorCwiseUnaryOp@U?$bind2nd_op@U?$scalar_difference_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@@3@$$CBV?$TensorCwiseUnaryOp@U?$bind2nd_op@U?$scalar_difference_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@@3@@3@UMakePointer@3@@Eigen@@UThreadPoolDevice@2@@Eigen@@QEAA@AEBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseUnaryOp@U?$bind2nd_op@U?$scalar_quotient_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseUnaryOp@U?$bind1st_op@U?$scalar_product_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@$$CBV?$Tensor@M$00$0A@_J@3@@3@$$CBV?$TensorCwiseUnaryOp@U?$bind2nd_op@U?$scalar_difference_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@@3@$$CBV?$TensorCwiseUnaryOp@U?$bind2nd_op@U?$scalar_difference_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@@3@@3@UMakePointer@3@@1@AEBUThreadPoolDevice@1@@Z</DECORATED>
    <FUNCLINE>411</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>456</LINE>
      <COLUMN>8</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>Ill-defined for-loop:  initial condition does not satisfy test.  Loop body not executed.</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::bind2nd_op&lt;Eigen::internal::scalar_quotient_op&lt;float,float&gt; &gt;,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::bind1st_op&lt;Eigen::internal::scalar_product_op&lt;float,float&gt; &gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::bind2nd_op&lt;Eigen::internal::scalar_difference_op&lt;float,float&gt; &gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const &gt; const ,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::bind2nd_op&lt;Eigen::internal::scalar_difference_op&lt;float,float&gt; &gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const &gt; const &gt; const ,Eigen::MakePointer&gt; const ,Eigen::ThreadPoolDevice&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseUnaryOp@U?$bind2nd_op@U?$scalar_quotient_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseUnaryOp@U?$bind1st_op@U?$scalar_product_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@$$CBV?$Tensor@M$00$0A@_J@3@@3@$$CBV?$TensorCwiseUnaryOp@U?$bind2nd_op@U?$scalar_difference_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@@3@$$CBV?$TensorCwiseUnaryOp@U?$bind2nd_op@U?$scalar_difference_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@@3@@3@UMakePointer@3@@Eigen@@UThreadPoolDevice@2@@Eigen@@QEAA@AEBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseUnaryOp@U?$bind2nd_op@U?$scalar_quotient_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseUnaryOp@U?$bind1st_op@U?$scalar_product_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@$$CBV?$Tensor@M$00$0A@_J@3@@3@$$CBV?$TensorCwiseUnaryOp@U?$bind2nd_op@U?$scalar_difference_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@@3@$$CBV?$TensorCwiseUnaryOp@U?$bind2nd_op@U?$scalar_difference_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@@3@@3@UMakePointer@3@@1@AEBUThreadPoolDevice@1@@Z</DECORATED>
    <FUNCLINE>411</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>411</LINE>
      <COLUMN>20</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::bind2nd_op&lt;Eigen::internal::scalar_quotient_op&lt;float,float&gt; &gt;,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::bind1st_op&lt;Eigen::internal::scalar_product_op&lt;float,float&gt; &gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::bind2nd_op&lt;Eigen::internal::scalar_difference_op&lt;float,float&gt; &gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const &gt; const ,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::bind2nd_op&lt;Eigen::internal::scalar_difference_op&lt;float,float&gt; &gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const &gt; const &gt; const ,Eigen::MakePointer&gt; const ,Eigen::ThreadPoolDevice&gt;::m_reducedStrides' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::bind2nd_op&lt;Eigen::internal::scalar_quotient_op&lt;float,float&gt; &gt;,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::bind1st_op&lt;Eigen::internal::scalar_product_op&lt;float,float&gt; &gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::bind2nd_op&lt;Eigen::internal::scalar_difference_op&lt;float,float&gt; &gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const &gt; const ,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::bind2nd_op&lt;Eigen::internal::scalar_difference_op&lt;float,float&gt; &gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const &gt; const &gt; const ,Eigen::MakePointer&gt; const ,Eigen::ThreadPoolDevice&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseUnaryOp@U?$bind2nd_op@U?$scalar_quotient_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseUnaryOp@U?$bind1st_op@U?$scalar_product_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@$$CBV?$Tensor@M$00$0A@_J@3@@3@$$CBV?$TensorCwiseUnaryOp@U?$bind2nd_op@U?$scalar_difference_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@@3@$$CBV?$TensorCwiseUnaryOp@U?$bind2nd_op@U?$scalar_difference_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@@3@@3@UMakePointer@3@@Eigen@@UThreadPoolDevice@2@@Eigen@@QEAA@AEBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseUnaryOp@U?$bind2nd_op@U?$scalar_quotient_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseUnaryOp@U?$bind1st_op@U?$scalar_product_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@$$CBV?$Tensor@M$00$0A@_J@3@@3@$$CBV?$TensorCwiseUnaryOp@U?$bind2nd_op@U?$scalar_difference_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@@3@$$CBV?$TensorCwiseUnaryOp@U?$bind2nd_op@U?$scalar_difference_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@@3@@3@UMakePointer@3@@1@AEBUThreadPoolDevice@1@@Z</DECORATED>
    <FUNCLINE>411</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::bind2nd_op&lt;Eigen::internal::scalar_quotient_op&lt;float,float&gt; &gt;,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::bind1st_op&lt;Eigen::internal::scalar_product_op&lt;float,float&gt; &gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::bind2nd_op&lt;Eigen::internal::scalar_difference_op&lt;float,float&gt; &gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const &gt; const ,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::bind2nd_op&lt;Eigen::internal::scalar_difference_op&lt;float,float&gt; &gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const &gt; const &gt; const ,Eigen::MakePointer&gt; const ,Eigen::ThreadPoolDevice&gt;::m_reducedStrides</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>411</LINE>
      <COLUMN>20</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::bind2nd_op&lt;Eigen::internal::scalar_quotient_op&lt;float,float&gt; &gt;,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::bind1st_op&lt;Eigen::internal::scalar_product_op&lt;float,float&gt; &gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::bind2nd_op&lt;Eigen::internal::scalar_difference_op&lt;float,float&gt; &gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const &gt; const ,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::bind2nd_op&lt;Eigen::internal::scalar_difference_op&lt;float,float&gt; &gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const &gt; const &gt; const ,Eigen::MakePointer&gt; const ,Eigen::ThreadPoolDevice&gt;::m_preservedStrides' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::bind2nd_op&lt;Eigen::internal::scalar_quotient_op&lt;float,float&gt; &gt;,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::bind1st_op&lt;Eigen::internal::scalar_product_op&lt;float,float&gt; &gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::bind2nd_op&lt;Eigen::internal::scalar_difference_op&lt;float,float&gt; &gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const &gt; const ,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::bind2nd_op&lt;Eigen::internal::scalar_difference_op&lt;float,float&gt; &gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const &gt; const &gt; const ,Eigen::MakePointer&gt; const ,Eigen::ThreadPoolDevice&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseUnaryOp@U?$bind2nd_op@U?$scalar_quotient_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseUnaryOp@U?$bind1st_op@U?$scalar_product_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@$$CBV?$Tensor@M$00$0A@_J@3@@3@$$CBV?$TensorCwiseUnaryOp@U?$bind2nd_op@U?$scalar_difference_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@@3@$$CBV?$TensorCwiseUnaryOp@U?$bind2nd_op@U?$scalar_difference_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@@3@@3@UMakePointer@3@@Eigen@@UThreadPoolDevice@2@@Eigen@@QEAA@AEBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseUnaryOp@U?$bind2nd_op@U?$scalar_quotient_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseUnaryOp@U?$bind1st_op@U?$scalar_product_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@$$CBV?$Tensor@M$00$0A@_J@3@@3@$$CBV?$TensorCwiseUnaryOp@U?$bind2nd_op@U?$scalar_difference_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@@3@$$CBV?$TensorCwiseUnaryOp@U?$bind2nd_op@U?$scalar_difference_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@@3@@3@UMakePointer@3@@1@AEBUThreadPoolDevice@1@@Z</DECORATED>
    <FUNCLINE>411</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::bind2nd_op&lt;Eigen::internal::scalar_quotient_op&lt;float,float&gt; &gt;,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::bind1st_op&lt;Eigen::internal::scalar_product_op&lt;float,float&gt; &gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::bind2nd_op&lt;Eigen::internal::scalar_difference_op&lt;float,float&gt; &gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const &gt; const ,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::bind2nd_op&lt;Eigen::internal::scalar_difference_op&lt;float,float&gt; &gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const &gt; const &gt; const ,Eigen::MakePointer&gt; const ,Eigen::ThreadPoolDevice&gt;::m_preservedStrides</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>411</LINE>
      <COLUMN>20</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::bind2nd_op&lt;Eigen::internal::scalar_quotient_op&lt;float,float&gt; &gt;,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::bind1st_op&lt;Eigen::internal::scalar_product_op&lt;float,float&gt; &gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::bind2nd_op&lt;Eigen::internal::scalar_difference_op&lt;float,float&gt; &gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const &gt; const ,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::bind2nd_op&lt;Eigen::internal::scalar_difference_op&lt;float,float&gt; &gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const &gt; const &gt; const ,Eigen::MakePointer&gt; const ,Eigen::ThreadPoolDevice&gt;::m_outputStrides' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::bind2nd_op&lt;Eigen::internal::scalar_quotient_op&lt;float,float&gt; &gt;,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::bind1st_op&lt;Eigen::internal::scalar_product_op&lt;float,float&gt; &gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::bind2nd_op&lt;Eigen::internal::scalar_difference_op&lt;float,float&gt; &gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const &gt; const ,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::bind2nd_op&lt;Eigen::internal::scalar_difference_op&lt;float,float&gt; &gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const &gt; const &gt; const ,Eigen::MakePointer&gt; const ,Eigen::ThreadPoolDevice&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseUnaryOp@U?$bind2nd_op@U?$scalar_quotient_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseUnaryOp@U?$bind1st_op@U?$scalar_product_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@$$CBV?$Tensor@M$00$0A@_J@3@@3@$$CBV?$TensorCwiseUnaryOp@U?$bind2nd_op@U?$scalar_difference_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@@3@$$CBV?$TensorCwiseUnaryOp@U?$bind2nd_op@U?$scalar_difference_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@@3@@3@UMakePointer@3@@Eigen@@UThreadPoolDevice@2@@Eigen@@QEAA@AEBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseUnaryOp@U?$bind2nd_op@U?$scalar_quotient_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseUnaryOp@U?$bind1st_op@U?$scalar_product_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@$$CBV?$Tensor@M$00$0A@_J@3@@3@$$CBV?$TensorCwiseUnaryOp@U?$bind2nd_op@U?$scalar_difference_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@@3@$$CBV?$TensorCwiseUnaryOp@U?$bind2nd_op@U?$scalar_difference_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@@3@@3@UMakePointer@3@@1@AEBUThreadPoolDevice@1@@Z</DECORATED>
    <FUNCLINE>411</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::bind2nd_op&lt;Eigen::internal::scalar_quotient_op&lt;float,float&gt; &gt;,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::bind1st_op&lt;Eigen::internal::scalar_product_op&lt;float,float&gt; &gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::bind2nd_op&lt;Eigen::internal::scalar_difference_op&lt;float,float&gt; &gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const &gt; const ,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::bind2nd_op&lt;Eigen::internal::scalar_difference_op&lt;float,float&gt; &gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const &gt; const &gt; const ,Eigen::MakePointer&gt; const ,Eigen::ThreadPoolDevice&gt;::m_outputStrides</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>441</LINE>
      <COLUMN>49</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::bind2nd_op&lt;Eigen::internal::scalar_quotient_op&lt;float,float&gt; &gt;,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::bind1st_op&lt;Eigen::internal::scalar_product_op&lt;float,float&gt; &gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::bind2nd_op&lt;Eigen::internal::scalar_difference_op&lt;float,float&gt; &gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const &gt; const ,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::bind2nd_op&lt;Eigen::internal::scalar_difference_op&lt;float,float&gt; &gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const &gt; const &gt; const ,Eigen::MakePointer&gt; const ,Eigen::ThreadPoolDevice&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseUnaryOp@U?$bind2nd_op@U?$scalar_quotient_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseUnaryOp@U?$bind1st_op@U?$scalar_product_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@$$CBV?$Tensor@M$00$0A@_J@3@@3@$$CBV?$TensorCwiseUnaryOp@U?$bind2nd_op@U?$scalar_difference_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@@3@$$CBV?$TensorCwiseUnaryOp@U?$bind2nd_op@U?$scalar_difference_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@@3@@3@UMakePointer@3@@Eigen@@UThreadPoolDevice@2@@Eigen@@QEAA@AEBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseUnaryOp@U?$bind2nd_op@U?$scalar_quotient_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseUnaryOp@U?$bind1st_op@U?$scalar_product_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@$$CBV?$Tensor@M$00$0A@_J@3@@3@$$CBV?$TensorCwiseUnaryOp@U?$bind2nd_op@U?$scalar_difference_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@@3@$$CBV?$TensorCwiseUnaryOp@U?$bind2nd_op@U?$scalar_difference_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@@3@@3@UMakePointer@3@@1@AEBUThreadPoolDevice@1@@Z</DECORATED>
    <FUNCLINE>411</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>441</LINE>
      <COLUMN>71</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::bind2nd_op&lt;Eigen::internal::scalar_quotient_op&lt;float,float&gt; &gt;,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::bind1st_op&lt;Eigen::internal::scalar_product_op&lt;float,float&gt; &gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::bind2nd_op&lt;Eigen::internal::scalar_difference_op&lt;float,float&gt; &gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const &gt; const ,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::bind2nd_op&lt;Eigen::internal::scalar_difference_op&lt;float,float&gt; &gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const &gt; const &gt; const ,Eigen::MakePointer&gt; const ,Eigen::ThreadPoolDevice&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseUnaryOp@U?$bind2nd_op@U?$scalar_quotient_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseUnaryOp@U?$bind1st_op@U?$scalar_product_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@$$CBV?$Tensor@M$00$0A@_J@3@@3@$$CBV?$TensorCwiseUnaryOp@U?$bind2nd_op@U?$scalar_difference_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@@3@$$CBV?$TensorCwiseUnaryOp@U?$bind2nd_op@U?$scalar_difference_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@@3@@3@UMakePointer@3@@Eigen@@UThreadPoolDevice@2@@Eigen@@QEAA@AEBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseUnaryOp@U?$bind2nd_op@U?$scalar_quotient_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseUnaryOp@U?$bind1st_op@U?$scalar_product_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@$$CBV?$Tensor@M$00$0A@_J@3@@3@$$CBV?$TensorCwiseUnaryOp@U?$bind2nd_op@U?$scalar_difference_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@@3@$$CBV?$TensorCwiseUnaryOp@U?$bind2nd_op@U?$scalar_difference_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@@3@@3@UMakePointer@3@@1@AEBUThreadPoolDevice@1@@Z</DECORATED>
    <FUNCLINE>411</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>436</LINE>
      <COLUMN>49</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::bind2nd_op&lt;Eigen::internal::scalar_quotient_op&lt;float,float&gt; &gt;,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::bind1st_op&lt;Eigen::internal::scalar_product_op&lt;float,float&gt; &gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::bind2nd_op&lt;Eigen::internal::scalar_difference_op&lt;float,float&gt; &gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const &gt; const ,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::bind2nd_op&lt;Eigen::internal::scalar_difference_op&lt;float,float&gt; &gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const &gt; const &gt; const ,Eigen::MakePointer&gt; const ,Eigen::ThreadPoolDevice&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseUnaryOp@U?$bind2nd_op@U?$scalar_quotient_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseUnaryOp@U?$bind1st_op@U?$scalar_product_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@$$CBV?$Tensor@M$00$0A@_J@3@@3@$$CBV?$TensorCwiseUnaryOp@U?$bind2nd_op@U?$scalar_difference_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@@3@$$CBV?$TensorCwiseUnaryOp@U?$bind2nd_op@U?$scalar_difference_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@@3@@3@UMakePointer@3@@Eigen@@UThreadPoolDevice@2@@Eigen@@QEAA@AEBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseUnaryOp@U?$bind2nd_op@U?$scalar_quotient_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseUnaryOp@U?$bind1st_op@U?$scalar_product_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@$$CBV?$Tensor@M$00$0A@_J@3@@3@$$CBV?$TensorCwiseUnaryOp@U?$bind2nd_op@U?$scalar_difference_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@@3@$$CBV?$TensorCwiseUnaryOp@U?$bind2nd_op@U?$scalar_difference_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@@3@@3@UMakePointer@3@@1@AEBUThreadPoolDevice@1@@Z</DECORATED>
    <FUNCLINE>411</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>436</LINE>
      <COLUMN>71</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::bind2nd_op&lt;Eigen::internal::scalar_quotient_op&lt;float,float&gt; &gt;,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::bind1st_op&lt;Eigen::internal::scalar_product_op&lt;float,float&gt; &gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::bind2nd_op&lt;Eigen::internal::scalar_difference_op&lt;float,float&gt; &gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const &gt; const ,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::bind2nd_op&lt;Eigen::internal::scalar_difference_op&lt;float,float&gt; &gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const &gt; const &gt; const ,Eigen::MakePointer&gt; const ,Eigen::ThreadPoolDevice&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseUnaryOp@U?$bind2nd_op@U?$scalar_quotient_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseUnaryOp@U?$bind1st_op@U?$scalar_product_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@$$CBV?$Tensor@M$00$0A@_J@3@@3@$$CBV?$TensorCwiseUnaryOp@U?$bind2nd_op@U?$scalar_difference_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@@3@$$CBV?$TensorCwiseUnaryOp@U?$bind2nd_op@U?$scalar_difference_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@@3@@3@UMakePointer@3@@Eigen@@UThreadPoolDevice@2@@Eigen@@QEAA@AEBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseUnaryOp@U?$bind2nd_op@U?$scalar_quotient_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseUnaryOp@U?$bind1st_op@U?$scalar_product_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@$$CBV?$Tensor@M$00$0A@_J@3@@3@$$CBV?$TensorCwiseUnaryOp@U?$bind2nd_op@U?$scalar_difference_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@@3@$$CBV?$TensorCwiseUnaryOp@U?$bind2nd_op@U?$scalar_difference_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@@3@@3@UMakePointer@3@@1@AEBUThreadPoolDevice@1@@Z</DECORATED>
    <FUNCLINE>411</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>457</LINE>
      <COLUMN>45</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::bind2nd_op&lt;Eigen::internal::scalar_quotient_op&lt;float,float&gt; &gt;,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::bind1st_op&lt;Eigen::internal::scalar_product_op&lt;float,float&gt; &gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::bind2nd_op&lt;Eigen::internal::scalar_difference_op&lt;float,float&gt; &gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const &gt; const ,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::bind2nd_op&lt;Eigen::internal::scalar_difference_op&lt;float,float&gt; &gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const &gt; const &gt; const ,Eigen::MakePointer&gt; const ,Eigen::ThreadPoolDevice&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseUnaryOp@U?$bind2nd_op@U?$scalar_quotient_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseUnaryOp@U?$bind1st_op@U?$scalar_product_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@$$CBV?$Tensor@M$00$0A@_J@3@@3@$$CBV?$TensorCwiseUnaryOp@U?$bind2nd_op@U?$scalar_difference_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@@3@$$CBV?$TensorCwiseUnaryOp@U?$bind2nd_op@U?$scalar_difference_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@@3@@3@UMakePointer@3@@Eigen@@UThreadPoolDevice@2@@Eigen@@QEAA@AEBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseUnaryOp@U?$bind2nd_op@U?$scalar_quotient_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseUnaryOp@U?$bind1st_op@U?$scalar_product_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@$$CBV?$Tensor@M$00$0A@_J@3@@3@$$CBV?$TensorCwiseUnaryOp@U?$bind2nd_op@U?$scalar_difference_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@@3@$$CBV?$TensorCwiseUnaryOp@U?$bind2nd_op@U?$scalar_difference_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@@3@@3@UMakePointer@3@@1@AEBUThreadPoolDevice@1@@Z</DECORATED>
    <FUNCLINE>411</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>457</LINE>
      <COLUMN>65</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::bind2nd_op&lt;Eigen::internal::scalar_quotient_op&lt;float,float&gt; &gt;,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::bind1st_op&lt;Eigen::internal::scalar_product_op&lt;float,float&gt; &gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::bind2nd_op&lt;Eigen::internal::scalar_difference_op&lt;float,float&gt; &gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const &gt; const ,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::bind2nd_op&lt;Eigen::internal::scalar_difference_op&lt;float,float&gt; &gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const &gt; const &gt; const ,Eigen::MakePointer&gt; const ,Eigen::ThreadPoolDevice&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseUnaryOp@U?$bind2nd_op@U?$scalar_quotient_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseUnaryOp@U?$bind1st_op@U?$scalar_product_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@$$CBV?$Tensor@M$00$0A@_J@3@@3@$$CBV?$TensorCwiseUnaryOp@U?$bind2nd_op@U?$scalar_difference_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@@3@$$CBV?$TensorCwiseUnaryOp@U?$bind2nd_op@U?$scalar_difference_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@@3@@3@UMakePointer@3@@Eigen@@UThreadPoolDevice@2@@Eigen@@QEAA@AEBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseUnaryOp@U?$bind2nd_op@U?$scalar_quotient_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseUnaryOp@U?$bind1st_op@U?$scalar_product_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@$$CBV?$Tensor@M$00$0A@_J@3@@3@$$CBV?$TensorCwiseUnaryOp@U?$bind2nd_op@U?$scalar_difference_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@@3@$$CBV?$TensorCwiseUnaryOp@U?$bind2nd_op@U?$scalar_difference_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@@3@@3@UMakePointer@3@@1@AEBUThreadPoolDevice@1@@Z</DECORATED>
    <FUNCLINE>411</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>452</LINE>
      <COLUMN>44</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::bind2nd_op&lt;Eigen::internal::scalar_quotient_op&lt;float,float&gt; &gt;,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::bind1st_op&lt;Eigen::internal::scalar_product_op&lt;float,float&gt; &gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::bind2nd_op&lt;Eigen::internal::scalar_difference_op&lt;float,float&gt; &gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const &gt; const ,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::bind2nd_op&lt;Eigen::internal::scalar_difference_op&lt;float,float&gt; &gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const &gt; const &gt; const ,Eigen::MakePointer&gt; const ,Eigen::ThreadPoolDevice&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseUnaryOp@U?$bind2nd_op@U?$scalar_quotient_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseUnaryOp@U?$bind1st_op@U?$scalar_product_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@$$CBV?$Tensor@M$00$0A@_J@3@@3@$$CBV?$TensorCwiseUnaryOp@U?$bind2nd_op@U?$scalar_difference_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@@3@$$CBV?$TensorCwiseUnaryOp@U?$bind2nd_op@U?$scalar_difference_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@@3@@3@UMakePointer@3@@Eigen@@UThreadPoolDevice@2@@Eigen@@QEAA@AEBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseUnaryOp@U?$bind2nd_op@U?$scalar_quotient_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseUnaryOp@U?$bind1st_op@U?$scalar_product_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@$$CBV?$Tensor@M$00$0A@_J@3@@3@$$CBV?$TensorCwiseUnaryOp@U?$bind2nd_op@U?$scalar_difference_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@@3@$$CBV?$TensorCwiseUnaryOp@U?$bind2nd_op@U?$scalar_difference_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@@3@@3@UMakePointer@3@@1@AEBUThreadPoolDevice@1@@Z</DECORATED>
    <FUNCLINE>411</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>452</LINE>
      <COLUMN>62</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::bind2nd_op&lt;Eigen::internal::scalar_quotient_op&lt;float,float&gt; &gt;,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::bind1st_op&lt;Eigen::internal::scalar_product_op&lt;float,float&gt; &gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::bind2nd_op&lt;Eigen::internal::scalar_difference_op&lt;float,float&gt; &gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const &gt; const ,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::bind2nd_op&lt;Eigen::internal::scalar_difference_op&lt;float,float&gt; &gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const &gt; const &gt; const ,Eigen::MakePointer&gt; const ,Eigen::ThreadPoolDevice&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseUnaryOp@U?$bind2nd_op@U?$scalar_quotient_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseUnaryOp@U?$bind1st_op@U?$scalar_product_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@$$CBV?$Tensor@M$00$0A@_J@3@@3@$$CBV?$TensorCwiseUnaryOp@U?$bind2nd_op@U?$scalar_difference_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@@3@$$CBV?$TensorCwiseUnaryOp@U?$bind2nd_op@U?$scalar_difference_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@@3@@3@UMakePointer@3@@Eigen@@UThreadPoolDevice@2@@Eigen@@QEAA@AEBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseUnaryOp@U?$bind2nd_op@U?$scalar_quotient_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseUnaryOp@U?$bind1st_op@U?$scalar_product_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@$$CBV?$Tensor@M$00$0A@_J@3@@3@$$CBV?$TensorCwiseUnaryOp@U?$bind2nd_op@U?$scalar_difference_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@@3@$$CBV?$TensorCwiseUnaryOp@U?$bind2nd_op@U?$scalar_difference_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@@3@@3@UMakePointer@3@@1@AEBUThreadPoolDevice@1@@Z</DECORATED>
    <FUNCLINE>411</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>519</LINE>
      <COLUMN>60</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::bind2nd_op&lt;Eigen::internal::scalar_quotient_op&lt;float,float&gt; &gt;,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::bind1st_op&lt;Eigen::internal::scalar_product_op&lt;float,float&gt; &gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::bind2nd_op&lt;Eigen::internal::scalar_difference_op&lt;float,float&gt; &gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const &gt; const &gt; const ,Eigen::MakePointer&gt; const ,Eigen::ThreadPoolDevice&gt;::evalSubExprsIfNeeded</FUNCTION>
    <DECORATED>?evalSubExprsIfNeeded@?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseUnaryOp@U?$bind2nd_op@U?$scalar_quotient_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseUnaryOp@U?$bind1st_op@U?$scalar_product_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@$$CBV?$Tensor@M$00$0A@_J@3@@3@$$CBV?$TensorCwiseUnaryOp@U?$bind2nd_op@U?$scalar_difference_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@@3@@3@UMakePointer@3@@Eigen@@UThreadPoolDevice@2@@Eigen@@QEAA_NPEAM@Z</DECORATED>
    <FUNCLINE>482</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>550</LINE>
      <COLUMN>62</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::bind2nd_op&lt;Eigen::internal::scalar_quotient_op&lt;float,float&gt; &gt;,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::bind1st_op&lt;Eigen::internal::scalar_product_op&lt;float,float&gt; &gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::bind2nd_op&lt;Eigen::internal::scalar_difference_op&lt;float,float&gt; &gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const &gt; const &gt; const ,Eigen::MakePointer&gt; const ,Eigen::ThreadPoolDevice&gt;::evalSubExprsIfNeeded</FUNCTION>
    <DECORATED>?evalSubExprsIfNeeded@?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseUnaryOp@U?$bind2nd_op@U?$scalar_quotient_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseUnaryOp@U?$bind1st_op@U?$scalar_product_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@$$CBV?$Tensor@M$00$0A@_J@3@@3@$$CBV?$TensorCwiseUnaryOp@U?$bind2nd_op@U?$scalar_difference_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@@3@@3@UMakePointer@3@@Eigen@@UThreadPoolDevice@2@@Eigen@@QEAA_NPEAM@Z</DECORATED>
    <FUNCLINE>482</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>435</LINE>
      <COLUMN>8</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>Ill-defined for-loop:  initial condition does not satisfy test.  Loop body not executed.</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::bind2nd_op&lt;Eigen::internal::scalar_quotient_op&lt;float,float&gt; &gt;,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::bind1st_op&lt;Eigen::internal::scalar_product_op&lt;float,float&gt; &gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::bind2nd_op&lt;Eigen::internal::scalar_difference_op&lt;float,float&gt; &gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const &gt; const &gt; const ,Eigen::MakePointer&gt; const ,Eigen::ThreadPoolDevice&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseUnaryOp@U?$bind2nd_op@U?$scalar_quotient_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseUnaryOp@U?$bind1st_op@U?$scalar_product_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@$$CBV?$Tensor@M$00$0A@_J@3@@3@$$CBV?$TensorCwiseUnaryOp@U?$bind2nd_op@U?$scalar_difference_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@@3@@3@UMakePointer@3@@Eigen@@UThreadPoolDevice@2@@Eigen@@QEAA@AEBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseUnaryOp@U?$bind2nd_op@U?$scalar_quotient_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseUnaryOp@U?$bind1st_op@U?$scalar_product_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@$$CBV?$Tensor@M$00$0A@_J@3@@3@$$CBV?$TensorCwiseUnaryOp@U?$bind2nd_op@U?$scalar_difference_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@@3@@3@UMakePointer@3@@1@AEBUThreadPoolDevice@1@@Z</DECORATED>
    <FUNCLINE>411</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>440</LINE>
      <COLUMN>8</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>Ill-defined for-loop:  initial condition does not satisfy test.  Loop body not executed.</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::bind2nd_op&lt;Eigen::internal::scalar_quotient_op&lt;float,float&gt; &gt;,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::bind1st_op&lt;Eigen::internal::scalar_product_op&lt;float,float&gt; &gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::bind2nd_op&lt;Eigen::internal::scalar_difference_op&lt;float,float&gt; &gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const &gt; const &gt; const ,Eigen::MakePointer&gt; const ,Eigen::ThreadPoolDevice&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseUnaryOp@U?$bind2nd_op@U?$scalar_quotient_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseUnaryOp@U?$bind1st_op@U?$scalar_product_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@$$CBV?$Tensor@M$00$0A@_J@3@@3@$$CBV?$TensorCwiseUnaryOp@U?$bind2nd_op@U?$scalar_difference_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@@3@@3@UMakePointer@3@@Eigen@@UThreadPoolDevice@2@@Eigen@@QEAA@AEBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseUnaryOp@U?$bind2nd_op@U?$scalar_quotient_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseUnaryOp@U?$bind1st_op@U?$scalar_product_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@$$CBV?$Tensor@M$00$0A@_J@3@@3@$$CBV?$TensorCwiseUnaryOp@U?$bind2nd_op@U?$scalar_difference_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@@3@@3@UMakePointer@3@@1@AEBUThreadPoolDevice@1@@Z</DECORATED>
    <FUNCLINE>411</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>451</LINE>
      <COLUMN>8</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>Ill-defined for-loop:  initial condition does not satisfy test.  Loop body not executed.</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::bind2nd_op&lt;Eigen::internal::scalar_quotient_op&lt;float,float&gt; &gt;,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::bind1st_op&lt;Eigen::internal::scalar_product_op&lt;float,float&gt; &gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::bind2nd_op&lt;Eigen::internal::scalar_difference_op&lt;float,float&gt; &gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const &gt; const &gt; const ,Eigen::MakePointer&gt; const ,Eigen::ThreadPoolDevice&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseUnaryOp@U?$bind2nd_op@U?$scalar_quotient_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseUnaryOp@U?$bind1st_op@U?$scalar_product_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@$$CBV?$Tensor@M$00$0A@_J@3@@3@$$CBV?$TensorCwiseUnaryOp@U?$bind2nd_op@U?$scalar_difference_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@@3@@3@UMakePointer@3@@Eigen@@UThreadPoolDevice@2@@Eigen@@QEAA@AEBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseUnaryOp@U?$bind2nd_op@U?$scalar_quotient_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseUnaryOp@U?$bind1st_op@U?$scalar_product_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@$$CBV?$Tensor@M$00$0A@_J@3@@3@$$CBV?$TensorCwiseUnaryOp@U?$bind2nd_op@U?$scalar_difference_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@@3@@3@UMakePointer@3@@1@AEBUThreadPoolDevice@1@@Z</DECORATED>
    <FUNCLINE>411</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>456</LINE>
      <COLUMN>8</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>Ill-defined for-loop:  initial condition does not satisfy test.  Loop body not executed.</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::bind2nd_op&lt;Eigen::internal::scalar_quotient_op&lt;float,float&gt; &gt;,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::bind1st_op&lt;Eigen::internal::scalar_product_op&lt;float,float&gt; &gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::bind2nd_op&lt;Eigen::internal::scalar_difference_op&lt;float,float&gt; &gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const &gt; const &gt; const ,Eigen::MakePointer&gt; const ,Eigen::ThreadPoolDevice&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseUnaryOp@U?$bind2nd_op@U?$scalar_quotient_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseUnaryOp@U?$bind1st_op@U?$scalar_product_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@$$CBV?$Tensor@M$00$0A@_J@3@@3@$$CBV?$TensorCwiseUnaryOp@U?$bind2nd_op@U?$scalar_difference_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@@3@@3@UMakePointer@3@@Eigen@@UThreadPoolDevice@2@@Eigen@@QEAA@AEBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseUnaryOp@U?$bind2nd_op@U?$scalar_quotient_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseUnaryOp@U?$bind1st_op@U?$scalar_product_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@$$CBV?$Tensor@M$00$0A@_J@3@@3@$$CBV?$TensorCwiseUnaryOp@U?$bind2nd_op@U?$scalar_difference_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@@3@@3@UMakePointer@3@@1@AEBUThreadPoolDevice@1@@Z</DECORATED>
    <FUNCLINE>411</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>411</LINE>
      <COLUMN>20</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::bind2nd_op&lt;Eigen::internal::scalar_quotient_op&lt;float,float&gt; &gt;,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::bind1st_op&lt;Eigen::internal::scalar_product_op&lt;float,float&gt; &gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::bind2nd_op&lt;Eigen::internal::scalar_difference_op&lt;float,float&gt; &gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const &gt; const &gt; const ,Eigen::MakePointer&gt; const ,Eigen::ThreadPoolDevice&gt;::m_reducedStrides' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::bind2nd_op&lt;Eigen::internal::scalar_quotient_op&lt;float,float&gt; &gt;,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::bind1st_op&lt;Eigen::internal::scalar_product_op&lt;float,float&gt; &gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::bind2nd_op&lt;Eigen::internal::scalar_difference_op&lt;float,float&gt; &gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const &gt; const &gt; const ,Eigen::MakePointer&gt; const ,Eigen::ThreadPoolDevice&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseUnaryOp@U?$bind2nd_op@U?$scalar_quotient_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseUnaryOp@U?$bind1st_op@U?$scalar_product_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@$$CBV?$Tensor@M$00$0A@_J@3@@3@$$CBV?$TensorCwiseUnaryOp@U?$bind2nd_op@U?$scalar_difference_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@@3@@3@UMakePointer@3@@Eigen@@UThreadPoolDevice@2@@Eigen@@QEAA@AEBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseUnaryOp@U?$bind2nd_op@U?$scalar_quotient_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseUnaryOp@U?$bind1st_op@U?$scalar_product_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@$$CBV?$Tensor@M$00$0A@_J@3@@3@$$CBV?$TensorCwiseUnaryOp@U?$bind2nd_op@U?$scalar_difference_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@@3@@3@UMakePointer@3@@1@AEBUThreadPoolDevice@1@@Z</DECORATED>
    <FUNCLINE>411</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::bind2nd_op&lt;Eigen::internal::scalar_quotient_op&lt;float,float&gt; &gt;,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::bind1st_op&lt;Eigen::internal::scalar_product_op&lt;float,float&gt; &gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::bind2nd_op&lt;Eigen::internal::scalar_difference_op&lt;float,float&gt; &gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const &gt; const &gt; const ,Eigen::MakePointer&gt; const ,Eigen::ThreadPoolDevice&gt;::m_reducedStrides</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>411</LINE>
      <COLUMN>20</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::bind2nd_op&lt;Eigen::internal::scalar_quotient_op&lt;float,float&gt; &gt;,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::bind1st_op&lt;Eigen::internal::scalar_product_op&lt;float,float&gt; &gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::bind2nd_op&lt;Eigen::internal::scalar_difference_op&lt;float,float&gt; &gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const &gt; const &gt; const ,Eigen::MakePointer&gt; const ,Eigen::ThreadPoolDevice&gt;::m_preservedStrides' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::bind2nd_op&lt;Eigen::internal::scalar_quotient_op&lt;float,float&gt; &gt;,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::bind1st_op&lt;Eigen::internal::scalar_product_op&lt;float,float&gt; &gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::bind2nd_op&lt;Eigen::internal::scalar_difference_op&lt;float,float&gt; &gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const &gt; const &gt; const ,Eigen::MakePointer&gt; const ,Eigen::ThreadPoolDevice&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseUnaryOp@U?$bind2nd_op@U?$scalar_quotient_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseUnaryOp@U?$bind1st_op@U?$scalar_product_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@$$CBV?$Tensor@M$00$0A@_J@3@@3@$$CBV?$TensorCwiseUnaryOp@U?$bind2nd_op@U?$scalar_difference_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@@3@@3@UMakePointer@3@@Eigen@@UThreadPoolDevice@2@@Eigen@@QEAA@AEBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseUnaryOp@U?$bind2nd_op@U?$scalar_quotient_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseUnaryOp@U?$bind1st_op@U?$scalar_product_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@$$CBV?$Tensor@M$00$0A@_J@3@@3@$$CBV?$TensorCwiseUnaryOp@U?$bind2nd_op@U?$scalar_difference_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@@3@@3@UMakePointer@3@@1@AEBUThreadPoolDevice@1@@Z</DECORATED>
    <FUNCLINE>411</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::bind2nd_op&lt;Eigen::internal::scalar_quotient_op&lt;float,float&gt; &gt;,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::bind1st_op&lt;Eigen::internal::scalar_product_op&lt;float,float&gt; &gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::bind2nd_op&lt;Eigen::internal::scalar_difference_op&lt;float,float&gt; &gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const &gt; const &gt; const ,Eigen::MakePointer&gt; const ,Eigen::ThreadPoolDevice&gt;::m_preservedStrides</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>411</LINE>
      <COLUMN>20</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::bind2nd_op&lt;Eigen::internal::scalar_quotient_op&lt;float,float&gt; &gt;,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::bind1st_op&lt;Eigen::internal::scalar_product_op&lt;float,float&gt; &gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::bind2nd_op&lt;Eigen::internal::scalar_difference_op&lt;float,float&gt; &gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const &gt; const &gt; const ,Eigen::MakePointer&gt; const ,Eigen::ThreadPoolDevice&gt;::m_outputStrides' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::bind2nd_op&lt;Eigen::internal::scalar_quotient_op&lt;float,float&gt; &gt;,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::bind1st_op&lt;Eigen::internal::scalar_product_op&lt;float,float&gt; &gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::bind2nd_op&lt;Eigen::internal::scalar_difference_op&lt;float,float&gt; &gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const &gt; const &gt; const ,Eigen::MakePointer&gt; const ,Eigen::ThreadPoolDevice&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseUnaryOp@U?$bind2nd_op@U?$scalar_quotient_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseUnaryOp@U?$bind1st_op@U?$scalar_product_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@$$CBV?$Tensor@M$00$0A@_J@3@@3@$$CBV?$TensorCwiseUnaryOp@U?$bind2nd_op@U?$scalar_difference_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@@3@@3@UMakePointer@3@@Eigen@@UThreadPoolDevice@2@@Eigen@@QEAA@AEBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseUnaryOp@U?$bind2nd_op@U?$scalar_quotient_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseUnaryOp@U?$bind1st_op@U?$scalar_product_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@$$CBV?$Tensor@M$00$0A@_J@3@@3@$$CBV?$TensorCwiseUnaryOp@U?$bind2nd_op@U?$scalar_difference_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@@3@@3@UMakePointer@3@@1@AEBUThreadPoolDevice@1@@Z</DECORATED>
    <FUNCLINE>411</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::bind2nd_op&lt;Eigen::internal::scalar_quotient_op&lt;float,float&gt; &gt;,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::bind1st_op&lt;Eigen::internal::scalar_product_op&lt;float,float&gt; &gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::bind2nd_op&lt;Eigen::internal::scalar_difference_op&lt;float,float&gt; &gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const &gt; const &gt; const ,Eigen::MakePointer&gt; const ,Eigen::ThreadPoolDevice&gt;::m_outputStrides</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>441</LINE>
      <COLUMN>49</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::bind2nd_op&lt;Eigen::internal::scalar_quotient_op&lt;float,float&gt; &gt;,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::bind1st_op&lt;Eigen::internal::scalar_product_op&lt;float,float&gt; &gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::bind2nd_op&lt;Eigen::internal::scalar_difference_op&lt;float,float&gt; &gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const &gt; const &gt; const ,Eigen::MakePointer&gt; const ,Eigen::ThreadPoolDevice&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseUnaryOp@U?$bind2nd_op@U?$scalar_quotient_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseUnaryOp@U?$bind1st_op@U?$scalar_product_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@$$CBV?$Tensor@M$00$0A@_J@3@@3@$$CBV?$TensorCwiseUnaryOp@U?$bind2nd_op@U?$scalar_difference_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@@3@@3@UMakePointer@3@@Eigen@@UThreadPoolDevice@2@@Eigen@@QEAA@AEBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseUnaryOp@U?$bind2nd_op@U?$scalar_quotient_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseUnaryOp@U?$bind1st_op@U?$scalar_product_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@$$CBV?$Tensor@M$00$0A@_J@3@@3@$$CBV?$TensorCwiseUnaryOp@U?$bind2nd_op@U?$scalar_difference_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@@3@@3@UMakePointer@3@@1@AEBUThreadPoolDevice@1@@Z</DECORATED>
    <FUNCLINE>411</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>441</LINE>
      <COLUMN>71</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::bind2nd_op&lt;Eigen::internal::scalar_quotient_op&lt;float,float&gt; &gt;,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::bind1st_op&lt;Eigen::internal::scalar_product_op&lt;float,float&gt; &gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::bind2nd_op&lt;Eigen::internal::scalar_difference_op&lt;float,float&gt; &gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const &gt; const &gt; const ,Eigen::MakePointer&gt; const ,Eigen::ThreadPoolDevice&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseUnaryOp@U?$bind2nd_op@U?$scalar_quotient_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseUnaryOp@U?$bind1st_op@U?$scalar_product_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@$$CBV?$Tensor@M$00$0A@_J@3@@3@$$CBV?$TensorCwiseUnaryOp@U?$bind2nd_op@U?$scalar_difference_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@@3@@3@UMakePointer@3@@Eigen@@UThreadPoolDevice@2@@Eigen@@QEAA@AEBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseUnaryOp@U?$bind2nd_op@U?$scalar_quotient_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseUnaryOp@U?$bind1st_op@U?$scalar_product_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@$$CBV?$Tensor@M$00$0A@_J@3@@3@$$CBV?$TensorCwiseUnaryOp@U?$bind2nd_op@U?$scalar_difference_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@@3@@3@UMakePointer@3@@1@AEBUThreadPoolDevice@1@@Z</DECORATED>
    <FUNCLINE>411</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>436</LINE>
      <COLUMN>49</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::bind2nd_op&lt;Eigen::internal::scalar_quotient_op&lt;float,float&gt; &gt;,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::bind1st_op&lt;Eigen::internal::scalar_product_op&lt;float,float&gt; &gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::bind2nd_op&lt;Eigen::internal::scalar_difference_op&lt;float,float&gt; &gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const &gt; const &gt; const ,Eigen::MakePointer&gt; const ,Eigen::ThreadPoolDevice&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseUnaryOp@U?$bind2nd_op@U?$scalar_quotient_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseUnaryOp@U?$bind1st_op@U?$scalar_product_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@$$CBV?$Tensor@M$00$0A@_J@3@@3@$$CBV?$TensorCwiseUnaryOp@U?$bind2nd_op@U?$scalar_difference_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@@3@@3@UMakePointer@3@@Eigen@@UThreadPoolDevice@2@@Eigen@@QEAA@AEBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseUnaryOp@U?$bind2nd_op@U?$scalar_quotient_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseUnaryOp@U?$bind1st_op@U?$scalar_product_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@$$CBV?$Tensor@M$00$0A@_J@3@@3@$$CBV?$TensorCwiseUnaryOp@U?$bind2nd_op@U?$scalar_difference_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@@3@@3@UMakePointer@3@@1@AEBUThreadPoolDevice@1@@Z</DECORATED>
    <FUNCLINE>411</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>436</LINE>
      <COLUMN>71</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::bind2nd_op&lt;Eigen::internal::scalar_quotient_op&lt;float,float&gt; &gt;,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::bind1st_op&lt;Eigen::internal::scalar_product_op&lt;float,float&gt; &gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::bind2nd_op&lt;Eigen::internal::scalar_difference_op&lt;float,float&gt; &gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const &gt; const &gt; const ,Eigen::MakePointer&gt; const ,Eigen::ThreadPoolDevice&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseUnaryOp@U?$bind2nd_op@U?$scalar_quotient_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseUnaryOp@U?$bind1st_op@U?$scalar_product_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@$$CBV?$Tensor@M$00$0A@_J@3@@3@$$CBV?$TensorCwiseUnaryOp@U?$bind2nd_op@U?$scalar_difference_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@@3@@3@UMakePointer@3@@Eigen@@UThreadPoolDevice@2@@Eigen@@QEAA@AEBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseUnaryOp@U?$bind2nd_op@U?$scalar_quotient_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseUnaryOp@U?$bind1st_op@U?$scalar_product_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@$$CBV?$Tensor@M$00$0A@_J@3@@3@$$CBV?$TensorCwiseUnaryOp@U?$bind2nd_op@U?$scalar_difference_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@@3@@3@UMakePointer@3@@1@AEBUThreadPoolDevice@1@@Z</DECORATED>
    <FUNCLINE>411</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>457</LINE>
      <COLUMN>45</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::bind2nd_op&lt;Eigen::internal::scalar_quotient_op&lt;float,float&gt; &gt;,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::bind1st_op&lt;Eigen::internal::scalar_product_op&lt;float,float&gt; &gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::bind2nd_op&lt;Eigen::internal::scalar_difference_op&lt;float,float&gt; &gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const &gt; const &gt; const ,Eigen::MakePointer&gt; const ,Eigen::ThreadPoolDevice&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseUnaryOp@U?$bind2nd_op@U?$scalar_quotient_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseUnaryOp@U?$bind1st_op@U?$scalar_product_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@$$CBV?$Tensor@M$00$0A@_J@3@@3@$$CBV?$TensorCwiseUnaryOp@U?$bind2nd_op@U?$scalar_difference_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@@3@@3@UMakePointer@3@@Eigen@@UThreadPoolDevice@2@@Eigen@@QEAA@AEBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseUnaryOp@U?$bind2nd_op@U?$scalar_quotient_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseUnaryOp@U?$bind1st_op@U?$scalar_product_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@$$CBV?$Tensor@M$00$0A@_J@3@@3@$$CBV?$TensorCwiseUnaryOp@U?$bind2nd_op@U?$scalar_difference_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@@3@@3@UMakePointer@3@@1@AEBUThreadPoolDevice@1@@Z</DECORATED>
    <FUNCLINE>411</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>457</LINE>
      <COLUMN>65</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::bind2nd_op&lt;Eigen::internal::scalar_quotient_op&lt;float,float&gt; &gt;,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::bind1st_op&lt;Eigen::internal::scalar_product_op&lt;float,float&gt; &gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::bind2nd_op&lt;Eigen::internal::scalar_difference_op&lt;float,float&gt; &gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const &gt; const &gt; const ,Eigen::MakePointer&gt; const ,Eigen::ThreadPoolDevice&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseUnaryOp@U?$bind2nd_op@U?$scalar_quotient_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseUnaryOp@U?$bind1st_op@U?$scalar_product_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@$$CBV?$Tensor@M$00$0A@_J@3@@3@$$CBV?$TensorCwiseUnaryOp@U?$bind2nd_op@U?$scalar_difference_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@@3@@3@UMakePointer@3@@Eigen@@UThreadPoolDevice@2@@Eigen@@QEAA@AEBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseUnaryOp@U?$bind2nd_op@U?$scalar_quotient_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseUnaryOp@U?$bind1st_op@U?$scalar_product_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@$$CBV?$Tensor@M$00$0A@_J@3@@3@$$CBV?$TensorCwiseUnaryOp@U?$bind2nd_op@U?$scalar_difference_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@@3@@3@UMakePointer@3@@1@AEBUThreadPoolDevice@1@@Z</DECORATED>
    <FUNCLINE>411</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>452</LINE>
      <COLUMN>44</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::bind2nd_op&lt;Eigen::internal::scalar_quotient_op&lt;float,float&gt; &gt;,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::bind1st_op&lt;Eigen::internal::scalar_product_op&lt;float,float&gt; &gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::bind2nd_op&lt;Eigen::internal::scalar_difference_op&lt;float,float&gt; &gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const &gt; const &gt; const ,Eigen::MakePointer&gt; const ,Eigen::ThreadPoolDevice&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseUnaryOp@U?$bind2nd_op@U?$scalar_quotient_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseUnaryOp@U?$bind1st_op@U?$scalar_product_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@$$CBV?$Tensor@M$00$0A@_J@3@@3@$$CBV?$TensorCwiseUnaryOp@U?$bind2nd_op@U?$scalar_difference_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@@3@@3@UMakePointer@3@@Eigen@@UThreadPoolDevice@2@@Eigen@@QEAA@AEBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseUnaryOp@U?$bind2nd_op@U?$scalar_quotient_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseUnaryOp@U?$bind1st_op@U?$scalar_product_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@$$CBV?$Tensor@M$00$0A@_J@3@@3@$$CBV?$TensorCwiseUnaryOp@U?$bind2nd_op@U?$scalar_difference_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@@3@@3@UMakePointer@3@@1@AEBUThreadPoolDevice@1@@Z</DECORATED>
    <FUNCLINE>411</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>452</LINE>
      <COLUMN>62</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::bind2nd_op&lt;Eigen::internal::scalar_quotient_op&lt;float,float&gt; &gt;,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::bind1st_op&lt;Eigen::internal::scalar_product_op&lt;float,float&gt; &gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::bind2nd_op&lt;Eigen::internal::scalar_difference_op&lt;float,float&gt; &gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const &gt; const &gt; const ,Eigen::MakePointer&gt; const ,Eigen::ThreadPoolDevice&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseUnaryOp@U?$bind2nd_op@U?$scalar_quotient_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseUnaryOp@U?$bind1st_op@U?$scalar_product_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@$$CBV?$Tensor@M$00$0A@_J@3@@3@$$CBV?$TensorCwiseUnaryOp@U?$bind2nd_op@U?$scalar_difference_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@@3@@3@UMakePointer@3@@Eigen@@UThreadPoolDevice@2@@Eigen@@QEAA@AEBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseUnaryOp@U?$bind2nd_op@U?$scalar_quotient_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseUnaryOp@U?$bind1st_op@U?$scalar_product_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@$$CBV?$Tensor@M$00$0A@_J@3@@3@$$CBV?$TensorCwiseUnaryOp@U?$bind2nd_op@U?$scalar_difference_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@@3@@3@UMakePointer@3@@1@AEBUThreadPoolDevice@1@@Z</DECORATED>
    <FUNCLINE>411</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>519</LINE>
      <COLUMN>60</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::evalSubExprsIfNeeded</FUNCTION>
    <DECORATED>?evalSubExprsIfNeeded@?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@$$CBV43@@3@UMakePointer@3@@Eigen@@UDefaultDevice@2@@Eigen@@QEAA_NPEAM@Z</DECORATED>
    <FUNCLINE>482</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>550</LINE>
      <COLUMN>62</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::evalSubExprsIfNeeded</FUNCTION>
    <DECORATED>?evalSubExprsIfNeeded@?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@$$CBV43@@3@UMakePointer@3@@Eigen@@UDefaultDevice@2@@Eigen@@QEAA_NPEAM@Z</DECORATED>
    <FUNCLINE>482</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>519</LINE>
      <COLUMN>60</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::evalSubExprsIfNeeded</FUNCTION>
    <DECORATED>?evalSubExprsIfNeeded@?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$Tensor@M$00$0A@_J@3@UMakePointer@3@@Eigen@@UDefaultDevice@2@@Eigen@@QEAA_NPEAM@Z</DECORATED>
    <FUNCLINE>482</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>550</LINE>
      <COLUMN>62</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::evalSubExprsIfNeeded</FUNCTION>
    <DECORATED>?evalSubExprsIfNeeded@?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$Tensor@M$00$0A@_J@3@UMakePointer@3@@Eigen@@UDefaultDevice@2@@Eigen@@QEAA_NPEAM@Z</DECORATED>
    <FUNCLINE>482</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>519</LINE>
      <COLUMN>60</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::scalar_square_op&lt;float&gt;,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_difference_op&lt;float,float&gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const &gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::evalSubExprsIfNeeded</FUNCTION>
    <DECORATED>?evalSubExprsIfNeeded@?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseUnaryOp@U?$scalar_square_op@M@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_difference_op@MM@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@$$CBV43@@3@@3@UMakePointer@3@@Eigen@@UDefaultDevice@2@@Eigen@@QEAA_NPEAM@Z</DECORATED>
    <FUNCLINE>482</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>550</LINE>
      <COLUMN>62</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::scalar_square_op&lt;float&gt;,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_difference_op&lt;float,float&gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const &gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::evalSubExprsIfNeeded</FUNCTION>
    <DECORATED>?evalSubExprsIfNeeded@?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseUnaryOp@U?$scalar_square_op@M@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_difference_op@MM@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@$$CBV43@@3@@3@UMakePointer@3@@Eigen@@UDefaultDevice@2@@Eigen@@QEAA_NPEAM@Z</DECORATED>
    <FUNCLINE>482</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>519</LINE>
      <COLUMN>60</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::bind1st_op&lt;Eigen::internal::scalar_product_op&lt;float,float&gt; &gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::bind1st_op&lt;Eigen::internal::scalar_sum_op&lt;float,float&gt; &gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const &gt; const ,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::scalar_opposite_op&lt;float&gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const &gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::evalSubExprsIfNeeded</FUNCTION>
    <DECORATED>?evalSubExprsIfNeeded@?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseUnaryOp@U?$bind1st_op@U?$scalar_product_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@$$CBV?$Tensor@M$00$0A@_J@3@@3@$$CBV?$TensorCwiseUnaryOp@U?$bind1st_op@U?$scalar_sum_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@@3@$$CBV?$TensorCwiseUnaryOp@U?$scalar_opposite_op@M@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@@3@UMakePointer@3@@Eigen@@UDefaultDevice@2@@Eigen@@QEAA_NPEAM@Z</DECORATED>
    <FUNCLINE>482</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>550</LINE>
      <COLUMN>62</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::bind1st_op&lt;Eigen::internal::scalar_product_op&lt;float,float&gt; &gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::bind1st_op&lt;Eigen::internal::scalar_sum_op&lt;float,float&gt; &gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const &gt; const ,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::scalar_opposite_op&lt;float&gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const &gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::evalSubExprsIfNeeded</FUNCTION>
    <DECORATED>?evalSubExprsIfNeeded@?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseUnaryOp@U?$bind1st_op@U?$scalar_product_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@$$CBV?$Tensor@M$00$0A@_J@3@@3@$$CBV?$TensorCwiseUnaryOp@U?$bind1st_op@U?$scalar_sum_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@@3@$$CBV?$TensorCwiseUnaryOp@U?$scalar_opposite_op@M@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@@3@UMakePointer@3@@Eigen@@UDefaultDevice@2@@Eigen@@QEAA_NPEAM@Z</DECORATED>
    <FUNCLINE>482</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>519</LINE>
      <COLUMN>60</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::bind1st_op&lt;Eigen::internal::scalar_product_op&lt;float,float&gt; &gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::bind1st_op&lt;Eigen::internal::scalar_sum_op&lt;float,float&gt; &gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const &gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::evalSubExprsIfNeeded</FUNCTION>
    <DECORATED>?evalSubExprsIfNeeded@?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseUnaryOp@U?$bind1st_op@U?$scalar_product_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@$$CBV?$Tensor@M$00$0A@_J@3@@3@$$CBV?$TensorCwiseUnaryOp@U?$bind1st_op@U?$scalar_sum_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@@3@UMakePointer@3@@Eigen@@UDefaultDevice@2@@Eigen@@QEAA_NPEAM@Z</DECORATED>
    <FUNCLINE>482</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>550</LINE>
      <COLUMN>62</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::bind1st_op&lt;Eigen::internal::scalar_product_op&lt;float,float&gt; &gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::bind1st_op&lt;Eigen::internal::scalar_sum_op&lt;float,float&gt; &gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const &gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::evalSubExprsIfNeeded</FUNCTION>
    <DECORATED>?evalSubExprsIfNeeded@?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseUnaryOp@U?$bind1st_op@U?$scalar_product_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@$$CBV?$Tensor@M$00$0A@_J@3@@3@$$CBV?$TensorCwiseUnaryOp@U?$bind1st_op@U?$scalar_sum_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@@3@UMakePointer@3@@Eigen@@UDefaultDevice@2@@Eigen@@QEAA_NPEAM@Z</DECORATED>
    <FUNCLINE>482</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>519</LINE>
      <COLUMN>60</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::MeanReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::evalSubExprsIfNeeded</FUNCTION>
    <DECORATED>?evalSubExprsIfNeeded@?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$MeanReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$Tensor@M$00$0A@_J@3@UMakePointer@3@@Eigen@@UDefaultDevice@2@@Eigen@@QEAA_NPEAM@Z</DECORATED>
    <FUNCLINE>482</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>550</LINE>
      <COLUMN>62</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::MeanReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::evalSubExprsIfNeeded</FUNCTION>
    <DECORATED>?evalSubExprsIfNeeded@?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$MeanReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$Tensor@M$00$0A@_J@3@UMakePointer@3@@Eigen@@UDefaultDevice@2@@Eigen@@QEAA_NPEAM@Z</DECORATED>
    <FUNCLINE>482</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>519</LINE>
      <COLUMN>60</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,2&gt; const ,Eigen::TensorConversionOp&lt;float,Eigen::Tensor&lt;__int64,2,0,__int64&gt; const &gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::evalSubExprsIfNeeded</FUNCTION>
    <DECORATED>?evalSubExprsIfNeeded@?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$01@3@$$CBV?$TensorConversionOp@M$$CBV?$Tensor@_J$01$0A@_J@Eigen@@@3@UMakePointer@3@@Eigen@@UDefaultDevice@2@@Eigen@@QEAA_NPEAM@Z</DECORATED>
    <FUNCLINE>482</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>550</LINE>
      <COLUMN>62</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,2&gt; const ,Eigen::TensorConversionOp&lt;float,Eigen::Tensor&lt;__int64,2,0,__int64&gt; const &gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::evalSubExprsIfNeeded</FUNCTION>
    <DECORATED>?evalSubExprsIfNeeded@?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$01@3@$$CBV?$TensorConversionOp@M$$CBV?$Tensor@_J$01$0A@_J@Eigen@@@3@UMakePointer@3@@Eigen@@UDefaultDevice@2@@Eigen@@QEAA_NPEAM@Z</DECORATED>
    <FUNCLINE>482</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>519</LINE>
      <COLUMN>60</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::MakePointer&gt; const ,Eigen::ThreadPoolDevice&gt;::evalSubExprsIfNeeded</FUNCTION>
    <DECORATED>?evalSubExprsIfNeeded@?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@$$CBV43@@3@UMakePointer@3@@Eigen@@UThreadPoolDevice@2@@Eigen@@QEAA_NPEAM@Z</DECORATED>
    <FUNCLINE>482</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>550</LINE>
      <COLUMN>62</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::MakePointer&gt; const ,Eigen::ThreadPoolDevice&gt;::evalSubExprsIfNeeded</FUNCTION>
    <DECORATED>?evalSubExprsIfNeeded@?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@$$CBV43@@3@UMakePointer@3@@Eigen@@UThreadPoolDevice@2@@Eigen@@QEAA_NPEAM@Z</DECORATED>
    <FUNCLINE>482</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>435</LINE>
      <COLUMN>8</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>Ill-defined for-loop:  initial condition does not satisfy test.  Loop body not executed.</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::MakePointer&gt; const ,Eigen::ThreadPoolDevice&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@$$CBV43@@3@UMakePointer@3@@Eigen@@UThreadPoolDevice@2@@Eigen@@QEAA@AEBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@$$CBV43@@3@UMakePointer@3@@1@AEBUThreadPoolDevice@1@@Z</DECORATED>
    <FUNCLINE>411</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>440</LINE>
      <COLUMN>8</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>Ill-defined for-loop:  initial condition does not satisfy test.  Loop body not executed.</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::MakePointer&gt; const ,Eigen::ThreadPoolDevice&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@$$CBV43@@3@UMakePointer@3@@Eigen@@UThreadPoolDevice@2@@Eigen@@QEAA@AEBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@$$CBV43@@3@UMakePointer@3@@1@AEBUThreadPoolDevice@1@@Z</DECORATED>
    <FUNCLINE>411</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>451</LINE>
      <COLUMN>8</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>Ill-defined for-loop:  initial condition does not satisfy test.  Loop body not executed.</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::MakePointer&gt; const ,Eigen::ThreadPoolDevice&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@$$CBV43@@3@UMakePointer@3@@Eigen@@UThreadPoolDevice@2@@Eigen@@QEAA@AEBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@$$CBV43@@3@UMakePointer@3@@1@AEBUThreadPoolDevice@1@@Z</DECORATED>
    <FUNCLINE>411</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>456</LINE>
      <COLUMN>8</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>Ill-defined for-loop:  initial condition does not satisfy test.  Loop body not executed.</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::MakePointer&gt; const ,Eigen::ThreadPoolDevice&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@$$CBV43@@3@UMakePointer@3@@Eigen@@UThreadPoolDevice@2@@Eigen@@QEAA@AEBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@$$CBV43@@3@UMakePointer@3@@1@AEBUThreadPoolDevice@1@@Z</DECORATED>
    <FUNCLINE>411</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>411</LINE>
      <COLUMN>20</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::MakePointer&gt; const ,Eigen::ThreadPoolDevice&gt;::m_reducedStrides' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::MakePointer&gt; const ,Eigen::ThreadPoolDevice&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@$$CBV43@@3@UMakePointer@3@@Eigen@@UThreadPoolDevice@2@@Eigen@@QEAA@AEBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@$$CBV43@@3@UMakePointer@3@@1@AEBUThreadPoolDevice@1@@Z</DECORATED>
    <FUNCLINE>411</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::MakePointer&gt; const ,Eigen::ThreadPoolDevice&gt;::m_reducedStrides</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>411</LINE>
      <COLUMN>20</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::MakePointer&gt; const ,Eigen::ThreadPoolDevice&gt;::m_preservedStrides' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::MakePointer&gt; const ,Eigen::ThreadPoolDevice&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@$$CBV43@@3@UMakePointer@3@@Eigen@@UThreadPoolDevice@2@@Eigen@@QEAA@AEBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@$$CBV43@@3@UMakePointer@3@@1@AEBUThreadPoolDevice@1@@Z</DECORATED>
    <FUNCLINE>411</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::MakePointer&gt; const ,Eigen::ThreadPoolDevice&gt;::m_preservedStrides</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>411</LINE>
      <COLUMN>20</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::MakePointer&gt; const ,Eigen::ThreadPoolDevice&gt;::m_outputStrides' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::MakePointer&gt; const ,Eigen::ThreadPoolDevice&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@$$CBV43@@3@UMakePointer@3@@Eigen@@UThreadPoolDevice@2@@Eigen@@QEAA@AEBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@$$CBV43@@3@UMakePointer@3@@1@AEBUThreadPoolDevice@1@@Z</DECORATED>
    <FUNCLINE>411</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::MakePointer&gt; const ,Eigen::ThreadPoolDevice&gt;::m_outputStrides</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>441</LINE>
      <COLUMN>49</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::MakePointer&gt; const ,Eigen::ThreadPoolDevice&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@$$CBV43@@3@UMakePointer@3@@Eigen@@UThreadPoolDevice@2@@Eigen@@QEAA@AEBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@$$CBV43@@3@UMakePointer@3@@1@AEBUThreadPoolDevice@1@@Z</DECORATED>
    <FUNCLINE>411</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>441</LINE>
      <COLUMN>71</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::MakePointer&gt; const ,Eigen::ThreadPoolDevice&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@$$CBV43@@3@UMakePointer@3@@Eigen@@UThreadPoolDevice@2@@Eigen@@QEAA@AEBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@$$CBV43@@3@UMakePointer@3@@1@AEBUThreadPoolDevice@1@@Z</DECORATED>
    <FUNCLINE>411</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>436</LINE>
      <COLUMN>49</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::MakePointer&gt; const ,Eigen::ThreadPoolDevice&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@$$CBV43@@3@UMakePointer@3@@Eigen@@UThreadPoolDevice@2@@Eigen@@QEAA@AEBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@$$CBV43@@3@UMakePointer@3@@1@AEBUThreadPoolDevice@1@@Z</DECORATED>
    <FUNCLINE>411</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>436</LINE>
      <COLUMN>71</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::MakePointer&gt; const ,Eigen::ThreadPoolDevice&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@$$CBV43@@3@UMakePointer@3@@Eigen@@UThreadPoolDevice@2@@Eigen@@QEAA@AEBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@$$CBV43@@3@UMakePointer@3@@1@AEBUThreadPoolDevice@1@@Z</DECORATED>
    <FUNCLINE>411</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>457</LINE>
      <COLUMN>45</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::MakePointer&gt; const ,Eigen::ThreadPoolDevice&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@$$CBV43@@3@UMakePointer@3@@Eigen@@UThreadPoolDevice@2@@Eigen@@QEAA@AEBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@$$CBV43@@3@UMakePointer@3@@1@AEBUThreadPoolDevice@1@@Z</DECORATED>
    <FUNCLINE>411</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>457</LINE>
      <COLUMN>65</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::MakePointer&gt; const ,Eigen::ThreadPoolDevice&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@$$CBV43@@3@UMakePointer@3@@Eigen@@UThreadPoolDevice@2@@Eigen@@QEAA@AEBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@$$CBV43@@3@UMakePointer@3@@1@AEBUThreadPoolDevice@1@@Z</DECORATED>
    <FUNCLINE>411</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>452</LINE>
      <COLUMN>44</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::MakePointer&gt; const ,Eigen::ThreadPoolDevice&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@$$CBV43@@3@UMakePointer@3@@Eigen@@UThreadPoolDevice@2@@Eigen@@QEAA@AEBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@$$CBV43@@3@UMakePointer@3@@1@AEBUThreadPoolDevice@1@@Z</DECORATED>
    <FUNCLINE>411</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>452</LINE>
      <COLUMN>62</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::MakePointer&gt; const ,Eigen::ThreadPoolDevice&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@$$CBV43@@3@UMakePointer@3@@Eigen@@UThreadPoolDevice@2@@Eigen@@QEAA@AEBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@$$CBV43@@3@UMakePointer@3@@1@AEBUThreadPoolDevice@1@@Z</DECORATED>
    <FUNCLINE>411</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>519</LINE>
      <COLUMN>60</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::MakePointer&gt; const ,Eigen::ThreadPoolDevice&gt;::evalSubExprsIfNeeded</FUNCTION>
    <DECORATED>?evalSubExprsIfNeeded@?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$Tensor@M$00$0A@_J@3@UMakePointer@3@@Eigen@@UThreadPoolDevice@2@@Eigen@@QEAA_NPEAM@Z</DECORATED>
    <FUNCLINE>482</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>550</LINE>
      <COLUMN>62</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::MakePointer&gt; const ,Eigen::ThreadPoolDevice&gt;::evalSubExprsIfNeeded</FUNCTION>
    <DECORATED>?evalSubExprsIfNeeded@?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$Tensor@M$00$0A@_J@3@UMakePointer@3@@Eigen@@UThreadPoolDevice@2@@Eigen@@QEAA_NPEAM@Z</DECORATED>
    <FUNCLINE>482</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>435</LINE>
      <COLUMN>8</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>Ill-defined for-loop:  initial condition does not satisfy test.  Loop body not executed.</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::MakePointer&gt; const ,Eigen::ThreadPoolDevice&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$Tensor@M$00$0A@_J@3@UMakePointer@3@@Eigen@@UThreadPoolDevice@2@@Eigen@@QEAA@AEBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$Tensor@M$00$0A@_J@3@UMakePointer@3@@1@AEBUThreadPoolDevice@1@@Z</DECORATED>
    <FUNCLINE>411</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>440</LINE>
      <COLUMN>8</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>Ill-defined for-loop:  initial condition does not satisfy test.  Loop body not executed.</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::MakePointer&gt; const ,Eigen::ThreadPoolDevice&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$Tensor@M$00$0A@_J@3@UMakePointer@3@@Eigen@@UThreadPoolDevice@2@@Eigen@@QEAA@AEBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$Tensor@M$00$0A@_J@3@UMakePointer@3@@1@AEBUThreadPoolDevice@1@@Z</DECORATED>
    <FUNCLINE>411</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>451</LINE>
      <COLUMN>8</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>Ill-defined for-loop:  initial condition does not satisfy test.  Loop body not executed.</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::MakePointer&gt; const ,Eigen::ThreadPoolDevice&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$Tensor@M$00$0A@_J@3@UMakePointer@3@@Eigen@@UThreadPoolDevice@2@@Eigen@@QEAA@AEBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$Tensor@M$00$0A@_J@3@UMakePointer@3@@1@AEBUThreadPoolDevice@1@@Z</DECORATED>
    <FUNCLINE>411</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>456</LINE>
      <COLUMN>8</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>Ill-defined for-loop:  initial condition does not satisfy test.  Loop body not executed.</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::MakePointer&gt; const ,Eigen::ThreadPoolDevice&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$Tensor@M$00$0A@_J@3@UMakePointer@3@@Eigen@@UThreadPoolDevice@2@@Eigen@@QEAA@AEBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$Tensor@M$00$0A@_J@3@UMakePointer@3@@1@AEBUThreadPoolDevice@1@@Z</DECORATED>
    <FUNCLINE>411</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>411</LINE>
      <COLUMN>20</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::MakePointer&gt; const ,Eigen::ThreadPoolDevice&gt;::m_outputStrides' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::MakePointer&gt; const ,Eigen::ThreadPoolDevice&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$Tensor@M$00$0A@_J@3@UMakePointer@3@@Eigen@@UThreadPoolDevice@2@@Eigen@@QEAA@AEBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$Tensor@M$00$0A@_J@3@UMakePointer@3@@1@AEBUThreadPoolDevice@1@@Z</DECORATED>
    <FUNCLINE>411</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::MakePointer&gt; const ,Eigen::ThreadPoolDevice&gt;::m_outputStrides</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>411</LINE>
      <COLUMN>20</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::MakePointer&gt; const ,Eigen::ThreadPoolDevice&gt;::m_reducedStrides' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::MakePointer&gt; const ,Eigen::ThreadPoolDevice&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$Tensor@M$00$0A@_J@3@UMakePointer@3@@Eigen@@UThreadPoolDevice@2@@Eigen@@QEAA@AEBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$Tensor@M$00$0A@_J@3@UMakePointer@3@@1@AEBUThreadPoolDevice@1@@Z</DECORATED>
    <FUNCLINE>411</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::MakePointer&gt; const ,Eigen::ThreadPoolDevice&gt;::m_reducedStrides</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>411</LINE>
      <COLUMN>20</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::MakePointer&gt; const ,Eigen::ThreadPoolDevice&gt;::m_preservedStrides' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::MakePointer&gt; const ,Eigen::ThreadPoolDevice&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$Tensor@M$00$0A@_J@3@UMakePointer@3@@Eigen@@UThreadPoolDevice@2@@Eigen@@QEAA@AEBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$Tensor@M$00$0A@_J@3@UMakePointer@3@@1@AEBUThreadPoolDevice@1@@Z</DECORATED>
    <FUNCLINE>411</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::MakePointer&gt; const ,Eigen::ThreadPoolDevice&gt;::m_preservedStrides</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>441</LINE>
      <COLUMN>49</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::MakePointer&gt; const ,Eigen::ThreadPoolDevice&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$Tensor@M$00$0A@_J@3@UMakePointer@3@@Eigen@@UThreadPoolDevice@2@@Eigen@@QEAA@AEBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$Tensor@M$00$0A@_J@3@UMakePointer@3@@1@AEBUThreadPoolDevice@1@@Z</DECORATED>
    <FUNCLINE>411</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>441</LINE>
      <COLUMN>71</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::MakePointer&gt; const ,Eigen::ThreadPoolDevice&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$Tensor@M$00$0A@_J@3@UMakePointer@3@@Eigen@@UThreadPoolDevice@2@@Eigen@@QEAA@AEBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$Tensor@M$00$0A@_J@3@UMakePointer@3@@1@AEBUThreadPoolDevice@1@@Z</DECORATED>
    <FUNCLINE>411</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>436</LINE>
      <COLUMN>49</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::MakePointer&gt; const ,Eigen::ThreadPoolDevice&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$Tensor@M$00$0A@_J@3@UMakePointer@3@@Eigen@@UThreadPoolDevice@2@@Eigen@@QEAA@AEBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$Tensor@M$00$0A@_J@3@UMakePointer@3@@1@AEBUThreadPoolDevice@1@@Z</DECORATED>
    <FUNCLINE>411</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>436</LINE>
      <COLUMN>71</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::MakePointer&gt; const ,Eigen::ThreadPoolDevice&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$Tensor@M$00$0A@_J@3@UMakePointer@3@@Eigen@@UThreadPoolDevice@2@@Eigen@@QEAA@AEBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$Tensor@M$00$0A@_J@3@UMakePointer@3@@1@AEBUThreadPoolDevice@1@@Z</DECORATED>
    <FUNCLINE>411</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>457</LINE>
      <COLUMN>45</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::MakePointer&gt; const ,Eigen::ThreadPoolDevice&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$Tensor@M$00$0A@_J@3@UMakePointer@3@@Eigen@@UThreadPoolDevice@2@@Eigen@@QEAA@AEBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$Tensor@M$00$0A@_J@3@UMakePointer@3@@1@AEBUThreadPoolDevice@1@@Z</DECORATED>
    <FUNCLINE>411</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>457</LINE>
      <COLUMN>65</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::MakePointer&gt; const ,Eigen::ThreadPoolDevice&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$Tensor@M$00$0A@_J@3@UMakePointer@3@@Eigen@@UThreadPoolDevice@2@@Eigen@@QEAA@AEBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$Tensor@M$00$0A@_J@3@UMakePointer@3@@1@AEBUThreadPoolDevice@1@@Z</DECORATED>
    <FUNCLINE>411</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>452</LINE>
      <COLUMN>44</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::MakePointer&gt; const ,Eigen::ThreadPoolDevice&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$Tensor@M$00$0A@_J@3@UMakePointer@3@@Eigen@@UThreadPoolDevice@2@@Eigen@@QEAA@AEBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$Tensor@M$00$0A@_J@3@UMakePointer@3@@1@AEBUThreadPoolDevice@1@@Z</DECORATED>
    <FUNCLINE>411</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>452</LINE>
      <COLUMN>62</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::MakePointer&gt; const ,Eigen::ThreadPoolDevice&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$Tensor@M$00$0A@_J@3@UMakePointer@3@@Eigen@@UThreadPoolDevice@2@@Eigen@@QEAA@AEBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$Tensor@M$00$0A@_J@3@UMakePointer@3@@1@AEBUThreadPoolDevice@1@@Z</DECORATED>
    <FUNCLINE>411</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>519</LINE>
      <COLUMN>60</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::scalar_square_op&lt;float&gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::MakePointer&gt; const ,Eigen::ThreadPoolDevice&gt;::evalSubExprsIfNeeded</FUNCTION>
    <DECORATED>?evalSubExprsIfNeeded@?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseUnaryOp@U?$scalar_square_op@M@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@UMakePointer@3@@Eigen@@UThreadPoolDevice@2@@Eigen@@QEAA_NPEAM@Z</DECORATED>
    <FUNCLINE>482</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>550</LINE>
      <COLUMN>62</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::scalar_square_op&lt;float&gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::MakePointer&gt; const ,Eigen::ThreadPoolDevice&gt;::evalSubExprsIfNeeded</FUNCTION>
    <DECORATED>?evalSubExprsIfNeeded@?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseUnaryOp@U?$scalar_square_op@M@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@UMakePointer@3@@Eigen@@UThreadPoolDevice@2@@Eigen@@QEAA_NPEAM@Z</DECORATED>
    <FUNCLINE>482</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>435</LINE>
      <COLUMN>8</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>Ill-defined for-loop:  initial condition does not satisfy test.  Loop body not executed.</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::scalar_square_op&lt;float&gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::MakePointer&gt; const ,Eigen::ThreadPoolDevice&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseUnaryOp@U?$scalar_square_op@M@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@UMakePointer@3@@Eigen@@UThreadPoolDevice@2@@Eigen@@QEAA@AEBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseUnaryOp@U?$scalar_square_op@M@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@UMakePointer@3@@1@AEBUThreadPoolDevice@1@@Z</DECORATED>
    <FUNCLINE>411</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>440</LINE>
      <COLUMN>8</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>Ill-defined for-loop:  initial condition does not satisfy test.  Loop body not executed.</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::scalar_square_op&lt;float&gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::MakePointer&gt; const ,Eigen::ThreadPoolDevice&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseUnaryOp@U?$scalar_square_op@M@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@UMakePointer@3@@Eigen@@UThreadPoolDevice@2@@Eigen@@QEAA@AEBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseUnaryOp@U?$scalar_square_op@M@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@UMakePointer@3@@1@AEBUThreadPoolDevice@1@@Z</DECORATED>
    <FUNCLINE>411</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>451</LINE>
      <COLUMN>8</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>Ill-defined for-loop:  initial condition does not satisfy test.  Loop body not executed.</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::scalar_square_op&lt;float&gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::MakePointer&gt; const ,Eigen::ThreadPoolDevice&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseUnaryOp@U?$scalar_square_op@M@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@UMakePointer@3@@Eigen@@UThreadPoolDevice@2@@Eigen@@QEAA@AEBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseUnaryOp@U?$scalar_square_op@M@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@UMakePointer@3@@1@AEBUThreadPoolDevice@1@@Z</DECORATED>
    <FUNCLINE>411</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>456</LINE>
      <COLUMN>8</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>Ill-defined for-loop:  initial condition does not satisfy test.  Loop body not executed.</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::scalar_square_op&lt;float&gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::MakePointer&gt; const ,Eigen::ThreadPoolDevice&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseUnaryOp@U?$scalar_square_op@M@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@UMakePointer@3@@Eigen@@UThreadPoolDevice@2@@Eigen@@QEAA@AEBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseUnaryOp@U?$scalar_square_op@M@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@UMakePointer@3@@1@AEBUThreadPoolDevice@1@@Z</DECORATED>
    <FUNCLINE>411</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>411</LINE>
      <COLUMN>20</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::scalar_square_op&lt;float&gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::MakePointer&gt; const ,Eigen::ThreadPoolDevice&gt;::m_outputStrides' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::scalar_square_op&lt;float&gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::MakePointer&gt; const ,Eigen::ThreadPoolDevice&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseUnaryOp@U?$scalar_square_op@M@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@UMakePointer@3@@Eigen@@UThreadPoolDevice@2@@Eigen@@QEAA@AEBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseUnaryOp@U?$scalar_square_op@M@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@UMakePointer@3@@1@AEBUThreadPoolDevice@1@@Z</DECORATED>
    <FUNCLINE>411</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::scalar_square_op&lt;float&gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::MakePointer&gt; const ,Eigen::ThreadPoolDevice&gt;::m_outputStrides</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>411</LINE>
      <COLUMN>20</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::scalar_square_op&lt;float&gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::MakePointer&gt; const ,Eigen::ThreadPoolDevice&gt;::m_preservedStrides' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::scalar_square_op&lt;float&gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::MakePointer&gt; const ,Eigen::ThreadPoolDevice&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseUnaryOp@U?$scalar_square_op@M@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@UMakePointer@3@@Eigen@@UThreadPoolDevice@2@@Eigen@@QEAA@AEBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseUnaryOp@U?$scalar_square_op@M@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@UMakePointer@3@@1@AEBUThreadPoolDevice@1@@Z</DECORATED>
    <FUNCLINE>411</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::scalar_square_op&lt;float&gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::MakePointer&gt; const ,Eigen::ThreadPoolDevice&gt;::m_preservedStrides</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>411</LINE>
      <COLUMN>20</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::scalar_square_op&lt;float&gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::MakePointer&gt; const ,Eigen::ThreadPoolDevice&gt;::m_reducedStrides' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::scalar_square_op&lt;float&gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::MakePointer&gt; const ,Eigen::ThreadPoolDevice&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseUnaryOp@U?$scalar_square_op@M@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@UMakePointer@3@@Eigen@@UThreadPoolDevice@2@@Eigen@@QEAA@AEBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseUnaryOp@U?$scalar_square_op@M@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@UMakePointer@3@@1@AEBUThreadPoolDevice@1@@Z</DECORATED>
    <FUNCLINE>411</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::scalar_square_op&lt;float&gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::MakePointer&gt; const ,Eigen::ThreadPoolDevice&gt;::m_reducedStrides</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>441</LINE>
      <COLUMN>49</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::scalar_square_op&lt;float&gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::MakePointer&gt; const ,Eigen::ThreadPoolDevice&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseUnaryOp@U?$scalar_square_op@M@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@UMakePointer@3@@Eigen@@UThreadPoolDevice@2@@Eigen@@QEAA@AEBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseUnaryOp@U?$scalar_square_op@M@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@UMakePointer@3@@1@AEBUThreadPoolDevice@1@@Z</DECORATED>
    <FUNCLINE>411</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>441</LINE>
      <COLUMN>71</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::scalar_square_op&lt;float&gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::MakePointer&gt; const ,Eigen::ThreadPoolDevice&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseUnaryOp@U?$scalar_square_op@M@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@UMakePointer@3@@Eigen@@UThreadPoolDevice@2@@Eigen@@QEAA@AEBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseUnaryOp@U?$scalar_square_op@M@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@UMakePointer@3@@1@AEBUThreadPoolDevice@1@@Z</DECORATED>
    <FUNCLINE>411</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>436</LINE>
      <COLUMN>49</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::scalar_square_op&lt;float&gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::MakePointer&gt; const ,Eigen::ThreadPoolDevice&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseUnaryOp@U?$scalar_square_op@M@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@UMakePointer@3@@Eigen@@UThreadPoolDevice@2@@Eigen@@QEAA@AEBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseUnaryOp@U?$scalar_square_op@M@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@UMakePointer@3@@1@AEBUThreadPoolDevice@1@@Z</DECORATED>
    <FUNCLINE>411</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>436</LINE>
      <COLUMN>71</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::scalar_square_op&lt;float&gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::MakePointer&gt; const ,Eigen::ThreadPoolDevice&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseUnaryOp@U?$scalar_square_op@M@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@UMakePointer@3@@Eigen@@UThreadPoolDevice@2@@Eigen@@QEAA@AEBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseUnaryOp@U?$scalar_square_op@M@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@UMakePointer@3@@1@AEBUThreadPoolDevice@1@@Z</DECORATED>
    <FUNCLINE>411</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>457</LINE>
      <COLUMN>45</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::scalar_square_op&lt;float&gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::MakePointer&gt; const ,Eigen::ThreadPoolDevice&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseUnaryOp@U?$scalar_square_op@M@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@UMakePointer@3@@Eigen@@UThreadPoolDevice@2@@Eigen@@QEAA@AEBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseUnaryOp@U?$scalar_square_op@M@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@UMakePointer@3@@1@AEBUThreadPoolDevice@1@@Z</DECORATED>
    <FUNCLINE>411</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>457</LINE>
      <COLUMN>65</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::scalar_square_op&lt;float&gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::MakePointer&gt; const ,Eigen::ThreadPoolDevice&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseUnaryOp@U?$scalar_square_op@M@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@UMakePointer@3@@Eigen@@UThreadPoolDevice@2@@Eigen@@QEAA@AEBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseUnaryOp@U?$scalar_square_op@M@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@UMakePointer@3@@1@AEBUThreadPoolDevice@1@@Z</DECORATED>
    <FUNCLINE>411</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>452</LINE>
      <COLUMN>44</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::scalar_square_op&lt;float&gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::MakePointer&gt; const ,Eigen::ThreadPoolDevice&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseUnaryOp@U?$scalar_square_op@M@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@UMakePointer@3@@Eigen@@UThreadPoolDevice@2@@Eigen@@QEAA@AEBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseUnaryOp@U?$scalar_square_op@M@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@UMakePointer@3@@1@AEBUThreadPoolDevice@1@@Z</DECORATED>
    <FUNCLINE>411</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>452</LINE>
      <COLUMN>62</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::scalar_square_op&lt;float&gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::MakePointer&gt; const ,Eigen::ThreadPoolDevice&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseUnaryOp@U?$scalar_square_op@M@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@UMakePointer@3@@Eigen@@UThreadPoolDevice@2@@Eigen@@QEAA@AEBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseUnaryOp@U?$scalar_square_op@M@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@UMakePointer@3@@1@AEBUThreadPoolDevice@1@@Z</DECORATED>
    <FUNCLINE>411</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>709</LINE>
      <COLUMN>6</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>Ill-defined for-loop:  initial condition does not satisfy test.  Loop body not executed.</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::MaxReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::firstInput</FUNCTION>
    <DECORATED>?firstInput@?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$MaxReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$Tensor@M$00$0A@_J@3@UMakePointer@3@@Eigen@@UDefaultDevice@2@@Eigen@@AEBA_J_J@Z</DECORATED>
    <FUNCLINE>698</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>722</LINE>
      <COLUMN>6</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>Ill-defined for-loop:  initial condition does not satisfy test.  Loop body not executed.</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::MaxReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::firstInput</FUNCTION>
    <DECORATED>?firstInput@?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$MaxReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$Tensor@M$00$0A@_J@3@UMakePointer@3@@Eigen@@UDefaultDevice@2@@Eigen@@AEBA_J_J@Z</DECORATED>
    <FUNCLINE>698</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>709</LINE>
      <COLUMN>6</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>Ill-defined for-loop:  initial condition does not satisfy test.  Loop body not executed.</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::MinReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::firstInput</FUNCTION>
    <DECORATED>?firstInput@?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$MinReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$Tensor@M$00$0A@_J@3@UMakePointer@3@@Eigen@@UDefaultDevice@2@@Eigen@@AEBA_J_J@Z</DECORATED>
    <FUNCLINE>698</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>722</LINE>
      <COLUMN>6</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>Ill-defined for-loop:  initial condition does not satisfy test.  Loop body not executed.</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::MinReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::firstInput</FUNCTION>
    <DECORATED>?firstInput@?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$MinReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$Tensor@M$00$0A@_J@3@UMakePointer@3@@Eigen@@UDefaultDevice@2@@Eigen@@AEBA_J_J@Z</DECORATED>
    <FUNCLINE>698</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>709</LINE>
      <COLUMN>6</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>Ill-defined for-loop:  initial condition does not satisfy test.  Loop body not executed.</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::MinReducer&lt;__int64&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::Tensor&lt;__int64,1,0,__int64&gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::firstInput</FUNCTION>
    <DECORATED>?firstInput@?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$MinReducer@_J@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$Tensor@_J$00$0A@_J@3@UMakePointer@3@@Eigen@@UDefaultDevice@2@@Eigen@@AEBA_J_J@Z</DECORATED>
    <FUNCLINE>698</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>722</LINE>
      <COLUMN>6</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>Ill-defined for-loop:  initial condition does not satisfy test.  Loop body not executed.</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::MinReducer&lt;__int64&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::Tensor&lt;__int64,1,0,__int64&gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::firstInput</FUNCTION>
    <DECORATED>?firstInput@?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$MinReducer@_J@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$Tensor@_J$00$0A@_J@3@UMakePointer@3@@Eigen@@UDefaultDevice@2@@Eigen@@AEBA_J_J@Z</DECORATED>
    <FUNCLINE>698</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>709</LINE>
      <COLUMN>6</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>Ill-defined for-loop:  initial condition does not satisfy test.  Loop body not executed.</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,2&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::firstInput</FUNCTION>
    <DECORATED>?firstInput@?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$01@3@$$CBV?$Tensor@M$01$0A@_J@3@UMakePointer@3@@Eigen@@UDefaultDevice@2@@Eigen@@AEBA_J_J@Z</DECORATED>
    <FUNCLINE>698</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>722</LINE>
      <COLUMN>6</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>Ill-defined for-loop:  initial condition does not satisfy test.  Loop body not executed.</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,2&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::firstInput</FUNCTION>
    <DECORATED>?firstInput@?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$01@3@$$CBV?$Tensor@M$01$0A@_J@3@UMakePointer@3@@Eigen@@UDefaultDevice@2@@Eigen@@AEBA_J_J@Z</DECORATED>
    <FUNCLINE>698</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>709</LINE>
      <COLUMN>6</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>Ill-defined for-loop:  initial condition does not satisfy test.  Loop body not executed.</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,std::array&lt;int,1&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::firstInput</FUNCTION>
    <DECORATED>?firstInput@?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBV?$array@H$00@std@@$$CBV?$Tensor@M$01$0A@_J@3@UMakePointer@3@@Eigen@@UDefaultDevice@2@@Eigen@@AEBA_J_J@Z</DECORATED>
    <FUNCLINE>698</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>722</LINE>
      <COLUMN>6</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>Ill-defined for-loop:  initial condition does not satisfy test.  Loop body not executed.</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,std::array&lt;int,1&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::firstInput</FUNCTION>
    <DECORATED>?firstInput@?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBV?$array@H$00@std@@$$CBV?$Tensor@M$01$0A@_J@3@UMakePointer@3@@Eigen@@UDefaultDevice@2@@Eigen@@AEBA_J_J@Z</DECORATED>
    <FUNCLINE>698</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>519</LINE>
      <COLUMN>60</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::scalar_square_op&lt;float&gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::evalSubExprsIfNeeded</FUNCTION>
    <DECORATED>?evalSubExprsIfNeeded@?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseUnaryOp@U?$scalar_square_op@M@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@UMakePointer@3@@Eigen@@UDefaultDevice@2@@Eigen@@QEAA_NPEAM@Z</DECORATED>
    <FUNCLINE>482</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>550</LINE>
      <COLUMN>62</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::scalar_square_op&lt;float&gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::evalSubExprsIfNeeded</FUNCTION>
    <DECORATED>?evalSubExprsIfNeeded@?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseUnaryOp@U?$scalar_square_op@M@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@UMakePointer@3@@Eigen@@UDefaultDevice@2@@Eigen@@QEAA_NPEAM@Z</DECORATED>
    <FUNCLINE>482</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>709</LINE>
      <COLUMN>6</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>Ill-defined for-loop:  initial condition does not satisfy test.  Loop body not executed.</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::firstInput</FUNCTION>
    <DECORATED>?firstInput@?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@$$CBV43@@3@UMakePointer@3@@Eigen@@UDefaultDevice@2@@Eigen@@AEBA_J_J@Z</DECORATED>
    <FUNCLINE>698</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>722</LINE>
      <COLUMN>6</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>Ill-defined for-loop:  initial condition does not satisfy test.  Loop body not executed.</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::firstInput</FUNCTION>
    <DECORATED>?firstInput@?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@$$CBV43@@3@UMakePointer@3@@Eigen@@UDefaultDevice@2@@Eigen@@AEBA_J_J@Z</DECORATED>
    <FUNCLINE>698</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>709</LINE>
      <COLUMN>6</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>Ill-defined for-loop:  initial condition does not satisfy test.  Loop body not executed.</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::firstInput</FUNCTION>
    <DECORATED>?firstInput@?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$Tensor@M$00$0A@_J@3@UMakePointer@3@@Eigen@@UDefaultDevice@2@@Eigen@@AEBA_J_J@Z</DECORATED>
    <FUNCLINE>698</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>722</LINE>
      <COLUMN>6</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>Ill-defined for-loop:  initial condition does not satisfy test.  Loop body not executed.</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::firstInput</FUNCTION>
    <DECORATED>?firstInput@?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$Tensor@M$00$0A@_J@3@UMakePointer@3@@Eigen@@UDefaultDevice@2@@Eigen@@AEBA_J_J@Z</DECORATED>
    <FUNCLINE>698</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>709</LINE>
      <COLUMN>6</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>Ill-defined for-loop:  initial condition does not satisfy test.  Loop body not executed.</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::scalar_square_op&lt;float&gt;,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_difference_op&lt;float,float&gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const &gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::firstInput</FUNCTION>
    <DECORATED>?firstInput@?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseUnaryOp@U?$scalar_square_op@M@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_difference_op@MM@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@$$CBV43@@3@@3@UMakePointer@3@@Eigen@@UDefaultDevice@2@@Eigen@@AEBA_J_J@Z</DECORATED>
    <FUNCLINE>698</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>722</LINE>
      <COLUMN>6</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>Ill-defined for-loop:  initial condition does not satisfy test.  Loop body not executed.</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::scalar_square_op&lt;float&gt;,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_difference_op&lt;float,float&gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const &gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::firstInput</FUNCTION>
    <DECORATED>?firstInput@?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseUnaryOp@U?$scalar_square_op@M@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_difference_op@MM@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@$$CBV43@@3@@3@UMakePointer@3@@Eigen@@UDefaultDevice@2@@Eigen@@AEBA_J_J@Z</DECORATED>
    <FUNCLINE>698</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>709</LINE>
      <COLUMN>6</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>Ill-defined for-loop:  initial condition does not satisfy test.  Loop body not executed.</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::bind1st_op&lt;Eigen::internal::scalar_product_op&lt;float,float&gt; &gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::bind1st_op&lt;Eigen::internal::scalar_sum_op&lt;float,float&gt; &gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const &gt; const ,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::scalar_opposite_op&lt;float&gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const &gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::firstInput</FUNCTION>
    <DECORATED>?firstInput@?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseUnaryOp@U?$bind1st_op@U?$scalar_product_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@$$CBV?$Tensor@M$00$0A@_J@3@@3@$$CBV?$TensorCwiseUnaryOp@U?$bind1st_op@U?$scalar_sum_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@@3@$$CBV?$TensorCwiseUnaryOp@U?$scalar_opposite_op@M@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@@3@UMakePointer@3@@Eigen@@UDefaultDevice@2@@Eigen@@AEBA_J_J@Z</DECORATED>
    <FUNCLINE>698</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>722</LINE>
      <COLUMN>6</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>Ill-defined for-loop:  initial condition does not satisfy test.  Loop body not executed.</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::bind1st_op&lt;Eigen::internal::scalar_product_op&lt;float,float&gt; &gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::bind1st_op&lt;Eigen::internal::scalar_sum_op&lt;float,float&gt; &gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const &gt; const ,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::scalar_opposite_op&lt;float&gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const &gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::firstInput</FUNCTION>
    <DECORATED>?firstInput@?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseUnaryOp@U?$bind1st_op@U?$scalar_product_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@$$CBV?$Tensor@M$00$0A@_J@3@@3@$$CBV?$TensorCwiseUnaryOp@U?$bind1st_op@U?$scalar_sum_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@@3@$$CBV?$TensorCwiseUnaryOp@U?$scalar_opposite_op@M@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@@3@UMakePointer@3@@Eigen@@UDefaultDevice@2@@Eigen@@AEBA_J_J@Z</DECORATED>
    <FUNCLINE>698</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>709</LINE>
      <COLUMN>6</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>Ill-defined for-loop:  initial condition does not satisfy test.  Loop body not executed.</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::bind1st_op&lt;Eigen::internal::scalar_product_op&lt;float,float&gt; &gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::bind1st_op&lt;Eigen::internal::scalar_sum_op&lt;float,float&gt; &gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const &gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::firstInput</FUNCTION>
    <DECORATED>?firstInput@?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseUnaryOp@U?$bind1st_op@U?$scalar_product_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@$$CBV?$Tensor@M$00$0A@_J@3@@3@$$CBV?$TensorCwiseUnaryOp@U?$bind1st_op@U?$scalar_sum_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@@3@UMakePointer@3@@Eigen@@UDefaultDevice@2@@Eigen@@AEBA_J_J@Z</DECORATED>
    <FUNCLINE>698</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>722</LINE>
      <COLUMN>6</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>Ill-defined for-loop:  initial condition does not satisfy test.  Loop body not executed.</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::bind1st_op&lt;Eigen::internal::scalar_product_op&lt;float,float&gt; &gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::bind1st_op&lt;Eigen::internal::scalar_sum_op&lt;float,float&gt; &gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const &gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::firstInput</FUNCTION>
    <DECORATED>?firstInput@?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseUnaryOp@U?$bind1st_op@U?$scalar_product_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@$$CBV?$Tensor@M$00$0A@_J@3@@3@$$CBV?$TensorCwiseUnaryOp@U?$bind1st_op@U?$scalar_sum_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@@3@UMakePointer@3@@Eigen@@UDefaultDevice@2@@Eigen@@AEBA_J_J@Z</DECORATED>
    <FUNCLINE>698</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>709</LINE>
      <COLUMN>6</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>Ill-defined for-loop:  initial condition does not satisfy test.  Loop body not executed.</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::MeanReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::firstInput</FUNCTION>
    <DECORATED>?firstInput@?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$MeanReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$Tensor@M$00$0A@_J@3@UMakePointer@3@@Eigen@@UDefaultDevice@2@@Eigen@@AEBA_J_J@Z</DECORATED>
    <FUNCLINE>698</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>722</LINE>
      <COLUMN>6</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>Ill-defined for-loop:  initial condition does not satisfy test.  Loop body not executed.</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::MeanReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::firstInput</FUNCTION>
    <DECORATED>?firstInput@?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$MeanReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$Tensor@M$00$0A@_J@3@UMakePointer@3@@Eigen@@UDefaultDevice@2@@Eigen@@AEBA_J_J@Z</DECORATED>
    <FUNCLINE>698</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>709</LINE>
      <COLUMN>6</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>Ill-defined for-loop:  initial condition does not satisfy test.  Loop body not executed.</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,2&gt; const ,Eigen::TensorConversionOp&lt;float,Eigen::Tensor&lt;__int64,2,0,__int64&gt; const &gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::firstInput</FUNCTION>
    <DECORATED>?firstInput@?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$01@3@$$CBV?$TensorConversionOp@M$$CBV?$Tensor@_J$01$0A@_J@Eigen@@@3@UMakePointer@3@@Eigen@@UDefaultDevice@2@@Eigen@@AEBA_J_J@Z</DECORATED>
    <FUNCLINE>698</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>722</LINE>
      <COLUMN>6</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>Ill-defined for-loop:  initial condition does not satisfy test.  Loop body not executed.</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,2&gt; const ,Eigen::TensorConversionOp&lt;float,Eigen::Tensor&lt;__int64,2,0,__int64&gt; const &gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::firstInput</FUNCTION>
    <DECORATED>?firstInput@?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$01@3@$$CBV?$TensorConversionOp@M$$CBV?$Tensor@_J$01$0A@_J@Eigen@@@3@UMakePointer@3@@Eigen@@UDefaultDevice@2@@Eigen@@AEBA_J_J@Z</DECORATED>
    <FUNCLINE>698</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>709</LINE>
      <COLUMN>6</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>Ill-defined for-loop:  initial condition does not satisfy test.  Loop body not executed.</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::scalar_square_op&lt;float&gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::firstInput</FUNCTION>
    <DECORATED>?firstInput@?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseUnaryOp@U?$scalar_square_op@M@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@UMakePointer@3@@Eigen@@UDefaultDevice@2@@Eigen@@AEBA_J_J@Z</DECORATED>
    <FUNCLINE>698</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>722</LINE>
      <COLUMN>6</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>Ill-defined for-loop:  initial condition does not satisfy test.  Loop body not executed.</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::scalar_square_op&lt;float&gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;::firstInput</FUNCTION>
    <DECORATED>?firstInput@?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseUnaryOp@U?$scalar_square_op@M@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@UMakePointer@3@@Eigen@@UDefaultDevice@2@@Eigen@@AEBA_J_J@Z</DECORATED>
    <FUNCLINE>698</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>709</LINE>
      <COLUMN>6</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>Ill-defined for-loop:  initial condition does not satisfy test.  Loop body not executed.</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::bind2nd_op&lt;Eigen::internal::scalar_quotient_op&lt;float,float&gt; &gt;,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::bind1st_op&lt;Eigen::internal::scalar_product_op&lt;float,float&gt; &gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::bind2nd_op&lt;Eigen::internal::scalar_difference_op&lt;float,float&gt; &gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const &gt; const ,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::bind2nd_op&lt;Eigen::internal::scalar_difference_op&lt;float,float&gt; &gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const &gt; const &gt; const ,Eigen::MakePointer&gt; const ,Eigen::ThreadPoolDevice&gt;::firstInput</FUNCTION>
    <DECORATED>?firstInput@?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseUnaryOp@U?$bind2nd_op@U?$scalar_quotient_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseUnaryOp@U?$bind1st_op@U?$scalar_product_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@$$CBV?$Tensor@M$00$0A@_J@3@@3@$$CBV?$TensorCwiseUnaryOp@U?$bind2nd_op@U?$scalar_difference_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@@3@$$CBV?$TensorCwiseUnaryOp@U?$bind2nd_op@U?$scalar_difference_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@@3@@3@UMakePointer@3@@Eigen@@UThreadPoolDevice@2@@Eigen@@AEBA_J_J@Z</DECORATED>
    <FUNCLINE>698</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>722</LINE>
      <COLUMN>6</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>Ill-defined for-loop:  initial condition does not satisfy test.  Loop body not executed.</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::bind2nd_op&lt;Eigen::internal::scalar_quotient_op&lt;float,float&gt; &gt;,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::bind1st_op&lt;Eigen::internal::scalar_product_op&lt;float,float&gt; &gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::bind2nd_op&lt;Eigen::internal::scalar_difference_op&lt;float,float&gt; &gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const &gt; const ,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::bind2nd_op&lt;Eigen::internal::scalar_difference_op&lt;float,float&gt; &gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const &gt; const &gt; const ,Eigen::MakePointer&gt; const ,Eigen::ThreadPoolDevice&gt;::firstInput</FUNCTION>
    <DECORATED>?firstInput@?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseUnaryOp@U?$bind2nd_op@U?$scalar_quotient_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseUnaryOp@U?$bind1st_op@U?$scalar_product_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@$$CBV?$Tensor@M$00$0A@_J@3@@3@$$CBV?$TensorCwiseUnaryOp@U?$bind2nd_op@U?$scalar_difference_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@@3@$$CBV?$TensorCwiseUnaryOp@U?$bind2nd_op@U?$scalar_difference_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@@3@@3@UMakePointer@3@@Eigen@@UThreadPoolDevice@2@@Eigen@@AEBA_J_J@Z</DECORATED>
    <FUNCLINE>698</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>709</LINE>
      <COLUMN>6</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>Ill-defined for-loop:  initial condition does not satisfy test.  Loop body not executed.</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::bind2nd_op&lt;Eigen::internal::scalar_quotient_op&lt;float,float&gt; &gt;,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::bind1st_op&lt;Eigen::internal::scalar_product_op&lt;float,float&gt; &gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::bind2nd_op&lt;Eigen::internal::scalar_difference_op&lt;float,float&gt; &gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const &gt; const &gt; const ,Eigen::MakePointer&gt; const ,Eigen::ThreadPoolDevice&gt;::firstInput</FUNCTION>
    <DECORATED>?firstInput@?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseUnaryOp@U?$bind2nd_op@U?$scalar_quotient_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseUnaryOp@U?$bind1st_op@U?$scalar_product_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@$$CBV?$Tensor@M$00$0A@_J@3@@3@$$CBV?$TensorCwiseUnaryOp@U?$bind2nd_op@U?$scalar_difference_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@@3@@3@UMakePointer@3@@Eigen@@UThreadPoolDevice@2@@Eigen@@AEBA_J_J@Z</DECORATED>
    <FUNCLINE>698</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>722</LINE>
      <COLUMN>6</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>Ill-defined for-loop:  initial condition does not satisfy test.  Loop body not executed.</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::bind2nd_op&lt;Eigen::internal::scalar_quotient_op&lt;float,float&gt; &gt;,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::bind1st_op&lt;Eigen::internal::scalar_product_op&lt;float,float&gt; &gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::bind2nd_op&lt;Eigen::internal::scalar_difference_op&lt;float,float&gt; &gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const &gt; const &gt; const ,Eigen::MakePointer&gt; const ,Eigen::ThreadPoolDevice&gt;::firstInput</FUNCTION>
    <DECORATED>?firstInput@?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseUnaryOp@U?$bind2nd_op@U?$scalar_quotient_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$TensorCwiseUnaryOp@U?$bind1st_op@U?$scalar_product_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@$$CBV?$Tensor@M$00$0A@_J@3@@3@$$CBV?$TensorCwiseUnaryOp@U?$bind2nd_op@U?$scalar_difference_op@MM@internal@Eigen@@@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@@3@@3@UMakePointer@3@@Eigen@@UThreadPoolDevice@2@@Eigen@@AEBA_J_J@Z</DECORATED>
    <FUNCLINE>698</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContraction.h</FILENAME>
      <LINE>250</LINE>
      <COLUMN>50</COLUMN>
    </SFA>
    <DEFECTCODE>28020</DEFECTCODE>
    <DESCRIPTION>The expression '0&lt;=_Param_(1)&amp;&amp;_Param_(1)&lt;=1-1' is not true at this call.</DESCRIPTION>
    <FUNCTION>Eigen::TensorContractionEvaluatorBase&lt;Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt; &gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorContractionEvaluatorBase@U?$TensorEvaluator@$$CBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$01$0A@_J@Eigen@@$$CBV34@@Eigen@@UThreadPoolDevice@2@@Eigen@@@Eigen@@QEAA@AEBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$01$0A@_J@Eigen@@$$CBV34@@1@AEBUThreadPoolDevice@1@@Z</DECORATED>
    <FUNCLINE>152</FUNCLINE>
    <PATH>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>159</LINE>
        <COLUMN>23</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>154</LINE>
        <COLUMN>16</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>156</LINE>
        <COLUMN>15</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>158</LINE>
        <COLUMN>16</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>159</LINE>
        <COLUMN>16</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>165</LINE>
        <COLUMN>2</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>166</LINE>
        <COLUMN>2</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>167</LINE>
        <COLUMN>2</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>168</LINE>
        <COLUMN>33</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>170</LINE>
        <COLUMN>15</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>170</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>171</LINE>
        <COLUMN>26</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>170</LINE>
        <COLUMN>0</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>170</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>171</LINE>
        <COLUMN>26</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>170</LINE>
        <COLUMN>0</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>170</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>173</LINE>
        <COLUMN>15</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>173</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>174</LINE>
        <COLUMN>27</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>173</LINE>
        <COLUMN>0</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>173</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>174</LINE>
        <COLUMN>27</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>173</LINE>
        <COLUMN>0</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>173</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>177</LINE>
        <COLUMN>15</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>177</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>178</LINE>
        <COLUMN>33</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>179</LINE>
        <COLUMN>34</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>177</LINE>
        <COLUMN>0</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>177</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>199</LINE>
        <COLUMN>13</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>199</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>200</LINE>
        <COLUMN>15</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>200</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>199</LINE>
        <COLUMN>0</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>199</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>210</LINE>
        <COLUMN>2</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>211</LINE>
        <COLUMN>19</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>212</LINE>
        <COLUMN>13</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>212</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>213</LINE>
        <COLUMN>23</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>212</LINE>
        <COLUMN>12</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>212</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>216</LINE>
        <COLUMN>2</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>217</LINE>
        <COLUMN>19</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>218</LINE>
        <COLUMN>13</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>218</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>219</LINE>
        <COLUMN>23</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>218</LINE>
        <COLUMN>12</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>218</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>222</LINE>
        <COLUMN>27</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>223</LINE>
        <COLUMN>27</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>224</LINE>
        <COLUMN>27</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>226</LINE>
        <COLUMN>13</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>227</LINE>
        <COLUMN>13</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>228</LINE>
        <COLUMN>13</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>234</LINE>
        <COLUMN>31</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>235</LINE>
        <COLUMN>8</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>236</LINE>
        <COLUMN>17</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>238</LINE>
        <COLUMN>13</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>238</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>240</LINE>
        <COLUMN>11</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>241</LINE>
        <COLUMN>15</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>241</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>242</LINE>
        <COLUMN>37</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>241</LINE>
        <COLUMN>0</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>241</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>247</LINE>
        <COLUMN>10</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>249</LINE>
        <COLUMN>30</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>250</LINE>
        <COLUMN>50</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>251</LINE>
        <COLUMN>20</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>254</LINE>
        <COLUMN>29</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>258</LINE>
        <COLUMN>19</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>260</LINE>
        <COLUMN>15</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>261</LINE>
        <COLUMN>22</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>238</LINE>
        <COLUMN>0</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>238</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>240</LINE>
        <COLUMN>11</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>241</LINE>
        <COLUMN>15</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>241</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>242</LINE>
        <COLUMN>37</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>241</LINE>
        <COLUMN>0</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>241</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>247</LINE>
        <COLUMN>10</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>249</LINE>
        <COLUMN>30</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>250</LINE>
        <COLUMN>50</COLUMN>
      </SFA>
    </PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContraction.h</FILENAME>
      <LINE>276</LINE>
      <COLUMN>30</COLUMN>
    </SFA>
    <DEFECTCODE>28020</DEFECTCODE>
    <DESCRIPTION>The expression '0&lt;=_Param_(1)&amp;&amp;_Param_(1)&lt;=2-1' is not true at this call.</DESCRIPTION>
    <FUNCTION>Eigen::TensorContractionEvaluatorBase&lt;Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt; &gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorContractionEvaluatorBase@U?$TensorEvaluator@$$CBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$01$0A@_J@Eigen@@$$CBV34@@Eigen@@UThreadPoolDevice@2@@Eigen@@@Eigen@@QEAA@AEBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$01$0A@_J@Eigen@@$$CBV34@@1@AEBUThreadPoolDevice@1@@Z</DECORATED>
    <FUNCLINE>152</FUNCLINE>
    <PATH>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>159</LINE>
        <COLUMN>23</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>154</LINE>
        <COLUMN>16</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>156</LINE>
        <COLUMN>15</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>158</LINE>
        <COLUMN>16</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>159</LINE>
        <COLUMN>16</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>165</LINE>
        <COLUMN>2</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>166</LINE>
        <COLUMN>2</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>167</LINE>
        <COLUMN>2</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>168</LINE>
        <COLUMN>33</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>170</LINE>
        <COLUMN>15</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>170</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>171</LINE>
        <COLUMN>26</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>170</LINE>
        <COLUMN>0</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>170</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>171</LINE>
        <COLUMN>26</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>170</LINE>
        <COLUMN>0</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>170</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>173</LINE>
        <COLUMN>15</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>173</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>174</LINE>
        <COLUMN>27</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>173</LINE>
        <COLUMN>0</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>173</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>174</LINE>
        <COLUMN>27</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>173</LINE>
        <COLUMN>0</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>173</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>177</LINE>
        <COLUMN>15</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>177</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>178</LINE>
        <COLUMN>33</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>179</LINE>
        <COLUMN>34</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>177</LINE>
        <COLUMN>0</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>177</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>199</LINE>
        <COLUMN>13</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>199</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>200</LINE>
        <COLUMN>15</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>200</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>199</LINE>
        <COLUMN>0</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>199</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>210</LINE>
        <COLUMN>2</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>211</LINE>
        <COLUMN>19</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>212</LINE>
        <COLUMN>13</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>212</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>213</LINE>
        <COLUMN>23</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>212</LINE>
        <COLUMN>12</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>212</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>216</LINE>
        <COLUMN>2</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>217</LINE>
        <COLUMN>19</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>218</LINE>
        <COLUMN>13</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>218</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>219</LINE>
        <COLUMN>23</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>218</LINE>
        <COLUMN>12</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>218</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>222</LINE>
        <COLUMN>27</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>223</LINE>
        <COLUMN>27</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>224</LINE>
        <COLUMN>27</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>226</LINE>
        <COLUMN>13</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>227</LINE>
        <COLUMN>13</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>228</LINE>
        <COLUMN>13</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>234</LINE>
        <COLUMN>31</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>235</LINE>
        <COLUMN>8</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>236</LINE>
        <COLUMN>17</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>238</LINE>
        <COLUMN>13</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>238</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>240</LINE>
        <COLUMN>11</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>241</LINE>
        <COLUMN>15</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>241</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>242</LINE>
        <COLUMN>37</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>241</LINE>
        <COLUMN>0</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>241</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>247</LINE>
        <COLUMN>10</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>249</LINE>
        <COLUMN>30</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>250</LINE>
        <COLUMN>50</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>251</LINE>
        <COLUMN>20</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>254</LINE>
        <COLUMN>29</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>258</LINE>
        <COLUMN>19</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>260</LINE>
        <COLUMN>15</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>261</LINE>
        <COLUMN>22</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>238</LINE>
        <COLUMN>0</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>238</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>240</LINE>
        <COLUMN>11</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>241</LINE>
        <COLUMN>15</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>241</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>242</LINE>
        <COLUMN>37</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>241</LINE>
        <COLUMN>0</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>241</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>247</LINE>
        <COLUMN>10</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>249</LINE>
        <COLUMN>30</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>250</LINE>
        <COLUMN>50</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>251</LINE>
        <COLUMN>20</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>254</LINE>
        <COLUMN>29</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>258</LINE>
        <COLUMN>19</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>260</LINE>
        <COLUMN>15</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>261</LINE>
        <COLUMN>22</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>238</LINE>
        <COLUMN>0</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>238</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>265</LINE>
        <COLUMN>19</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>266</LINE>
        <COLUMN>13</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>266</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>267</LINE>
        <COLUMN>11</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>269</LINE>
        <COLUMN>15</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>269</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>270</LINE>
        <COLUMN>38</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>269</LINE>
        <COLUMN>0</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>269</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>275</LINE>
        <COLUMN>10</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>276</LINE>
        <COLUMN>30</COLUMN>
      </SFA>
    </PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContraction.h</FILENAME>
      <LINE>152</LINE>
      <COLUMN>20</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'Eigen::TensorContractionEvaluatorBase&lt;Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt; &gt;::m_left_contracting_strides' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>Eigen::TensorContractionEvaluatorBase&lt;Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt; &gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorContractionEvaluatorBase@U?$TensorEvaluator@$$CBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$01$0A@_J@Eigen@@$$CBV34@@Eigen@@UThreadPoolDevice@2@@Eigen@@@Eigen@@QEAA@AEBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$01$0A@_J@Eigen@@$$CBV34@@1@AEBUThreadPoolDevice@1@@Z</DECORATED>
    <FUNCLINE>152</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>Eigen::TensorContractionEvaluatorBase&lt;Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt; &gt;::m_left_contracting_strides</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContraction.h</FILENAME>
      <LINE>152</LINE>
      <COLUMN>20</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'Eigen::TensorContractionEvaluatorBase&lt;Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt; &gt;::m_right_contracting_strides' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>Eigen::TensorContractionEvaluatorBase&lt;Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt; &gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorContractionEvaluatorBase@U?$TensorEvaluator@$$CBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$01$0A@_J@Eigen@@$$CBV34@@Eigen@@UThreadPoolDevice@2@@Eigen@@@Eigen@@QEAA@AEBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$01$0A@_J@Eigen@@$$CBV34@@1@AEBUThreadPoolDevice@1@@Z</DECORATED>
    <FUNCLINE>152</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>Eigen::TensorContractionEvaluatorBase&lt;Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt; &gt;::m_right_contracting_strides</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContraction.h</FILENAME>
      <LINE>152</LINE>
      <COLUMN>20</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'Eigen::TensorContractionEvaluatorBase&lt;Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt; &gt;::m_left_nocontract_strides' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>Eigen::TensorContractionEvaluatorBase&lt;Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt; &gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorContractionEvaluatorBase@U?$TensorEvaluator@$$CBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$01$0A@_J@Eigen@@$$CBV34@@Eigen@@UThreadPoolDevice@2@@Eigen@@@Eigen@@QEAA@AEBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$01$0A@_J@Eigen@@$$CBV34@@1@AEBUThreadPoolDevice@1@@Z</DECORATED>
    <FUNCLINE>152</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>Eigen::TensorContractionEvaluatorBase&lt;Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt; &gt;::m_left_nocontract_strides</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContraction.h</FILENAME>
      <LINE>152</LINE>
      <COLUMN>20</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'Eigen::TensorContractionEvaluatorBase&lt;Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt; &gt;::m_right_nocontract_strides' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>Eigen::TensorContractionEvaluatorBase&lt;Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt; &gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorContractionEvaluatorBase@U?$TensorEvaluator@$$CBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$01$0A@_J@Eigen@@$$CBV34@@Eigen@@UThreadPoolDevice@2@@Eigen@@@Eigen@@QEAA@AEBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$01$0A@_J@Eigen@@$$CBV34@@1@AEBUThreadPoolDevice@1@@Z</DECORATED>
    <FUNCLINE>152</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>Eigen::TensorContractionEvaluatorBase&lt;Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt; &gt;::m_right_nocontract_strides</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContraction.h</FILENAME>
      <LINE>184</LINE>
      <COLUMN>62</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorContractionEvaluatorBase&lt;Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt; &gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorContractionEvaluatorBase@U?$TensorEvaluator@$$CBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$01$0A@_J@Eigen@@$$CBV34@@Eigen@@UThreadPoolDevice@2@@Eigen@@@Eigen@@QEAA@AEBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$01$0A@_J@Eigen@@$$CBV34@@1@AEBUThreadPoolDevice@1@@Z</DECORATED>
    <FUNCLINE>152</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContraction.h</FILENAME>
      <LINE>184</LINE>
      <COLUMN>58</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorContractionEvaluatorBase&lt;Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt; &gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorContractionEvaluatorBase@U?$TensorEvaluator@$$CBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$01$0A@_J@Eigen@@$$CBV34@@Eigen@@UThreadPoolDevice@2@@Eigen@@@Eigen@@QEAA@AEBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$01$0A@_J@Eigen@@$$CBV34@@1@AEBUThreadPoolDevice@1@@Z</DECORATED>
    <FUNCLINE>152</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContraction.h</FILENAME>
      <LINE>187</LINE>
      <COLUMN>64</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorContractionEvaluatorBase&lt;Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt; &gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorContractionEvaluatorBase@U?$TensorEvaluator@$$CBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$01$0A@_J@Eigen@@$$CBV34@@Eigen@@UThreadPoolDevice@2@@Eigen@@@Eigen@@QEAA@AEBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$01$0A@_J@Eigen@@$$CBV34@@1@AEBUThreadPoolDevice@1@@Z</DECORATED>
    <FUNCLINE>152</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContraction.h</FILENAME>
      <LINE>187</LINE>
      <COLUMN>60</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorContractionEvaluatorBase&lt;Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt; &gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorContractionEvaluatorBase@U?$TensorEvaluator@$$CBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$01$0A@_J@Eigen@@$$CBV34@@Eigen@@UThreadPoolDevice@2@@Eigen@@@Eigen@@QEAA@AEBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$01$0A@_J@Eigen@@$$CBV34@@1@AEBUThreadPoolDevice@1@@Z</DECORATED>
    <FUNCLINE>152</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContraction.h</FILENAME>
      <LINE>192</LINE>
      <COLUMN>77</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorContractionEvaluatorBase&lt;Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt; &gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorContractionEvaluatorBase@U?$TensorEvaluator@$$CBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$01$0A@_J@Eigen@@$$CBV34@@Eigen@@UThreadPoolDevice@2@@Eigen@@@Eigen@@QEAA@AEBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$01$0A@_J@Eigen@@$$CBV34@@1@AEBUThreadPoolDevice@1@@Z</DECORATED>
    <FUNCLINE>152</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContraction.h</FILENAME>
      <LINE>193</LINE>
      <COLUMN>78</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorContractionEvaluatorBase&lt;Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt; &gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorContractionEvaluatorBase@U?$TensorEvaluator@$$CBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$01$0A@_J@Eigen@@$$CBV34@@Eigen@@UThreadPoolDevice@2@@Eigen@@@Eigen@@QEAA@AEBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$01$0A@_J@Eigen@@$$CBV34@@1@AEBUThreadPoolDevice@1@@Z</DECORATED>
    <FUNCLINE>152</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContraction.h</FILENAME>
      <LINE>213</LINE>
      <COLUMN>19</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorContractionEvaluatorBase&lt;Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt; &gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorContractionEvaluatorBase@U?$TensorEvaluator@$$CBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$01$0A@_J@Eigen@@$$CBV34@@Eigen@@UThreadPoolDevice@2@@Eigen@@@Eigen@@QEAA@AEBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$01$0A@_J@Eigen@@$$CBV34@@1@AEBUThreadPoolDevice@1@@Z</DECORATED>
    <FUNCLINE>152</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContraction.h</FILENAME>
      <LINE>219</LINE>
      <COLUMN>19</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorContractionEvaluatorBase&lt;Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt; &gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorContractionEvaluatorBase@U?$TensorEvaluator@$$CBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$01$0A@_J@Eigen@@$$CBV34@@Eigen@@UThreadPoolDevice@2@@Eigen@@@Eigen@@QEAA@AEBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$01$0A@_J@Eigen@@$$CBV34@@1@AEBUThreadPoolDevice@1@@Z</DECORATED>
    <FUNCLINE>152</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContraction.h</FILENAME>
      <LINE>254</LINE>
      <COLUMN>26</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorContractionEvaluatorBase&lt;Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt; &gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorContractionEvaluatorBase@U?$TensorEvaluator@$$CBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$01$0A@_J@Eigen@@$$CBV34@@Eigen@@UThreadPoolDevice@2@@Eigen@@@Eigen@@QEAA@AEBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$01$0A@_J@Eigen@@$$CBV34@@1@AEBUThreadPoolDevice@1@@Z</DECORATED>
    <FUNCLINE>152</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContraction.h</FILENAME>
      <LINE>255</LINE>
      <COLUMN>36</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorContractionEvaluatorBase&lt;Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt; &gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorContractionEvaluatorBase@U?$TensorEvaluator@$$CBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$01$0A@_J@Eigen@@$$CBV34@@Eigen@@UThreadPoolDevice@2@@Eigen@@@Eigen@@QEAA@AEBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$01$0A@_J@Eigen@@$$CBV34@@1@AEBUThreadPoolDevice@1@@Z</DECORATED>
    <FUNCLINE>152</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContraction.h</FILENAME>
      <LINE>277</LINE>
      <COLUMN>26</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorContractionEvaluatorBase&lt;Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt; &gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorContractionEvaluatorBase@U?$TensorEvaluator@$$CBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$01$0A@_J@Eigen@@$$CBV34@@Eigen@@UThreadPoolDevice@2@@Eigen@@@Eigen@@QEAA@AEBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$01$0A@_J@Eigen@@$$CBV34@@1@AEBUThreadPoolDevice@1@@Z</DECORATED>
    <FUNCLINE>152</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContraction.h</FILENAME>
      <LINE>278</LINE>
      <COLUMN>36</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorContractionEvaluatorBase&lt;Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt; &gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorContractionEvaluatorBase@U?$TensorEvaluator@$$CBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$01$0A@_J@Eigen@@$$CBV34@@Eigen@@UThreadPoolDevice@2@@Eigen@@@Eigen@@QEAA@AEBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$01$0A@_J@Eigen@@$$CBV34@@1@AEBUThreadPoolDevice@1@@Z</DECORATED>
    <FUNCLINE>152</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContraction.h</FILENAME>
      <LINE>305</LINE>
      <COLUMN>21</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorContractionEvaluatorBase&lt;Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt; &gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorContractionEvaluatorBase@U?$TensorEvaluator@$$CBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$01$0A@_J@Eigen@@$$CBV34@@Eigen@@UThreadPoolDevice@2@@Eigen@@@Eigen@@QEAA@AEBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$01$0A@_J@Eigen@@$$CBV34@@1@AEBUThreadPoolDevice@1@@Z</DECORATED>
    <FUNCLINE>152</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContraction.h</FILENAME>
      <LINE>312</LINE>
      <COLUMN>44</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorContractionEvaluatorBase&lt;Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt; &gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorContractionEvaluatorBase@U?$TensorEvaluator@$$CBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$01$0A@_J@Eigen@@$$CBV34@@Eigen@@UThreadPoolDevice@2@@Eigen@@@Eigen@@QEAA@AEBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$01$0A@_J@Eigen@@$$CBV34@@1@AEBUThreadPoolDevice@1@@Z</DECORATED>
    <FUNCLINE>152</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>709</LINE>
      <COLUMN>6</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>Ill-defined for-loop:  initial condition does not satisfy test.  Loop body not executed.</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::MakePointer&gt; const ,Eigen::ThreadPoolDevice&gt;::firstInput</FUNCTION>
    <DECORATED>?firstInput@?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@$$CBV43@@3@UMakePointer@3@@Eigen@@UThreadPoolDevice@2@@Eigen@@AEBA_J_J@Z</DECORATED>
    <FUNCLINE>698</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>722</LINE>
      <COLUMN>6</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>Ill-defined for-loop:  initial condition does not satisfy test.  Loop body not executed.</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::MakePointer&gt; const ,Eigen::ThreadPoolDevice&gt;::firstInput</FUNCTION>
    <DECORATED>?firstInput@?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@$$CBV43@@3@UMakePointer@3@@Eigen@@UThreadPoolDevice@2@@Eigen@@AEBA_J_J@Z</DECORATED>
    <FUNCLINE>698</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>709</LINE>
      <COLUMN>6</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>Ill-defined for-loop:  initial condition does not satisfy test.  Loop body not executed.</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::MakePointer&gt; const ,Eigen::ThreadPoolDevice&gt;::firstInput</FUNCTION>
    <DECORATED>?firstInput@?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$Tensor@M$00$0A@_J@3@UMakePointer@3@@Eigen@@UThreadPoolDevice@2@@Eigen@@AEBA_J_J@Z</DECORATED>
    <FUNCLINE>698</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>722</LINE>
      <COLUMN>6</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>Ill-defined for-loop:  initial condition does not satisfy test.  Loop body not executed.</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::MakePointer&gt; const ,Eigen::ThreadPoolDevice&gt;::firstInput</FUNCTION>
    <DECORATED>?firstInput@?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$Tensor@M$00$0A@_J@3@UMakePointer@3@@Eigen@@UThreadPoolDevice@2@@Eigen@@AEBA_J_J@Z</DECORATED>
    <FUNCLINE>698</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>709</LINE>
      <COLUMN>6</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>Ill-defined for-loop:  initial condition does not satisfy test.  Loop body not executed.</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::scalar_square_op&lt;float&gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::MakePointer&gt; const ,Eigen::ThreadPoolDevice&gt;::firstInput</FUNCTION>
    <DECORATED>?firstInput@?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseUnaryOp@U?$scalar_square_op@M@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@UMakePointer@3@@Eigen@@UThreadPoolDevice@2@@Eigen@@AEBA_J_J@Z</DECORATED>
    <FUNCLINE>698</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>722</LINE>
      <COLUMN>6</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>Ill-defined for-loop:  initial condition does not satisfy test.  Loop body not executed.</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorReductionOp&lt;Eigen::internal::SumReducer&lt;float&gt;,Eigen::DimensionList&lt;__int64,1&gt; const ,Eigen::TensorCwiseUnaryOp&lt;Eigen::internal::scalar_square_op&lt;float&gt;,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::MakePointer&gt; const ,Eigen::ThreadPoolDevice&gt;::firstInput</FUNCTION>
    <DECORATED>?firstInput@?$TensorEvaluator@$$CBV?$TensorReductionOp@U?$SumReducer@M@internal@Eigen@@$$CBU?$DimensionList@_J$00@3@$$CBV?$TensorCwiseUnaryOp@U?$scalar_square_op@M@internal@Eigen@@$$CBV?$Tensor@M$00$0A@_J@3@@3@UMakePointer@3@@Eigen@@UThreadPoolDevice@2@@Eigen@@AEBA_J_J@Z</DECORATED>
    <FUNCLINE>698</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>Tensor.h</FILENAME>
      <LINE>481</LINE>
      <COLUMN>6</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>Ill-defined for-loop:  initial condition does not satisfy test.  Loop body not executed.</DESCRIPTION>
    <FUNCTION>Eigen::Tensor&lt;float,0,0,__int64&gt;::resize</FUNCTION>
    <DECORATED>??$resize@$S@?$Tensor@M$0A@$0A@_J@Eigen@@QEAAXAEBU?$Sizes@$S@1@@Z</DECORATED>
    <FUNCLINE>479</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>Tensor.h</FILENAME>
      <LINE>481</LINE>
      <COLUMN>6</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>Ill-defined for-loop:  initial condition does not satisfy test.  Loop body not executed.</DESCRIPTION>
    <FUNCTION>Eigen::Tensor&lt;__int64,0,0,__int64&gt;::resize</FUNCTION>
    <DECORATED>??$resize@$S@?$Tensor@_J$0A@$0A@_J@Eigen@@QEAAXAEBU?$Sizes@$S@1@@Z</DECORATED>
    <FUNCLINE>479</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorReduction.h</FILENAME>
      <LINE>69</LINE>
      <COLUMN>36</COLUMN>
    </SFA>
    <DEFECTCODE>28020</DEFECTCODE>
    <DESCRIPTION>The expression '0&lt;=_Param_(1)&amp;&amp;_Param_(1)&lt;=1-1' is not true at this call.</DESCRIPTION>
    <FUNCTION>Eigen::internal::DimInitializer&lt;Eigen::DSizes&lt;__int64,1&gt; &gt;::run</FUNCTION>
    <DECORATED>??$run@U?$DSizes@_J$01@Eigen@@V?$array@_J$00@std@@@?$DimInitializer@U?$DSizes@_J$00@Eigen@@@internal@Eigen@@SAXAEBU?$DSizes@_J$01@2@AEBV?$array@_N$01@std@@PEAU?$DSizes@_J$00@2@PEAV?$array@_J$00@5@@Z</DECORATED>
    <FUNCLINE>58</FUNCLINE>
    <PATH>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorreduction.h</FILENAME>
        <LINE>61</LINE>
        <COLUMN>14</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorreduction.h</FILENAME>
        <LINE>62</LINE>
        <COLUMN>8</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorreduction.h</FILENAME>
        <LINE>63</LINE>
        <COLUMN>8</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorreduction.h</FILENAME>
        <LINE>64</LINE>
        <COLUMN>13</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorreduction.h</FILENAME>
        <LINE>64</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorreduction.h</FILENAME>
        <LINE>65</LINE>
        <COLUMN>19</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorreduction.h</FILENAME>
        <LINE>69</LINE>
        <COLUMN>36</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorreduction.h</FILENAME>
        <LINE>70</LINE>
        <COLUMN>8</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorreduction.h</FILENAME>
        <LINE>64</LINE>
        <COLUMN>17</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorreduction.h</FILENAME>
        <LINE>64</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorreduction.h</FILENAME>
        <LINE>65</LINE>
        <COLUMN>19</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorreduction.h</FILENAME>
        <LINE>69</LINE>
        <COLUMN>36</COLUMN>
      </SFA>
    </PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContractionThreadPool.h</FILENAME>
      <LINE>294</LINE>
      <COLUMN>4</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;::Context&lt;Eigen::internal::gemm_pack_lhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,8,4,0,0,0&gt;,Eigen::internal::gemm_pack_rhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,4,0,0,0&gt;,Eigen::internal::gebp_kernel&lt;float,float,__int64,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt;,8,4,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt; &gt;::state_kernel_' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;::Context&lt;Eigen::internal::gemm_pack_lhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,8,4,0,0,0&gt;,Eigen::internal::gemm_pack_rhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,4,0,0,0&gt;,Eigen::internal::gebp_kernel&lt;float,float,__int64,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt;,8,4,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt; &gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$Context@U?$gemm_pack_lhs@M_JV?$TensorContractionSubMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0A@$0A@@internal@Eigen@@$07$03$0A@$0A@$0A@@internal@Eigen@@U?$gemm_pack_rhs@M_JV?$TensorContractionSubMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0A@$0A@@internal@Eigen@@$03$0A@$0A@$0A@@23@U?$gebp_kernel@MM_JV?$blas_data_mapper@M_J$0A@$0A@$00@internal@Eigen@@$07$03$0A@$0A@@23@V?$TensorContractionInputMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0A@$0A@@23@V?$TensorContractionInputMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0A@$0A@@23@V?$blas_data_mapper@M_J$0A@$0A@$00@23@@?$TensorEvaluator@$$CBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$01$0A@_J@Eigen@@$$CBV34@@Eigen@@UThreadPoolDevice@2@@Eigen@@QEAA@AEBUThreadPoolDevice@2@HAEAV?$TensorContractionInputMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0A@$0A@@internal@2@AEAV?$TensorContractionInputMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0A@$0A@@52@PEAM_J444444444444_N5@Z</DECORATED>
    <FUNCLINE>294</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;::Context&lt;Eigen::internal::gemm_pack_lhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,8,4,0,0,0&gt;,Eigen::internal::gemm_pack_rhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,4,0,0,0&gt;,Eigen::internal::gebp_kernel&lt;float,float,__int64,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt;,8,4,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt; &gt;::state_kernel_</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContractionThreadPool.h</FILENAME>
      <LINE>294</LINE>
      <COLUMN>4</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;::Context&lt;Eigen::internal::gemm_pack_lhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,8,4,0,0,0&gt;,Eigen::internal::gemm_pack_rhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,4,0,0,0&gt;,Eigen::internal::gebp_kernel&lt;float,float,__int64,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt;,8,4,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt; &gt;::pad_' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;::Context&lt;Eigen::internal::gemm_pack_lhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,8,4,0,0,0&gt;,Eigen::internal::gemm_pack_rhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,4,0,0,0&gt;,Eigen::internal::gebp_kernel&lt;float,float,__int64,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt;,8,4,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt; &gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$Context@U?$gemm_pack_lhs@M_JV?$TensorContractionSubMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0A@$0A@@internal@Eigen@@$07$03$0A@$0A@$0A@@internal@Eigen@@U?$gemm_pack_rhs@M_JV?$TensorContractionSubMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0A@$0A@@internal@Eigen@@$03$0A@$0A@$0A@@23@U?$gebp_kernel@MM_JV?$blas_data_mapper@M_J$0A@$0A@$00@internal@Eigen@@$07$03$0A@$0A@@23@V?$TensorContractionInputMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0A@$0A@@23@V?$TensorContractionInputMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0A@$0A@@23@V?$blas_data_mapper@M_J$0A@$0A@$00@23@@?$TensorEvaluator@$$CBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$01$0A@_J@Eigen@@$$CBV34@@Eigen@@UThreadPoolDevice@2@@Eigen@@QEAA@AEBUThreadPoolDevice@2@HAEAV?$TensorContractionInputMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0A@$0A@@internal@2@AEAV?$TensorContractionInputMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0A@$0A@@52@PEAM_J444444444444_N5@Z</DECORATED>
    <FUNCLINE>294</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;::Context&lt;Eigen::internal::gemm_pack_lhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,8,4,0,0,0&gt;,Eigen::internal::gemm_pack_rhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,4,0,0,0&gt;,Eigen::internal::gebp_kernel&lt;float,float,__int64,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt;,8,4,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt; &gt;::pad_</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContractionThreadPool.h</FILENAME>
      <LINE>294</LINE>
      <COLUMN>4</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;::Context&lt;Eigen::internal::gemm_pack_lhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,8,4,0,0,0&gt;,Eigen::internal::gemm_pack_rhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,1,0&gt;,4,0,0,0&gt;,Eigen::internal::gebp_kernel&lt;float,float,__int64,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt;,8,4,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,1,0&gt;,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt; &gt;::state_kernel_' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;::Context&lt;Eigen::internal::gemm_pack_lhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,8,4,0,0,0&gt;,Eigen::internal::gemm_pack_rhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,1,0&gt;,4,0,0,0&gt;,Eigen::internal::gebp_kernel&lt;float,float,__int64,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt;,8,4,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,1,0&gt;,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt; &gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$Context@U?$gemm_pack_lhs@M_JV?$TensorContractionSubMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0A@$0A@@internal@Eigen@@$07$03$0A@$0A@$0A@@internal@Eigen@@U?$gemm_pack_rhs@M_JV?$TensorContractionSubMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$00$0A@@internal@Eigen@@$03$0A@$0A@$0A@@23@U?$gebp_kernel@MM_JV?$blas_data_mapper@M_J$0A@$0A@$00@internal@Eigen@@$07$03$0A@$0A@@23@V?$TensorContractionInputMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0A@$0A@@23@V?$TensorContractionInputMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$00$0A@@23@V?$blas_data_mapper@M_J$0A@$0A@$00@23@@?$TensorEvaluator@$$CBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$01$0A@_J@Eigen@@$$CBV34@@Eigen@@UThreadPoolDevice@2@@Eigen@@QEAA@AEBUThreadPoolDevice@2@HAEAV?$TensorContractionInputMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0A@$0A@@internal@2@AEAV?$TensorContractionInputMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$00$0A@@52@PEAM_J444444444444_N5@Z</DECORATED>
    <FUNCLINE>294</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;::Context&lt;Eigen::internal::gemm_pack_lhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,8,4,0,0,0&gt;,Eigen::internal::gemm_pack_rhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,1,0&gt;,4,0,0,0&gt;,Eigen::internal::gebp_kernel&lt;float,float,__int64,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt;,8,4,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,1,0&gt;,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt; &gt;::state_kernel_</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContractionThreadPool.h</FILENAME>
      <LINE>294</LINE>
      <COLUMN>4</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;::Context&lt;Eigen::internal::gemm_pack_lhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,8,4,0,0,0&gt;,Eigen::internal::gemm_pack_rhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,1,0&gt;,4,0,0,0&gt;,Eigen::internal::gebp_kernel&lt;float,float,__int64,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt;,8,4,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,1,0&gt;,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt; &gt;::pad_' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;::Context&lt;Eigen::internal::gemm_pack_lhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,8,4,0,0,0&gt;,Eigen::internal::gemm_pack_rhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,1,0&gt;,4,0,0,0&gt;,Eigen::internal::gebp_kernel&lt;float,float,__int64,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt;,8,4,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,1,0&gt;,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt; &gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$Context@U?$gemm_pack_lhs@M_JV?$TensorContractionSubMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0A@$0A@@internal@Eigen@@$07$03$0A@$0A@$0A@@internal@Eigen@@U?$gemm_pack_rhs@M_JV?$TensorContractionSubMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$00$0A@@internal@Eigen@@$03$0A@$0A@$0A@@23@U?$gebp_kernel@MM_JV?$blas_data_mapper@M_J$0A@$0A@$00@internal@Eigen@@$07$03$0A@$0A@@23@V?$TensorContractionInputMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0A@$0A@@23@V?$TensorContractionInputMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$00$0A@@23@V?$blas_data_mapper@M_J$0A@$0A@$00@23@@?$TensorEvaluator@$$CBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$01$0A@_J@Eigen@@$$CBV34@@Eigen@@UThreadPoolDevice@2@@Eigen@@QEAA@AEBUThreadPoolDevice@2@HAEAV?$TensorContractionInputMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0A@$0A@@internal@2@AEAV?$TensorContractionInputMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$00$0A@@52@PEAM_J444444444444_N5@Z</DECORATED>
    <FUNCLINE>294</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;::Context&lt;Eigen::internal::gemm_pack_lhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,8,4,0,0,0&gt;,Eigen::internal::gemm_pack_rhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,1,0&gt;,4,0,0,0&gt;,Eigen::internal::gebp_kernel&lt;float,float,__int64,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt;,8,4,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,1,0&gt;,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt; &gt;::pad_</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContractionThreadPool.h</FILENAME>
      <LINE>294</LINE>
      <COLUMN>4</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;::Context&lt;Eigen::internal::gemm_pack_lhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,8,4,0,0,0&gt;,Eigen::internal::gemm_pack_rhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,4,0,0,0&gt;,Eigen::internal::gebp_kernel&lt;float,float,__int64,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt;,8,4,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt; &gt;::state_kernel_' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;::Context&lt;Eigen::internal::gemm_pack_lhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,8,4,0,0,0&gt;,Eigen::internal::gemm_pack_rhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,4,0,0,0&gt;,Eigen::internal::gebp_kernel&lt;float,float,__int64,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt;,8,4,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt; &gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$Context@U?$gemm_pack_lhs@M_JV?$TensorContractionSubMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0A@$0A@@internal@Eigen@@$07$03$0A@$0A@$0A@@internal@Eigen@@U?$gemm_pack_rhs@M_JV?$TensorContractionSubMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0A@$0A@@internal@Eigen@@$03$0A@$0A@$0A@@23@U?$gebp_kernel@MM_JV?$blas_data_mapper@M_J$0A@$0A@$00@internal@Eigen@@$07$03$0A@$0A@@23@V?$TensorContractionInputMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0A@$0A@@23@V?$TensorContractionInputMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0A@$0A@@23@V?$blas_data_mapper@M_J$0A@$0A@$00@23@@?$TensorEvaluator@$$CBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$01$0A@_J@Eigen@@$$CBV34@@Eigen@@UThreadPoolDevice@2@@Eigen@@QEAA@AEBUThreadPoolDevice@2@HAEAV?$TensorContractionInputMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0A@$0A@@internal@2@AEAV?$TensorContractionInputMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0A@$0A@@52@PEAM_J444444444444_N5@Z</DECORATED>
    <FUNCLINE>294</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;::Context&lt;Eigen::internal::gemm_pack_lhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,8,4,0,0,0&gt;,Eigen::internal::gemm_pack_rhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,4,0,0,0&gt;,Eigen::internal::gebp_kernel&lt;float,float,__int64,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt;,8,4,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt; &gt;::state_kernel_</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContractionThreadPool.h</FILENAME>
      <LINE>294</LINE>
      <COLUMN>4</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;::Context&lt;Eigen::internal::gemm_pack_lhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,8,4,0,0,0&gt;,Eigen::internal::gemm_pack_rhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,4,0,0,0&gt;,Eigen::internal::gebp_kernel&lt;float,float,__int64,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt;,8,4,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt; &gt;::pad_' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;::Context&lt;Eigen::internal::gemm_pack_lhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,8,4,0,0,0&gt;,Eigen::internal::gemm_pack_rhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,4,0,0,0&gt;,Eigen::internal::gebp_kernel&lt;float,float,__int64,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt;,8,4,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt; &gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$Context@U?$gemm_pack_lhs@M_JV?$TensorContractionSubMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0A@$0A@@internal@Eigen@@$07$03$0A@$0A@$0A@@internal@Eigen@@U?$gemm_pack_rhs@M_JV?$TensorContractionSubMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0A@$0A@@internal@Eigen@@$03$0A@$0A@$0A@@23@U?$gebp_kernel@MM_JV?$blas_data_mapper@M_J$0A@$0A@$00@internal@Eigen@@$07$03$0A@$0A@@23@V?$TensorContractionInputMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0A@$0A@@23@V?$TensorContractionInputMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0A@$0A@@23@V?$blas_data_mapper@M_J$0A@$0A@$00@23@@?$TensorEvaluator@$$CBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$01$0A@_J@Eigen@@$$CBV34@@Eigen@@UThreadPoolDevice@2@@Eigen@@QEAA@AEBUThreadPoolDevice@2@HAEAV?$TensorContractionInputMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0A@$0A@@internal@2@AEAV?$TensorContractionInputMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0A@$0A@@52@PEAM_J444444444444_N5@Z</DECORATED>
    <FUNCLINE>294</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;::Context&lt;Eigen::internal::gemm_pack_lhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,8,4,0,0,0&gt;,Eigen::internal::gemm_pack_rhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,4,0,0,0&gt;,Eigen::internal::gebp_kernel&lt;float,float,__int64,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt;,8,4,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt; &gt;::pad_</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContractionThreadPool.h</FILENAME>
      <LINE>294</LINE>
      <COLUMN>4</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;::Context&lt;Eigen::internal::gemm_pack_lhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,8,4,0,0,0&gt;,Eigen::internal::gemm_pack_rhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,1,0&gt;,4,0,0,0&gt;,Eigen::internal::gebp_kernel&lt;float,float,__int64,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt;,8,4,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,1,0&gt;,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt; &gt;::state_kernel_' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;::Context&lt;Eigen::internal::gemm_pack_lhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,8,4,0,0,0&gt;,Eigen::internal::gemm_pack_rhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,1,0&gt;,4,0,0,0&gt;,Eigen::internal::gebp_kernel&lt;float,float,__int64,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt;,8,4,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,1,0&gt;,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt; &gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$Context@U?$gemm_pack_lhs@M_JV?$TensorContractionSubMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0A@$0A@@internal@Eigen@@$07$03$0A@$0A@$0A@@internal@Eigen@@U?$gemm_pack_rhs@M_JV?$TensorContractionSubMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$00$0A@@internal@Eigen@@$03$0A@$0A@$0A@@23@U?$gebp_kernel@MM_JV?$blas_data_mapper@M_J$0A@$0A@$00@internal@Eigen@@$07$03$0A@$0A@@23@V?$TensorContractionInputMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0A@$0A@@23@V?$TensorContractionInputMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$00$0A@@23@V?$blas_data_mapper@M_J$0A@$0A@$00@23@@?$TensorEvaluator@$$CBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$01$0A@_J@Eigen@@$$CBV34@@Eigen@@UThreadPoolDevice@2@@Eigen@@QEAA@AEBUThreadPoolDevice@2@HAEAV?$TensorContractionInputMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0A@$0A@@internal@2@AEAV?$TensorContractionInputMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$00$0A@@52@PEAM_J444444444444_N5@Z</DECORATED>
    <FUNCLINE>294</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;::Context&lt;Eigen::internal::gemm_pack_lhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,8,4,0,0,0&gt;,Eigen::internal::gemm_pack_rhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,1,0&gt;,4,0,0,0&gt;,Eigen::internal::gebp_kernel&lt;float,float,__int64,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt;,8,4,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,1,0&gt;,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt; &gt;::state_kernel_</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContractionThreadPool.h</FILENAME>
      <LINE>294</LINE>
      <COLUMN>4</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;::Context&lt;Eigen::internal::gemm_pack_lhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,8,4,0,0,0&gt;,Eigen::internal::gemm_pack_rhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,1,0&gt;,4,0,0,0&gt;,Eigen::internal::gebp_kernel&lt;float,float,__int64,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt;,8,4,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,1,0&gt;,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt; &gt;::pad_' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;::Context&lt;Eigen::internal::gemm_pack_lhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,8,4,0,0,0&gt;,Eigen::internal::gemm_pack_rhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,1,0&gt;,4,0,0,0&gt;,Eigen::internal::gebp_kernel&lt;float,float,__int64,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt;,8,4,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,1,0&gt;,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt; &gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$Context@U?$gemm_pack_lhs@M_JV?$TensorContractionSubMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0A@$0A@@internal@Eigen@@$07$03$0A@$0A@$0A@@internal@Eigen@@U?$gemm_pack_rhs@M_JV?$TensorContractionSubMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$00$0A@@internal@Eigen@@$03$0A@$0A@$0A@@23@U?$gebp_kernel@MM_JV?$blas_data_mapper@M_J$0A@$0A@$00@internal@Eigen@@$07$03$0A@$0A@@23@V?$TensorContractionInputMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0A@$0A@@23@V?$TensorContractionInputMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$00$0A@@23@V?$blas_data_mapper@M_J$0A@$0A@$00@23@@?$TensorEvaluator@$$CBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$01$0A@_J@Eigen@@$$CBV34@@Eigen@@UThreadPoolDevice@2@@Eigen@@QEAA@AEBUThreadPoolDevice@2@HAEAV?$TensorContractionInputMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0A@$0A@@internal@2@AEAV?$TensorContractionInputMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$00$0A@@52@PEAM_J444444444444_N5@Z</DECORATED>
    <FUNCLINE>294</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;::Context&lt;Eigen::internal::gemm_pack_lhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,8,4,0,0,0&gt;,Eigen::internal::gemm_pack_rhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,1,0&gt;,4,0,0,0&gt;,Eigen::internal::gebp_kernel&lt;float,float,__int64,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt;,8,4,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,1,0&gt;,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt; &gt;::pad_</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContractionThreadPool.h</FILENAME>
      <LINE>294</LINE>
      <COLUMN>4</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;::Context&lt;Eigen::internal::gemm_pack_lhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,8,4,0,0,0&gt;,Eigen::internal::gemm_pack_rhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,4,0,0,0&gt;,Eigen::internal::gebp_kernel&lt;float,float,__int64,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt;,8,4,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt; &gt;::state_kernel_' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;::Context&lt;Eigen::internal::gemm_pack_lhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,8,4,0,0,0&gt;,Eigen::internal::gemm_pack_rhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,4,0,0,0&gt;,Eigen::internal::gebp_kernel&lt;float,float,__int64,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt;,8,4,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt; &gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$Context@U?$gemm_pack_lhs@M_JV?$TensorContractionSubMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0A@$0A@@internal@Eigen@@$07$03$0A@$0A@$0A@@internal@Eigen@@U?$gemm_pack_rhs@M_JV?$TensorContractionSubMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0A@$0A@@internal@Eigen@@$03$0A@$0A@$0A@@23@U?$gebp_kernel@MM_JV?$blas_data_mapper@M_J$0A@$0A@$00@internal@Eigen@@$07$03$0A@$0A@@23@V?$TensorContractionInputMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0A@$0A@@23@V?$TensorContractionInputMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0A@$0A@@23@V?$blas_data_mapper@M_J$0A@$0A@$00@23@@?$TensorEvaluator@$$CBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$01$0A@_J@Eigen@@$$CBV34@@Eigen@@UThreadPoolDevice@2@@Eigen@@QEAA@AEBUThreadPoolDevice@2@HAEAV?$TensorContractionInputMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0A@$0A@@internal@2@AEAV?$TensorContractionInputMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0A@$0A@@52@PEAM_J444444444444_N5@Z</DECORATED>
    <FUNCLINE>294</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;::Context&lt;Eigen::internal::gemm_pack_lhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,8,4,0,0,0&gt;,Eigen::internal::gemm_pack_rhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,4,0,0,0&gt;,Eigen::internal::gebp_kernel&lt;float,float,__int64,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt;,8,4,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt; &gt;::state_kernel_</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContractionThreadPool.h</FILENAME>
      <LINE>294</LINE>
      <COLUMN>4</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;::Context&lt;Eigen::internal::gemm_pack_lhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,8,4,0,0,0&gt;,Eigen::internal::gemm_pack_rhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,4,0,0,0&gt;,Eigen::internal::gebp_kernel&lt;float,float,__int64,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt;,8,4,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt; &gt;::pad_' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;::Context&lt;Eigen::internal::gemm_pack_lhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,8,4,0,0,0&gt;,Eigen::internal::gemm_pack_rhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,4,0,0,0&gt;,Eigen::internal::gebp_kernel&lt;float,float,__int64,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt;,8,4,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt; &gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$Context@U?$gemm_pack_lhs@M_JV?$TensorContractionSubMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0A@$0A@@internal@Eigen@@$07$03$0A@$0A@$0A@@internal@Eigen@@U?$gemm_pack_rhs@M_JV?$TensorContractionSubMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0A@$0A@@internal@Eigen@@$03$0A@$0A@$0A@@23@U?$gebp_kernel@MM_JV?$blas_data_mapper@M_J$0A@$0A@$00@internal@Eigen@@$07$03$0A@$0A@@23@V?$TensorContractionInputMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0A@$0A@@23@V?$TensorContractionInputMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0A@$0A@@23@V?$blas_data_mapper@M_J$0A@$0A@$00@23@@?$TensorEvaluator@$$CBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$01$0A@_J@Eigen@@$$CBV34@@Eigen@@UThreadPoolDevice@2@@Eigen@@QEAA@AEBUThreadPoolDevice@2@HAEAV?$TensorContractionInputMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0A@$0A@@internal@2@AEAV?$TensorContractionInputMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0A@$0A@@52@PEAM_J444444444444_N5@Z</DECORATED>
    <FUNCLINE>294</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;::Context&lt;Eigen::internal::gemm_pack_lhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,8,4,0,0,0&gt;,Eigen::internal::gemm_pack_rhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,4,0,0,0&gt;,Eigen::internal::gebp_kernel&lt;float,float,__int64,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt;,8,4,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt; &gt;::pad_</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContractionThreadPool.h</FILENAME>
      <LINE>294</LINE>
      <COLUMN>4</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;::Context&lt;Eigen::internal::gemm_pack_lhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,8,4,0,0,0&gt;,Eigen::internal::gemm_pack_rhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,1,0&gt;,4,0,0,0&gt;,Eigen::internal::gebp_kernel&lt;float,float,__int64,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt;,8,4,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,1,0&gt;,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt; &gt;::state_kernel_' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;::Context&lt;Eigen::internal::gemm_pack_lhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,8,4,0,0,0&gt;,Eigen::internal::gemm_pack_rhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,1,0&gt;,4,0,0,0&gt;,Eigen::internal::gebp_kernel&lt;float,float,__int64,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt;,8,4,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,1,0&gt;,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt; &gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$Context@U?$gemm_pack_lhs@M_JV?$TensorContractionSubMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0A@$0A@@internal@Eigen@@$07$03$0A@$0A@$0A@@internal@Eigen@@U?$gemm_pack_rhs@M_JV?$TensorContractionSubMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$00$0A@@internal@Eigen@@$03$0A@$0A@$0A@@23@U?$gebp_kernel@MM_JV?$blas_data_mapper@M_J$0A@$0A@$00@internal@Eigen@@$07$03$0A@$0A@@23@V?$TensorContractionInputMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0A@$0A@@23@V?$TensorContractionInputMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$00$0A@@23@V?$blas_data_mapper@M_J$0A@$0A@$00@23@@?$TensorEvaluator@$$CBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$01$0A@_J@Eigen@@$$CBV34@@Eigen@@UThreadPoolDevice@2@@Eigen@@QEAA@AEBUThreadPoolDevice@2@HAEAV?$TensorContractionInputMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0A@$0A@@internal@2@AEAV?$TensorContractionInputMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$00$0A@@52@PEAM_J444444444444_N5@Z</DECORATED>
    <FUNCLINE>294</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;::Context&lt;Eigen::internal::gemm_pack_lhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,8,4,0,0,0&gt;,Eigen::internal::gemm_pack_rhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,1,0&gt;,4,0,0,0&gt;,Eigen::internal::gebp_kernel&lt;float,float,__int64,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt;,8,4,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,1,0&gt;,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt; &gt;::state_kernel_</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContractionThreadPool.h</FILENAME>
      <LINE>294</LINE>
      <COLUMN>4</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;::Context&lt;Eigen::internal::gemm_pack_lhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,8,4,0,0,0&gt;,Eigen::internal::gemm_pack_rhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,1,0&gt;,4,0,0,0&gt;,Eigen::internal::gebp_kernel&lt;float,float,__int64,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt;,8,4,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,1,0&gt;,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt; &gt;::pad_' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;::Context&lt;Eigen::internal::gemm_pack_lhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,8,4,0,0,0&gt;,Eigen::internal::gemm_pack_rhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,1,0&gt;,4,0,0,0&gt;,Eigen::internal::gebp_kernel&lt;float,float,__int64,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt;,8,4,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,1,0&gt;,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt; &gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$Context@U?$gemm_pack_lhs@M_JV?$TensorContractionSubMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0A@$0A@@internal@Eigen@@$07$03$0A@$0A@$0A@@internal@Eigen@@U?$gemm_pack_rhs@M_JV?$TensorContractionSubMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$00$0A@@internal@Eigen@@$03$0A@$0A@$0A@@23@U?$gebp_kernel@MM_JV?$blas_data_mapper@M_J$0A@$0A@$00@internal@Eigen@@$07$03$0A@$0A@@23@V?$TensorContractionInputMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0A@$0A@@23@V?$TensorContractionInputMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$00$0A@@23@V?$blas_data_mapper@M_J$0A@$0A@$00@23@@?$TensorEvaluator@$$CBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$01$0A@_J@Eigen@@$$CBV34@@Eigen@@UThreadPoolDevice@2@@Eigen@@QEAA@AEBUThreadPoolDevice@2@HAEAV?$TensorContractionInputMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0A@$0A@@internal@2@AEAV?$TensorContractionInputMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$00$0A@@52@PEAM_J444444444444_N5@Z</DECORATED>
    <FUNCLINE>294</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;::Context&lt;Eigen::internal::gemm_pack_lhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,8,4,0,0,0&gt;,Eigen::internal::gemm_pack_rhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,1,0&gt;,4,0,0,0&gt;,Eigen::internal::gebp_kernel&lt;float,float,__int64,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt;,8,4,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,1,0&gt;,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt; &gt;::pad_</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContractionThreadPool.h</FILENAME>
      <LINE>294</LINE>
      <COLUMN>4</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;::Context&lt;Eigen::internal::gemm_pack_lhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,8,4,0,0,0&gt;,Eigen::internal::gemm_pack_rhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,4,0,0,0&gt;,Eigen::internal::gebp_kernel&lt;float,float,__int64,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt;,8,4,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt; &gt;::state_kernel_' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;::Context&lt;Eigen::internal::gemm_pack_lhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,8,4,0,0,0&gt;,Eigen::internal::gemm_pack_rhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,4,0,0,0&gt;,Eigen::internal::gebp_kernel&lt;float,float,__int64,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt;,8,4,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt; &gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$Context@U?$gemm_pack_lhs@M_JV?$TensorContractionSubMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0A@$0A@@internal@Eigen@@$07$03$0A@$0A@$0A@@internal@Eigen@@U?$gemm_pack_rhs@M_JV?$TensorContractionSubMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0A@$0A@@internal@Eigen@@$03$0A@$0A@$0A@@23@U?$gebp_kernel@MM_JV?$blas_data_mapper@M_J$0A@$0A@$00@internal@Eigen@@$07$03$0A@$0A@@23@V?$TensorContractionInputMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0A@$0A@@23@V?$TensorContractionInputMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0A@$0A@@23@V?$blas_data_mapper@M_J$0A@$0A@$00@23@@?$TensorEvaluator@$$CBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$01$0A@_J@Eigen@@$$CBV34@@Eigen@@UThreadPoolDevice@2@@Eigen@@QEAA@AEBUThreadPoolDevice@2@HAEAV?$TensorContractionInputMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0A@$0A@@internal@2@AEAV?$TensorContractionInputMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0A@$0A@@52@PEAM_J444444444444_N5@Z</DECORATED>
    <FUNCLINE>294</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;::Context&lt;Eigen::internal::gemm_pack_lhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,8,4,0,0,0&gt;,Eigen::internal::gemm_pack_rhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,4,0,0,0&gt;,Eigen::internal::gebp_kernel&lt;float,float,__int64,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt;,8,4,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt; &gt;::state_kernel_</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContractionThreadPool.h</FILENAME>
      <LINE>294</LINE>
      <COLUMN>4</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;::Context&lt;Eigen::internal::gemm_pack_lhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,8,4,0,0,0&gt;,Eigen::internal::gemm_pack_rhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,4,0,0,0&gt;,Eigen::internal::gebp_kernel&lt;float,float,__int64,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt;,8,4,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt; &gt;::pad_' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;::Context&lt;Eigen::internal::gemm_pack_lhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,8,4,0,0,0&gt;,Eigen::internal::gemm_pack_rhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,4,0,0,0&gt;,Eigen::internal::gebp_kernel&lt;float,float,__int64,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt;,8,4,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt; &gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$Context@U?$gemm_pack_lhs@M_JV?$TensorContractionSubMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0A@$0A@@internal@Eigen@@$07$03$0A@$0A@$0A@@internal@Eigen@@U?$gemm_pack_rhs@M_JV?$TensorContractionSubMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0A@$0A@@internal@Eigen@@$03$0A@$0A@$0A@@23@U?$gebp_kernel@MM_JV?$blas_data_mapper@M_J$0A@$0A@$00@internal@Eigen@@$07$03$0A@$0A@@23@V?$TensorContractionInputMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0A@$0A@@23@V?$TensorContractionInputMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0A@$0A@@23@V?$blas_data_mapper@M_J$0A@$0A@$00@23@@?$TensorEvaluator@$$CBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$01$0A@_J@Eigen@@$$CBV34@@Eigen@@UThreadPoolDevice@2@@Eigen@@QEAA@AEBUThreadPoolDevice@2@HAEAV?$TensorContractionInputMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0A@$0A@@internal@2@AEAV?$TensorContractionInputMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0A@$0A@@52@PEAM_J444444444444_N5@Z</DECORATED>
    <FUNCLINE>294</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;::Context&lt;Eigen::internal::gemm_pack_lhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,8,4,0,0,0&gt;,Eigen::internal::gemm_pack_rhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,4,0,0,0&gt;,Eigen::internal::gebp_kernel&lt;float,float,__int64,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt;,8,4,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt; &gt;::pad_</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContractionThreadPool.h</FILENAME>
      <LINE>294</LINE>
      <COLUMN>4</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;::Context&lt;Eigen::internal::gemm_pack_lhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,8,4,0,0,0&gt;,Eigen::internal::gemm_pack_rhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,1,0&gt;,4,0,0,0&gt;,Eigen::internal::gebp_kernel&lt;float,float,__int64,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt;,8,4,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,1,0&gt;,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt; &gt;::state_kernel_' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;::Context&lt;Eigen::internal::gemm_pack_lhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,8,4,0,0,0&gt;,Eigen::internal::gemm_pack_rhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,1,0&gt;,4,0,0,0&gt;,Eigen::internal::gebp_kernel&lt;float,float,__int64,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt;,8,4,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,1,0&gt;,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt; &gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$Context@U?$gemm_pack_lhs@M_JV?$TensorContractionSubMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0A@$0A@@internal@Eigen@@$07$03$0A@$0A@$0A@@internal@Eigen@@U?$gemm_pack_rhs@M_JV?$TensorContractionSubMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$00$0A@@internal@Eigen@@$03$0A@$0A@$0A@@23@U?$gebp_kernel@MM_JV?$blas_data_mapper@M_J$0A@$0A@$00@internal@Eigen@@$07$03$0A@$0A@@23@V?$TensorContractionInputMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0A@$0A@@23@V?$TensorContractionInputMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$00$0A@@23@V?$blas_data_mapper@M_J$0A@$0A@$00@23@@?$TensorEvaluator@$$CBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$01$0A@_J@Eigen@@$$CBV34@@Eigen@@UThreadPoolDevice@2@@Eigen@@QEAA@AEBUThreadPoolDevice@2@HAEAV?$TensorContractionInputMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0A@$0A@@internal@2@AEAV?$TensorContractionInputMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$00$0A@@52@PEAM_J444444444444_N5@Z</DECORATED>
    <FUNCLINE>294</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;::Context&lt;Eigen::internal::gemm_pack_lhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,8,4,0,0,0&gt;,Eigen::internal::gemm_pack_rhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,1,0&gt;,4,0,0,0&gt;,Eigen::internal::gebp_kernel&lt;float,float,__int64,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt;,8,4,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,1,0&gt;,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt; &gt;::state_kernel_</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContractionThreadPool.h</FILENAME>
      <LINE>294</LINE>
      <COLUMN>4</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;::Context&lt;Eigen::internal::gemm_pack_lhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,8,4,0,0,0&gt;,Eigen::internal::gemm_pack_rhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,1,0&gt;,4,0,0,0&gt;,Eigen::internal::gebp_kernel&lt;float,float,__int64,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt;,8,4,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,1,0&gt;,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt; &gt;::pad_' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;::Context&lt;Eigen::internal::gemm_pack_lhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,8,4,0,0,0&gt;,Eigen::internal::gemm_pack_rhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,1,0&gt;,4,0,0,0&gt;,Eigen::internal::gebp_kernel&lt;float,float,__int64,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt;,8,4,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,1,0&gt;,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt; &gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$Context@U?$gemm_pack_lhs@M_JV?$TensorContractionSubMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0A@$0A@@internal@Eigen@@$07$03$0A@$0A@$0A@@internal@Eigen@@U?$gemm_pack_rhs@M_JV?$TensorContractionSubMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$00$0A@@internal@Eigen@@$03$0A@$0A@$0A@@23@U?$gebp_kernel@MM_JV?$blas_data_mapper@M_J$0A@$0A@$00@internal@Eigen@@$07$03$0A@$0A@@23@V?$TensorContractionInputMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0A@$0A@@23@V?$TensorContractionInputMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$00$0A@@23@V?$blas_data_mapper@M_J$0A@$0A@$00@23@@?$TensorEvaluator@$$CBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$01$0A@_J@Eigen@@$$CBV34@@Eigen@@UThreadPoolDevice@2@@Eigen@@QEAA@AEBUThreadPoolDevice@2@HAEAV?$TensorContractionInputMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0A@$0A@@internal@2@AEAV?$TensorContractionInputMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$00$0A@@52@PEAM_J444444444444_N5@Z</DECORATED>
    <FUNCLINE>294</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;::Context&lt;Eigen::internal::gemm_pack_lhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,8,4,0,0,0&gt;,Eigen::internal::gemm_pack_rhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,1,0&gt;,4,0,0,0&gt;,Eigen::internal::gebp_kernel&lt;float,float,__int64,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt;,8,4,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,1,0&gt;,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt; &gt;::pad_</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>Tensor.h</FILENAME>
      <LINE>436</LINE>
      <COLUMN>6</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>Ill-defined for-loop:  initial condition does not satisfy test.  Loop body not executed.</DESCRIPTION>
    <FUNCTION>Eigen::Tensor&lt;__int64,0,0,__int64&gt;::resize</FUNCTION>
    <DECORATED>?resize@?$Tensor@_J$0A@$0A@_J@Eigen@@QEAAXAEBV?$array@_J$0A@@std@@@Z</DECORATED>
    <FUNCLINE>432</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>Tensor.h</FILENAME>
      <LINE>436</LINE>
      <COLUMN>6</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>Ill-defined for-loop:  initial condition does not satisfy test.  Loop body not executed.</DESCRIPTION>
    <FUNCTION>Eigen::Tensor&lt;float,0,0,__int64&gt;::resize</FUNCTION>
    <DECORATED>?resize@?$Tensor@M$0A@$0A@_J@Eigen@@QEAAXAEBV?$array@_J$0A@@std@@@Z</DECORATED>
    <FUNCLINE>432</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContractionThreadPool.h</FILENAME>
      <LINE>713</LINE>
      <COLUMN>65</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;::checkGrain</FUNCTION>
    <DECORATED>?checkGrain@?$TensorEvaluator@$$CBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$01$0A@_J@Eigen@@$$CBV34@@Eigen@@UThreadPoolDevice@2@@Eigen@@QEBAH_J00000000H_N@Z</DECORATED>
    <FUNCLINE>691</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContractionThreadPool.h</FILENAME>
      <LINE>716</LINE>
      <COLUMN>65</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;::checkGrain</FUNCTION>
    <DECORATED>?checkGrain@?$TensorEvaluator@$$CBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$01$0A@_J@Eigen@@$$CBV34@@Eigen@@UThreadPoolDevice@2@@Eigen@@QEBAH_J00000000H_N@Z</DECORATED>
    <FUNCLINE>691</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\Eigen\src\Core\products\</FILEPATH>
      <FILENAME>GeneralBlockPanelKernel.h</FILENAME>
      <LINE>928</LINE>
      <COLUMN>6</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>Ill-defined for-loop:  initial condition does not satisfy test.  Loop body not executed.</DESCRIPTION>
    <FUNCTION>Eigen::internal::gebp_kernel&lt;float,float,__int64,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt;,8,4,0,0&gt;::()</FUNCTION>
    <DECORATED>??R?$gebp_kernel@MM_JV?$blas_data_mapper@M_J$0A@$0A@$00@internal@Eigen@@$07$03$0A@$0A@@internal@Eigen@@QEAAXAEBV?$blas_data_mapper@M_J$0A@$0A@$00@12@PEBM1_J22M2222@Z</DECORATED>
    <FUNCLINE>894</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContractionMapper.h</FILENAME>
      <LINE>119</LINE>
      <COLUMN>4</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>Ill-defined for-loop:  initial condition does not satisfy test.  Loop body not executed.</DESCRIPTION>
    <FUNCTION>Eigen::internal::SimpleTensorContractionMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0&gt;::computeIndex</FUNCTION>
    <DECORATED>?computeIndex@?$SimpleTensorContractionMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0A@@internal@Eigen@@QEBA_J_J0@Z</DECORATED>
    <FUNCLINE>114</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContractionMapper.h</FILENAME>
      <LINE>135</LINE>
      <COLUMN>6</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>Ill-defined for-loop:  initial condition does not satisfy test.  Loop body not executed.</DESCRIPTION>
    <FUNCTION>Eigen::internal::SimpleTensorContractionMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0&gt;::computeIndex</FUNCTION>
    <DECORATED>?computeIndex@?$SimpleTensorContractionMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0A@@internal@Eigen@@QEBA_J_J0@Z</DECORATED>
    <FUNCLINE>114</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContractionMapper.h</FILENAME>
      <LINE>119</LINE>
      <COLUMN>4</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>Ill-defined for-loop:  initial condition does not satisfy test.  Loop body not executed.</DESCRIPTION>
    <FUNCTION>Eigen::internal::SimpleTensorContractionMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0&gt;::computeIndex</FUNCTION>
    <DECORATED>?computeIndex@?$SimpleTensorContractionMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0A@@internal@Eigen@@QEBA_J_J0@Z</DECORATED>
    <FUNCLINE>114</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContractionMapper.h</FILENAME>
      <LINE>135</LINE>
      <COLUMN>6</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>Ill-defined for-loop:  initial condition does not satisfy test.  Loop body not executed.</DESCRIPTION>
    <FUNCTION>Eigen::internal::SimpleTensorContractionMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0&gt;::computeIndex</FUNCTION>
    <DECORATED>?computeIndex@?$SimpleTensorContractionMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0A@@internal@Eigen@@QEBA_J_J0@Z</DECORATED>
    <FUNCLINE>114</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContractionMapper.h</FILENAME>
      <LINE>119</LINE>
      <COLUMN>4</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>Ill-defined for-loop:  initial condition does not satisfy test.  Loop body not executed.</DESCRIPTION>
    <FUNCTION>Eigen::internal::SimpleTensorContractionMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0&gt;::computeIndex</FUNCTION>
    <DECORATED>?computeIndex@?$SimpleTensorContractionMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0A@@internal@Eigen@@QEBA_J_J0@Z</DECORATED>
    <FUNCLINE>114</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContractionMapper.h</FILENAME>
      <LINE>135</LINE>
      <COLUMN>6</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>Ill-defined for-loop:  initial condition does not satisfy test.  Loop body not executed.</DESCRIPTION>
    <FUNCTION>Eigen::internal::SimpleTensorContractionMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0&gt;::computeIndex</FUNCTION>
    <DECORATED>?computeIndex@?$SimpleTensorContractionMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0A@@internal@Eigen@@QEBA_J_J0@Z</DECORATED>
    <FUNCLINE>114</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContractionMapper.h</FILENAME>
      <LINE>119</LINE>
      <COLUMN>4</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>Ill-defined for-loop:  initial condition does not satisfy test.  Loop body not executed.</DESCRIPTION>
    <FUNCTION>Eigen::internal::SimpleTensorContractionMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0&gt;::computeIndex</FUNCTION>
    <DECORATED>?computeIndex@?$SimpleTensorContractionMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0A@@internal@Eigen@@QEBA_J_J0@Z</DECORATED>
    <FUNCLINE>114</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContractionMapper.h</FILENAME>
      <LINE>135</LINE>
      <COLUMN>6</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>Ill-defined for-loop:  initial condition does not satisfy test.  Loop body not executed.</DESCRIPTION>
    <FUNCTION>Eigen::internal::SimpleTensorContractionMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0&gt;::computeIndex</FUNCTION>
    <DECORATED>?computeIndex@?$SimpleTensorContractionMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0A@@internal@Eigen@@QEBA_J_J0@Z</DECORATED>
    <FUNCLINE>114</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\Eigen\src\Core\products\</FILEPATH>
      <FILENAME>GeneralMatrixVector.h</FILENAME>
      <LINE>134</LINE>
      <COLUMN>38</COLUMN>
    </SFA>
    <DEFECTCODE>26812</DEFECTCODE>
    <DESCRIPTION>The enum type 'Eigen::internal::general_matrix_vector_product&lt;__int64,float,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,16&gt;,0,0,float,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,1,16&gt;,0,0&gt;::run::__l4::&lt;unnamed-enum-AllAligned&gt;' is unscoped. Prefer 'enum class' over 'enum' (Enum.3).</DESCRIPTION>
    <FUNCTION>Eigen::internal::general_matrix_vector_product&lt;__int64,float,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,16&gt;,0,0,float,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,1,16&gt;,0,0&gt;::run</FUNCTION>
    <DECORATED>?run@?$general_matrix_vector_product@_JMV?$TensorContractionInputMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0A@$0BA@@internal@Eigen@@$0A@$0A@MV?$TensorContractionInputMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$00$0BA@@23@$0A@$0A@@internal@Eigen@@SAX_J0AEBV?$TensorContractionInputMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0A@$0BA@@23@AEBV?$TensorContractionInputMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$00$0BA@@23@PEAM0M@Z</DECORATED>
    <FUNCLINE>88</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\Eigen\src\Core\products\</FILEPATH>
      <FILENAME>GeneralMatrixVector.h</FILENAME>
      <LINE>134</LINE>
      <COLUMN>38</COLUMN>
    </SFA>
    <DEFECTCODE>26812</DEFECTCODE>
    <DESCRIPTION>The enum type 'Eigen::internal::general_matrix_vector_product&lt;__int64,float,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,16&gt;,0,0,float,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,16&gt;,0,0&gt;::run::__l4::&lt;unnamed-enum-AllAligned&gt;' is unscoped. Prefer 'enum class' over 'enum' (Enum.3).</DESCRIPTION>
    <FUNCTION>Eigen::internal::general_matrix_vector_product&lt;__int64,float,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,16&gt;,0,0,float,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,16&gt;,0,0&gt;::run</FUNCTION>
    <DECORATED>?run@?$general_matrix_vector_product@_JMV?$TensorContractionInputMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0A@$0BA@@internal@Eigen@@$0A@$0A@MV?$TensorContractionInputMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0A@$0BA@@23@$0A@$0A@@internal@Eigen@@SAX_J0AEBV?$TensorContractionInputMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0A@$0BA@@23@AEBV?$TensorContractionInputMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0A@$0BA@@23@PEAM0M@Z</DECORATED>
    <FUNCLINE>88</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\Eigen\src\Core\products\</FILEPATH>
      <FILENAME>GeneralMatrixVector.h</FILENAME>
      <LINE>134</LINE>
      <COLUMN>38</COLUMN>
    </SFA>
    <DEFECTCODE>26812</DEFECTCODE>
    <DESCRIPTION>The enum type 'Eigen::internal::general_matrix_vector_product&lt;__int64,float,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,16&gt;,0,0,float,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,1,16&gt;,0,0&gt;::run::__l4::&lt;unnamed-enum-AllAligned&gt;' is unscoped. Prefer 'enum class' over 'enum' (Enum.3).</DESCRIPTION>
    <FUNCTION>Eigen::internal::general_matrix_vector_product&lt;__int64,float,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,16&gt;,0,0,float,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,1,16&gt;,0,0&gt;::run</FUNCTION>
    <DECORATED>?run@?$general_matrix_vector_product@_JMV?$TensorContractionInputMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0A@$0BA@@internal@Eigen@@$0A@$0A@MV?$TensorContractionInputMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$00$0BA@@23@$0A@$0A@@internal@Eigen@@SAX_J0AEBV?$TensorContractionInputMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0A@$0BA@@23@AEBV?$TensorContractionInputMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$00$0BA@@23@PEAM0M@Z</DECORATED>
    <FUNCLINE>88</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\Eigen\src\Core\products\</FILEPATH>
      <FILENAME>GeneralMatrixVector.h</FILENAME>
      <LINE>134</LINE>
      <COLUMN>38</COLUMN>
    </SFA>
    <DEFECTCODE>26812</DEFECTCODE>
    <DESCRIPTION>The enum type 'Eigen::internal::general_matrix_vector_product&lt;__int64,float,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,16&gt;,0,0,float,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,16&gt;,0,0&gt;::run::__l4::&lt;unnamed-enum-AllAligned&gt;' is unscoped. Prefer 'enum class' over 'enum' (Enum.3).</DESCRIPTION>
    <FUNCTION>Eigen::internal::general_matrix_vector_product&lt;__int64,float,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,16&gt;,0,0,float,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,16&gt;,0,0&gt;::run</FUNCTION>
    <DECORATED>?run@?$general_matrix_vector_product@_JMV?$TensorContractionInputMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0A@$0BA@@internal@Eigen@@$0A@$0A@MV?$TensorContractionInputMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0A@$0BA@@23@$0A@$0A@@internal@Eigen@@SAX_J0AEBV?$TensorContractionInputMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0A@$0BA@@23@AEBV?$TensorContractionInputMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0A@$0BA@@23@PEAM0M@Z</DECORATED>
    <FUNCLINE>88</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\Eigen\src\Core\products\</FILEPATH>
      <FILENAME>GeneralMatrixVector.h</FILENAME>
      <LINE>134</LINE>
      <COLUMN>38</COLUMN>
    </SFA>
    <DEFECTCODE>26812</DEFECTCODE>
    <DESCRIPTION>The enum type 'Eigen::internal::general_matrix_vector_product&lt;__int64,float,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,16&gt;,0,0,float,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,1,16&gt;,0,0&gt;::run::__l4::&lt;unnamed-enum-AllAligned&gt;' is unscoped. Prefer 'enum class' over 'enum' (Enum.3).</DESCRIPTION>
    <FUNCTION>Eigen::internal::general_matrix_vector_product&lt;__int64,float,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,16&gt;,0,0,float,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,1,16&gt;,0,0&gt;::run</FUNCTION>
    <DECORATED>?run@?$general_matrix_vector_product@_JMV?$TensorContractionInputMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0A@$0BA@@internal@Eigen@@$0A@$0A@MV?$TensorContractionInputMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$00$0BA@@23@$0A@$0A@@internal@Eigen@@SAX_J0AEBV?$TensorContractionInputMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0A@$0BA@@23@AEBV?$TensorContractionInputMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$00$0BA@@23@PEAM0M@Z</DECORATED>
    <FUNCLINE>88</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\Eigen\src\Core\products\</FILEPATH>
      <FILENAME>GeneralMatrixVector.h</FILENAME>
      <LINE>134</LINE>
      <COLUMN>38</COLUMN>
    </SFA>
    <DEFECTCODE>26812</DEFECTCODE>
    <DESCRIPTION>The enum type 'Eigen::internal::general_matrix_vector_product&lt;__int64,float,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,16&gt;,0,0,float,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,16&gt;,0,0&gt;::run::__l4::&lt;unnamed-enum-AllAligned&gt;' is unscoped. Prefer 'enum class' over 'enum' (Enum.3).</DESCRIPTION>
    <FUNCTION>Eigen::internal::general_matrix_vector_product&lt;__int64,float,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,16&gt;,0,0,float,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,16&gt;,0,0&gt;::run</FUNCTION>
    <DECORATED>?run@?$general_matrix_vector_product@_JMV?$TensorContractionInputMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0A@$0BA@@internal@Eigen@@$0A@$0A@MV?$TensorContractionInputMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0A@$0BA@@23@$0A@$0A@@internal@Eigen@@SAX_J0AEBV?$TensorContractionInputMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0A@$0BA@@23@AEBV?$TensorContractionInputMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0A@$0BA@@23@PEAM0M@Z</DECORATED>
    <FUNCLINE>88</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\Eigen\src\Core\products\</FILEPATH>
      <FILENAME>GeneralMatrixVector.h</FILENAME>
      <LINE>134</LINE>
      <COLUMN>38</COLUMN>
    </SFA>
    <DEFECTCODE>26812</DEFECTCODE>
    <DESCRIPTION>The enum type 'Eigen::internal::general_matrix_vector_product&lt;__int64,float,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,16&gt;,0,0,float,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,1,16&gt;,0,0&gt;::run::__l4::&lt;unnamed-enum-AllAligned&gt;' is unscoped. Prefer 'enum class' over 'enum' (Enum.3).</DESCRIPTION>
    <FUNCTION>Eigen::internal::general_matrix_vector_product&lt;__int64,float,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,16&gt;,0,0,float,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,1,16&gt;,0,0&gt;::run</FUNCTION>
    <DECORATED>?run@?$general_matrix_vector_product@_JMV?$TensorContractionInputMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0A@$0BA@@internal@Eigen@@$0A@$0A@MV?$TensorContractionInputMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$00$0BA@@23@$0A@$0A@@internal@Eigen@@SAX_J0AEBV?$TensorContractionInputMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0A@$0BA@@23@AEBV?$TensorContractionInputMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$00$0BA@@23@PEAM0M@Z</DECORATED>
    <FUNCLINE>88</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\Eigen\src\Core\products\</FILEPATH>
      <FILENAME>GeneralMatrixVector.h</FILENAME>
      <LINE>134</LINE>
      <COLUMN>38</COLUMN>
    </SFA>
    <DEFECTCODE>26812</DEFECTCODE>
    <DESCRIPTION>The enum type 'Eigen::internal::general_matrix_vector_product&lt;__int64,float,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,16&gt;,0,0,float,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,16&gt;,0,0&gt;::run::__l4::&lt;unnamed-enum-AllAligned&gt;' is unscoped. Prefer 'enum class' over 'enum' (Enum.3).</DESCRIPTION>
    <FUNCTION>Eigen::internal::general_matrix_vector_product&lt;__int64,float,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,16&gt;,0,0,float,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,16&gt;,0,0&gt;::run</FUNCTION>
    <DECORATED>?run@?$general_matrix_vector_product@_JMV?$TensorContractionInputMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0A@$0BA@@internal@Eigen@@$0A@$0A@MV?$TensorContractionInputMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0A@$0BA@@23@$0A@$0A@@internal@Eigen@@SAX_J0AEBV?$TensorContractionInputMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0A@$0BA@@23@AEBV?$TensorContractionInputMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0A@$0BA@@23@PEAM0M@Z</DECORATED>
    <FUNCLINE>88</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContractionMapper.h</FILENAME>
      <LINE>159</LINE>
      <COLUMN>6</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>Ill-defined for-loop:  initial condition does not satisfy test.  Loop body not executed.</DESCRIPTION>
    <FUNCTION>Eigen::internal::SimpleTensorContractionMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0&gt;::computeIndexPair</FUNCTION>
    <DECORATED>?computeIndexPair@?$SimpleTensorContractionMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0A@@internal@Eigen@@QEBA?AU?$IndexPair@_J@3@_J0_J@Z</DECORATED>
    <FUNCLINE>153</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContractionMapper.h</FILENAME>
      <LINE>179</LINE>
      <COLUMN>6</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>Ill-defined for-loop:  initial condition does not satisfy test.  Loop body not executed.</DESCRIPTION>
    <FUNCTION>Eigen::internal::SimpleTensorContractionMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0&gt;::computeIndexPair</FUNCTION>
    <DECORATED>?computeIndexPair@?$SimpleTensorContractionMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0A@@internal@Eigen@@QEBA?AU?$IndexPair@_J@3@_J0_J@Z</DECORATED>
    <FUNCLINE>153</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContractionMapper.h</FILENAME>
      <LINE>159</LINE>
      <COLUMN>6</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>Ill-defined for-loop:  initial condition does not satisfy test.  Loop body not executed.</DESCRIPTION>
    <FUNCTION>Eigen::internal::SimpleTensorContractionMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0&gt;::computeIndexPair</FUNCTION>
    <DECORATED>?computeIndexPair@?$SimpleTensorContractionMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0A@@internal@Eigen@@QEBA?AU?$IndexPair@_J@3@_J0_J@Z</DECORATED>
    <FUNCLINE>153</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContractionMapper.h</FILENAME>
      <LINE>179</LINE>
      <COLUMN>6</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>Ill-defined for-loop:  initial condition does not satisfy test.  Loop body not executed.</DESCRIPTION>
    <FUNCTION>Eigen::internal::SimpleTensorContractionMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0&gt;::computeIndexPair</FUNCTION>
    <DECORATED>?computeIndexPair@?$SimpleTensorContractionMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0A@@internal@Eigen@@QEBA?AU?$IndexPair@_J@3@_J0_J@Z</DECORATED>
    <FUNCLINE>153</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContractionMapper.h</FILENAME>
      <LINE>159</LINE>
      <COLUMN>6</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>Ill-defined for-loop:  initial condition does not satisfy test.  Loop body not executed.</DESCRIPTION>
    <FUNCTION>Eigen::internal::SimpleTensorContractionMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0&gt;::computeIndexPair</FUNCTION>
    <DECORATED>?computeIndexPair@?$SimpleTensorContractionMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0A@@internal@Eigen@@QEBA?AU?$IndexPair@_J@3@_J0_J@Z</DECORATED>
    <FUNCLINE>153</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContractionMapper.h</FILENAME>
      <LINE>179</LINE>
      <COLUMN>6</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>Ill-defined for-loop:  initial condition does not satisfy test.  Loop body not executed.</DESCRIPTION>
    <FUNCTION>Eigen::internal::SimpleTensorContractionMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0&gt;::computeIndexPair</FUNCTION>
    <DECORATED>?computeIndexPair@?$SimpleTensorContractionMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0A@@internal@Eigen@@QEBA?AU?$IndexPair@_J@3@_J0_J@Z</DECORATED>
    <FUNCLINE>153</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContractionMapper.h</FILENAME>
      <LINE>159</LINE>
      <COLUMN>6</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>Ill-defined for-loop:  initial condition does not satisfy test.  Loop body not executed.</DESCRIPTION>
    <FUNCTION>Eigen::internal::SimpleTensorContractionMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0&gt;::computeIndexPair</FUNCTION>
    <DECORATED>?computeIndexPair@?$SimpleTensorContractionMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0A@@internal@Eigen@@QEBA?AU?$IndexPair@_J@3@_J0_J@Z</DECORATED>
    <FUNCLINE>153</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContractionMapper.h</FILENAME>
      <LINE>179</LINE>
      <COLUMN>6</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>Ill-defined for-loop:  initial condition does not satisfy test.  Loop body not executed.</DESCRIPTION>
    <FUNCTION>Eigen::internal::SimpleTensorContractionMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0&gt;::computeIndexPair</FUNCTION>
    <DECORATED>?computeIndexPair@?$SimpleTensorContractionMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0A@@internal@Eigen@@QEBA?AU?$IndexPair@_J@3@_J0_J@Z</DECORATED>
    <FUNCLINE>153</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContractionMapper.h</FILENAME>
      <LINE>119</LINE>
      <COLUMN>4</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>Ill-defined for-loop:  initial condition does not satisfy test.  Loop body not executed.</DESCRIPTION>
    <FUNCTION>Eigen::internal::SimpleTensorContractionMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,16&gt;::computeIndex</FUNCTION>
    <DECORATED>?computeIndex@?$SimpleTensorContractionMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0BA@@internal@Eigen@@QEBA_J_J0@Z</DECORATED>
    <FUNCLINE>114</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContractionMapper.h</FILENAME>
      <LINE>135</LINE>
      <COLUMN>6</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>Ill-defined for-loop:  initial condition does not satisfy test.  Loop body not executed.</DESCRIPTION>
    <FUNCTION>Eigen::internal::SimpleTensorContractionMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,16&gt;::computeIndex</FUNCTION>
    <DECORATED>?computeIndex@?$SimpleTensorContractionMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0BA@@internal@Eigen@@QEBA_J_J0@Z</DECORATED>
    <FUNCLINE>114</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContractionMapper.h</FILENAME>
      <LINE>119</LINE>
      <COLUMN>4</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>Ill-defined for-loop:  initial condition does not satisfy test.  Loop body not executed.</DESCRIPTION>
    <FUNCTION>Eigen::internal::SimpleTensorContractionMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,16&gt;::computeIndex</FUNCTION>
    <DECORATED>?computeIndex@?$SimpleTensorContractionMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0BA@@internal@Eigen@@QEBA_J_J0@Z</DECORATED>
    <FUNCLINE>114</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContractionMapper.h</FILENAME>
      <LINE>135</LINE>
      <COLUMN>6</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>Ill-defined for-loop:  initial condition does not satisfy test.  Loop body not executed.</DESCRIPTION>
    <FUNCTION>Eigen::internal::SimpleTensorContractionMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,16&gt;::computeIndex</FUNCTION>
    <DECORATED>?computeIndex@?$SimpleTensorContractionMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0BA@@internal@Eigen@@QEBA_J_J0@Z</DECORATED>
    <FUNCLINE>114</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContractionMapper.h</FILENAME>
      <LINE>119</LINE>
      <COLUMN>4</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>Ill-defined for-loop:  initial condition does not satisfy test.  Loop body not executed.</DESCRIPTION>
    <FUNCTION>Eigen::internal::SimpleTensorContractionMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,16&gt;::computeIndex</FUNCTION>
    <DECORATED>?computeIndex@?$SimpleTensorContractionMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0BA@@internal@Eigen@@QEBA_J_J0@Z</DECORATED>
    <FUNCLINE>114</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContractionMapper.h</FILENAME>
      <LINE>135</LINE>
      <COLUMN>6</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>Ill-defined for-loop:  initial condition does not satisfy test.  Loop body not executed.</DESCRIPTION>
    <FUNCTION>Eigen::internal::SimpleTensorContractionMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,16&gt;::computeIndex</FUNCTION>
    <DECORATED>?computeIndex@?$SimpleTensorContractionMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0BA@@internal@Eigen@@QEBA_J_J0@Z</DECORATED>
    <FUNCLINE>114</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContractionMapper.h</FILENAME>
      <LINE>119</LINE>
      <COLUMN>4</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>Ill-defined for-loop:  initial condition does not satisfy test.  Loop body not executed.</DESCRIPTION>
    <FUNCTION>Eigen::internal::SimpleTensorContractionMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,16&gt;::computeIndex</FUNCTION>
    <DECORATED>?computeIndex@?$SimpleTensorContractionMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0BA@@internal@Eigen@@QEBA_J_J0@Z</DECORATED>
    <FUNCLINE>114</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContractionMapper.h</FILENAME>
      <LINE>135</LINE>
      <COLUMN>6</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>Ill-defined for-loop:  initial condition does not satisfy test.  Loop body not executed.</DESCRIPTION>
    <FUNCTION>Eigen::internal::SimpleTensorContractionMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,16&gt;::computeIndex</FUNCTION>
    <DECORATED>?computeIndex@?$SimpleTensorContractionMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0BA@@internal@Eigen@@QEBA_J_J0@Z</DECORATED>
    <FUNCLINE>114</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContractionMapper.h</FILENAME>
      <LINE>159</LINE>
      <COLUMN>6</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>Ill-defined for-loop:  initial condition does not satisfy test.  Loop body not executed.</DESCRIPTION>
    <FUNCTION>Eigen::internal::SimpleTensorContractionMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,16&gt;::computeIndexPair</FUNCTION>
    <DECORATED>?computeIndexPair@?$SimpleTensorContractionMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0BA@@internal@Eigen@@QEBA?AU?$IndexPair@_J@3@_J0_J@Z</DECORATED>
    <FUNCLINE>153</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContractionMapper.h</FILENAME>
      <LINE>179</LINE>
      <COLUMN>6</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>Ill-defined for-loop:  initial condition does not satisfy test.  Loop body not executed.</DESCRIPTION>
    <FUNCTION>Eigen::internal::SimpleTensorContractionMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,16&gt;::computeIndexPair</FUNCTION>
    <DECORATED>?computeIndexPair@?$SimpleTensorContractionMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0BA@@internal@Eigen@@QEBA?AU?$IndexPair@_J@3@_J0_J@Z</DECORATED>
    <FUNCLINE>153</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContractionMapper.h</FILENAME>
      <LINE>159</LINE>
      <COLUMN>6</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>Ill-defined for-loop:  initial condition does not satisfy test.  Loop body not executed.</DESCRIPTION>
    <FUNCTION>Eigen::internal::SimpleTensorContractionMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,16&gt;::computeIndexPair</FUNCTION>
    <DECORATED>?computeIndexPair@?$SimpleTensorContractionMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0BA@@internal@Eigen@@QEBA?AU?$IndexPair@_J@3@_J0_J@Z</DECORATED>
    <FUNCLINE>153</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContractionMapper.h</FILENAME>
      <LINE>179</LINE>
      <COLUMN>6</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>Ill-defined for-loop:  initial condition does not satisfy test.  Loop body not executed.</DESCRIPTION>
    <FUNCTION>Eigen::internal::SimpleTensorContractionMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,16&gt;::computeIndexPair</FUNCTION>
    <DECORATED>?computeIndexPair@?$SimpleTensorContractionMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0BA@@internal@Eigen@@QEBA?AU?$IndexPair@_J@3@_J0_J@Z</DECORATED>
    <FUNCLINE>153</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
</DEFECTS>