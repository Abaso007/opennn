<?xml version="1.0" encoding="UTF-8"?>
<DEFECTS>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\opennn\</FILEPATH>
      <FILENAME>tinyxml2.h</FILENAME>
      <LINE>1324</LINE>
      <COLUMN>8</COLUMN>
    </SFA>
    <DEFECTCODE>26812</DEFECTCODE>
    <DESCRIPTION>The enum type 'tinyxml2::XMLError' is unscoped. Prefer 'enum class' over 'enum' (Enum.3).</DESCRIPTION>
    <FUNCTION>tinyxml2::XMLElement::QueryIntAttribute</FUNCTION>
    <DECORATED>?QueryIntAttribute@XMLElement@tinyxml2@@QEBA?AW4XMLError@2@PEBDPEAH@Z</DECORATED>
    <FUNCLINE>1319</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\opennn\</FILEPATH>
      <FILENAME>tinyxml2.h</FILENAME>
      <LINE>1609</LINE>
      <COLUMN>8</COLUMN>
    </SFA>
    <DEFECTCODE>26812</DEFECTCODE>
    <DESCRIPTION>The enum type 'tinyxml2::XMLElement::ElementClosingType' is unscoped. Prefer 'enum class' over 'enum' (Enum.3).</DESCRIPTION>
    <FUNCTION>tinyxml2::XMLElement::ClosingType</FUNCTION>
    <DECORATED>?ClosingType@XMLElement@tinyxml2@@QEBA?AW4ElementClosingType@12@XZ</DECORATED>
    <FUNCLINE>1608</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\opennn\</FILEPATH>
      <FILENAME>tinyxml2.h</FILENAME>
      <LINE>1728</LINE>
      <COLUMN>8</COLUMN>
    </SFA>
    <DEFECTCODE>26812</DEFECTCODE>
    <DESCRIPTION>The enum type 'tinyxml2::Whitespace' is unscoped. Prefer 'enum class' over 'enum' (Enum.3).</DESCRIPTION>
    <FUNCTION>tinyxml2::XMLDocument::WhitespaceMode</FUNCTION>
    <DECORATED>?WhitespaceMode@XMLDocument@tinyxml2@@QEBA?AW4Whitespace@2@XZ</DECORATED>
    <FUNCLINE>1727</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\Eigen\src\Core\arch\SSE\</FILEPATH>
      <FILENAME>Complex.h</FILENAME>
      <LINE>20</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'Eigen::internal::Packet2cf::v' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>Eigen::internal::Packet2cf::{ctor}</FUNCTION>
    <DECORATED>??0Packet2cf@internal@Eigen@@QEAA@XZ</DECORATED>
    <FUNCLINE>20</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>Eigen::internal::Packet2cf::v</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\Eigen\src\Core\arch\SSE\</FILEPATH>
      <FILENAME>Complex.h</FILENAME>
      <LINE>251</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'Eigen::internal::Packet1cd::v' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>Eigen::internal::Packet1cd::{ctor}</FUNCTION>
    <DECORATED>??0Packet1cd@internal@Eigen@@QEAA@XZ</DECORATED>
    <FUNCLINE>251</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>Eigen::internal::Packet1cd::v</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\Eigen\src\Core\arch\CUDA\</FILEPATH>
      <FILENAME>Half.h</FILENAME>
      <LINE>388</LINE>
      <COLUMN>39</COLUMN>
    </SFA>
    <DEFECTCODE>26450</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: '&lt;&lt;' operation causes overflow at compile time. Use a wider type to store the operands (io.1).</DESCRIPTION>
    <FUNCTION>Eigen::half_impl::float_to_half_rtne</FUNCTION>
    <DECORATED>?float_to_half_rtne@half_impl@Eigen@@YA?AU__half_raw@12@M@Z</DECORATED>
    <FUNCLINE>345</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\Eigen\src\Core\products\</FILEPATH>
      <FILENAME>GeneralBlockPanelKernel.h</FILENAME>
      <LINE>55</LINE>
      <COLUMN>12</COLUMN>
    </SFA>
    <DEFECTCODE>26812</DEFECTCODE>
    <DESCRIPTION>The enum type 'Eigen::Action' is unscoped. Prefer 'enum class' over 'enum' (Enum.3).</DESCRIPTION>
    <FUNCTION>Eigen::internal::manage_caching_sizes</FUNCTION>
    <DECORATED>?manage_caching_sizes@internal@Eigen@@YAXW4Action@2@PEA_J11@Z</DECORATED>
    <FUNCLINE>55</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorDeviceThreadPool.h</FILENAME>
      <LINE>214</LINE>
      <COLUMN>47</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::ThreadPoolDevice::parallelFor</FUNCTION>
    <DECORATED>?parallelFor@ThreadPoolDevice@Eigen@@QEBAX_JAEBVTensorOpCost@2@V?$function@$$A6A_J_J@Z@std@@V?$function@$$A6AX_J0@Z@5@@Z</DECORATED>
    <FUNCLINE>182</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorDeviceThreadPool.h</FILENAME>
      <LINE>236</LINE>
      <COLUMN>57</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::ThreadPoolDevice::parallelFor</FUNCTION>
    <DECORATED>?parallelFor@ThreadPoolDevice@Eigen@@QEBAX_JAEBVTensorOpCost@2@V?$function@$$A6A_J_J@Z@std@@V?$function@$$A6AX_J0@Z@5@@Z</DECORATED>
    <FUNCLINE>182</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\opennn\</FILEPATH>
      <FILENAME>statistics.h</FILENAME>
      <LINE>113</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'OpenNN::BoxPlot::maximum' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>OpenNN::BoxPlot::{ctor}</FUNCTION>
    <DECORATED>??0BoxPlot@OpenNN@@QEAA@XZ</DECORATED>
    <FUNCLINE>113</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>OpenNN::BoxPlot::maximum</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\opennn\</FILEPATH>
      <FILENAME>statistics.h</FILENAME>
      <LINE>113</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'OpenNN::BoxPlot::minimum' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>OpenNN::BoxPlot::{ctor}</FUNCTION>
    <DECORATED>??0BoxPlot@OpenNN@@QEAA@XZ</DECORATED>
    <FUNCLINE>113</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>OpenNN::BoxPlot::minimum</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\opennn\</FILEPATH>
      <FILENAME>statistics.h</FILENAME>
      <LINE>113</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'OpenNN::BoxPlot::median' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>OpenNN::BoxPlot::{ctor}</FUNCTION>
    <DECORATED>??0BoxPlot@OpenNN@@QEAA@XZ</DECORATED>
    <FUNCLINE>113</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>OpenNN::BoxPlot::median</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\opennn\</FILEPATH>
      <FILENAME>statistics.h</FILENAME>
      <LINE>113</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'OpenNN::BoxPlot::third_quartile' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>OpenNN::BoxPlot::{ctor}</FUNCTION>
    <DECORATED>??0BoxPlot@OpenNN@@QEAA@XZ</DECORATED>
    <FUNCLINE>113</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>OpenNN::BoxPlot::third_quartile</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\opennn\</FILEPATH>
      <FILENAME>statistics.h</FILENAME>
      <LINE>113</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'OpenNN::BoxPlot::first_quartile' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>OpenNN::BoxPlot::{ctor}</FUNCTION>
    <DECORATED>??0BoxPlot@OpenNN@@QEAA@XZ</DECORATED>
    <FUNCLINE>113</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>OpenNN::BoxPlot::first_quartile</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\opennn\</FILEPATH>
      <FILENAME>correlations.h</FILENAME>
      <LINE>45</LINE>
      <COLUMN>4</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'OpenNN::RegressionResults::regression_type' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>OpenNN::RegressionResults::{ctor}</FUNCTION>
    <DECORATED>??0RegressionResults@OpenNN@@QEAA@XZ</DECORATED>
    <FUNCLINE>45</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>OpenNN::RegressionResults::regression_type</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\opennn\</FILEPATH>
      <FILENAME>correlations.h</FILENAME>
      <LINE>90</LINE>
      <COLUMN>4</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'OpenNN::CorrelationResults::correlation_type' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>OpenNN::CorrelationResults::{ctor}</FUNCTION>
    <DECORATED>??0CorrelationResults@OpenNN@@QEAA@XZ</DECORATED>
    <FUNCLINE>90</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>OpenNN::CorrelationResults::correlation_type</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\opennn\</FILEPATH>
      <FILENAME>data_set.h</FILENAME>
      <LINE>234</LINE>
      <COLUMN>57</COLUMN>
    </SFA>
    <DEFECTCODE>26812</DEFECTCODE>
    <DESCRIPTION>The enum type 'OpenNN::DataSet::ColumnType' is unscoped. Prefer 'enum class' over 'enum' (Enum.3).</DESCRIPTION>
    <FUNCTION>OpenNN::DataSet::get_column_type</FUNCTION>
    <DECORATED>?get_column_type@DataSet@OpenNN@@QEBA?AW4ColumnType@12@AEB_J@Z</DECORATED>
    <FUNCLINE>234</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\opennn\</FILEPATH>
      <FILENAME>layer.h</FILENAME>
      <LINE>232</LINE>
      <COLUMN>22</COLUMN>
    </SFA>
    <DEFECTCODE>26812</DEFECTCODE>
    <DESCRIPTION>The enum type 'OpenNN::Layer::Type' is unscoped. Prefer 'enum class' over 'enum' (Enum.3).</DESCRIPTION>
    <FUNCTION>OpenNN::Layer::{ctor}</FUNCTION>
    <DECORATED>??0Layer@OpenNN@@QEAA@XZ</DECORATED>
    <FUNCLINE>109</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\opennn\</FILEPATH>
      <FILENAME>long_short_term_memory_layer.h</FILENAME>
      <LINE>313</LINE>
      <COLUMN>44</COLUMN>
    </SFA>
    <DEFECTCODE>26812</DEFECTCODE>
    <DESCRIPTION>The enum type 'OpenNN::LongShortTermMemoryLayer::ActivationFunction' is unscoped. Prefer 'enum class' over 'enum' (Enum.3).</DESCRIPTION>
    <FUNCTION>OpenNN::LongShortTermMemoryLayer::{ctor}</FUNCTION>
    <DECORATED>??0LongShortTermMemoryLayer@OpenNN@@QEAA@XZ</DECORATED>
    <FUNCLINE>20</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\ThreadPool\</FILEPATH>
      <FILENAME>EventCount.h</FILENAME>
      <LINE>183</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'Eigen::EventCount::Waiter::epoch' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>Eigen::EventCount::Waiter::{ctor}</FUNCTION>
    <DECORATED>??0Waiter@EventCount@Eigen@@QEAA@XZ</DECORATED>
    <FUNCLINE>183</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>Eigen::EventCount::Waiter::epoch</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\ThreadPool\</FILEPATH>
      <FILENAME>EventCount.h</FILENAME>
      <LINE>183</LINE>
      <COLUMN>2</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'Eigen::EventCount::Waiter::state' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>Eigen::EventCount::Waiter::{ctor}</FUNCTION>
    <DECORATED>??0Waiter@EventCount@Eigen@@QEAA@XZ</DECORATED>
    <FUNCLINE>183</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>Eigen::EventCount::Waiter::state</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\Eigen\src\Core\util\</FILEPATH>
      <FILENAME>Memory.h</FILENAME>
      <LINE>412</LINE>
      <COLUMN>51</COLUMN>
    </SFA>
    <DEFECTCODE>26812</DEFECTCODE>
    <DESCRIPTION>The enum type 'OpenNN::DataSet::VariableUse' is unscoped. Prefer 'enum class' over 'enum' (Enum.3).</DESCRIPTION>
    <FUNCTION>Eigen::internal::conditional_aligned_delete_auto</FUNCTION>
    <DECORATED>??$conditional_aligned_delete_auto@W4VariableUse@DataSet@OpenNN@@$00@internal@Eigen@@YAXPEAW4VariableUse@DataSet@OpenNN@@_K@Z</DECORATED>
    <FUNCLINE>412</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\Eigen\src\Core\</FILEPATH>
      <FILENAME>PlainObjectBase.h</FILENAME>
      <LINE>44</LINE>
      <COLUMN>66</COLUMN>
    </SFA>
    <DEFECTCODE>26454</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: '-' operation produces a negative unsigned result at compile time (io.5).</DESCRIPTION>
    <FUNCTION>Eigen::internal::check_rows_cols_for_overflow&lt;-1&gt;::run</FUNCTION>
    <DECORATED>??$run@_J@?$check_rows_cols_for_overflow@$0?0@internal@Eigen@@SAX_J0@Z</DECORATED>
    <FUNCLINE>40</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorChipping.h</FILENAME>
      <LINE>164</LINE>
      <COLUMN>24</COLUMN>
    </SFA>
    <DEFECTCODE>28020</DEFECTCODE>
    <DESCRIPTION>The expression '0&lt;=_Param_(1)&amp;&amp;_Param_(1)&lt;=1-1' is not true at this call.</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorChippingOp&lt;-1,Eigen::Tensor&lt;float,2,0,__int64&gt; &gt; const ,Eigen::DefaultDevice&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorEvaluator@$$CBV?$TensorChippingOp@$0?0V?$Tensor@M$01$0A@_J@Eigen@@@Eigen@@UDefaultDevice@2@@Eigen@@QEAA@AEBV?$TensorChippingOp@$0?0V?$Tensor@M$01$0A@_J@Eigen@@@1@AEBUDefaultDevice@1@@Z</DECORATED>
    <FUNCLINE>152</FUNCLINE>
    <PATH>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorchipping.h</FILENAME>
        <LINE>154</LINE>
        <COLUMN>2</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorchipping.h</FILENAME>
        <LINE>153</LINE>
        <COLUMN>14</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorchipping.h</FILENAME>
        <LINE>153</LINE>
        <COLUMN>0</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorchipping.h</FILENAME>
        <LINE>156</LINE>
        <COLUMN>4</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorchipping.h</FILENAME>
        <LINE>158</LINE>
        <COLUMN>13</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorchipping.h</FILENAME>
        <LINE>159</LINE>
        <COLUMN>4</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorchipping.h</FILENAME>
        <LINE>161</LINE>
        <COLUMN>8</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorchipping.h</FILENAME>
        <LINE>162</LINE>
        <COLUMN>13</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorchipping.h</FILENAME>
        <LINE>162</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorchipping.h</FILENAME>
        <LINE>163</LINE>
        <COLUMN>12</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorchipping.h</FILENAME>
        <LINE>164</LINE>
        <COLUMN>24</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorchipping.h</FILENAME>
        <LINE>165</LINE>
        <COLUMN>8</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorchipping.h</FILENAME>
        <LINE>162</LINE>
        <COLUMN>17</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorchipping.h</FILENAME>
        <LINE>162</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorchipping.h</FILENAME>
        <LINE>163</LINE>
        <COLUMN>12</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorchipping.h</FILENAME>
        <LINE>164</LINE>
        <COLUMN>24</COLUMN>
      </SFA>
    </PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorChipping.h</FILENAME>
      <LINE>164</LINE>
      <COLUMN>24</COLUMN>
    </SFA>
    <DEFECTCODE>28020</DEFECTCODE>
    <DESCRIPTION>The expression '0&lt;=_Param_(1)&amp;&amp;_Param_(1)&lt;=1-1' is not true at this call.</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorChippingOp&lt;-1,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::DefaultDevice&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorEvaluator@$$CBV?$TensorChippingOp@$0?0$$CBV?$Tensor@M$01$0A@_J@Eigen@@@Eigen@@UDefaultDevice@2@@Eigen@@QEAA@AEBV?$TensorChippingOp@$0?0$$CBV?$Tensor@M$01$0A@_J@Eigen@@@1@AEBUDefaultDevice@1@@Z</DECORATED>
    <FUNCLINE>152</FUNCLINE>
    <PATH>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorchipping.h</FILENAME>
        <LINE>154</LINE>
        <COLUMN>2</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorchipping.h</FILENAME>
        <LINE>153</LINE>
        <COLUMN>14</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorchipping.h</FILENAME>
        <LINE>153</LINE>
        <COLUMN>0</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorchipping.h</FILENAME>
        <LINE>156</LINE>
        <COLUMN>4</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorchipping.h</FILENAME>
        <LINE>158</LINE>
        <COLUMN>13</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorchipping.h</FILENAME>
        <LINE>159</LINE>
        <COLUMN>4</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorchipping.h</FILENAME>
        <LINE>161</LINE>
        <COLUMN>8</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorchipping.h</FILENAME>
        <LINE>162</LINE>
        <COLUMN>13</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorchipping.h</FILENAME>
        <LINE>162</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorchipping.h</FILENAME>
        <LINE>163</LINE>
        <COLUMN>12</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorchipping.h</FILENAME>
        <LINE>164</LINE>
        <COLUMN>24</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorchipping.h</FILENAME>
        <LINE>165</LINE>
        <COLUMN>8</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorchipping.h</FILENAME>
        <LINE>162</LINE>
        <COLUMN>17</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorchipping.h</FILENAME>
        <LINE>162</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorchipping.h</FILENAME>
        <LINE>163</LINE>
        <COLUMN>12</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorchipping.h</FILENAME>
        <LINE>164</LINE>
        <COLUMN>24</COLUMN>
      </SFA>
    </PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContraction.h</FILENAME>
      <LINE>250</LINE>
      <COLUMN>50</COLUMN>
    </SFA>
    <DEFECTCODE>28020</DEFECTCODE>
    <DESCRIPTION>The expression '0&lt;=_Param_(1)&amp;&amp;_Param_(1)&lt;=1-1' is not true at this call.</DESCRIPTION>
    <FUNCTION>Eigen::TensorContractionEvaluatorBase&lt;Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::DefaultDevice&gt; &gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorContractionEvaluatorBase@U?$TensorEvaluator@$$CBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$01$0A@_J@Eigen@@$$CBV34@@Eigen@@UDefaultDevice@2@@Eigen@@@Eigen@@QEAA@AEBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$01$0A@_J@Eigen@@$$CBV34@@1@AEBUDefaultDevice@1@@Z</DECORATED>
    <FUNCLINE>152</FUNCLINE>
    <PATH>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>159</LINE>
        <COLUMN>23</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>154</LINE>
        <COLUMN>16</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>156</LINE>
        <COLUMN>15</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>158</LINE>
        <COLUMN>16</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>159</LINE>
        <COLUMN>16</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>165</LINE>
        <COLUMN>2</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>166</LINE>
        <COLUMN>2</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>167</LINE>
        <COLUMN>2</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>168</LINE>
        <COLUMN>33</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>170</LINE>
        <COLUMN>15</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>170</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>171</LINE>
        <COLUMN>26</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>170</LINE>
        <COLUMN>0</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>170</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>171</LINE>
        <COLUMN>26</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>170</LINE>
        <COLUMN>0</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>170</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>173</LINE>
        <COLUMN>15</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>173</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>174</LINE>
        <COLUMN>27</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>173</LINE>
        <COLUMN>0</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>173</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>174</LINE>
        <COLUMN>27</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>173</LINE>
        <COLUMN>0</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>173</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>177</LINE>
        <COLUMN>15</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>177</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>178</LINE>
        <COLUMN>33</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>179</LINE>
        <COLUMN>34</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>177</LINE>
        <COLUMN>0</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>177</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>199</LINE>
        <COLUMN>13</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>199</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>200</LINE>
        <COLUMN>15</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>200</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>199</LINE>
        <COLUMN>0</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>199</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>210</LINE>
        <COLUMN>2</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>211</LINE>
        <COLUMN>19</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>212</LINE>
        <COLUMN>13</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>212</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>213</LINE>
        <COLUMN>23</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>212</LINE>
        <COLUMN>12</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>212</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>216</LINE>
        <COLUMN>2</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>217</LINE>
        <COLUMN>19</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>218</LINE>
        <COLUMN>13</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>218</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>219</LINE>
        <COLUMN>23</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>218</LINE>
        <COLUMN>12</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>218</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>222</LINE>
        <COLUMN>27</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>223</LINE>
        <COLUMN>27</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>224</LINE>
        <COLUMN>27</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>226</LINE>
        <COLUMN>13</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>227</LINE>
        <COLUMN>13</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>228</LINE>
        <COLUMN>13</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>234</LINE>
        <COLUMN>31</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>235</LINE>
        <COLUMN>8</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>236</LINE>
        <COLUMN>17</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>238</LINE>
        <COLUMN>13</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>238</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>240</LINE>
        <COLUMN>11</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>241</LINE>
        <COLUMN>15</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>241</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>242</LINE>
        <COLUMN>37</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>241</LINE>
        <COLUMN>0</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>241</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>247</LINE>
        <COLUMN>10</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>249</LINE>
        <COLUMN>30</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>250</LINE>
        <COLUMN>50</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>251</LINE>
        <COLUMN>20</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>254</LINE>
        <COLUMN>29</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>258</LINE>
        <COLUMN>19</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>260</LINE>
        <COLUMN>15</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>261</LINE>
        <COLUMN>22</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>238</LINE>
        <COLUMN>0</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>238</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>240</LINE>
        <COLUMN>11</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>241</LINE>
        <COLUMN>15</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>241</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>242</LINE>
        <COLUMN>37</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>241</LINE>
        <COLUMN>0</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>241</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>247</LINE>
        <COLUMN>10</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>249</LINE>
        <COLUMN>30</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>250</LINE>
        <COLUMN>50</COLUMN>
      </SFA>
    </PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContraction.h</FILENAME>
      <LINE>276</LINE>
      <COLUMN>30</COLUMN>
    </SFA>
    <DEFECTCODE>28020</DEFECTCODE>
    <DESCRIPTION>The expression '0&lt;=_Param_(1)&amp;&amp;_Param_(1)&lt;=2-1' is not true at this call.</DESCRIPTION>
    <FUNCTION>Eigen::TensorContractionEvaluatorBase&lt;Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::DefaultDevice&gt; &gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorContractionEvaluatorBase@U?$TensorEvaluator@$$CBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$01$0A@_J@Eigen@@$$CBV34@@Eigen@@UDefaultDevice@2@@Eigen@@@Eigen@@QEAA@AEBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$01$0A@_J@Eigen@@$$CBV34@@1@AEBUDefaultDevice@1@@Z</DECORATED>
    <FUNCLINE>152</FUNCLINE>
    <PATH>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>159</LINE>
        <COLUMN>23</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>154</LINE>
        <COLUMN>16</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>156</LINE>
        <COLUMN>15</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>158</LINE>
        <COLUMN>16</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>159</LINE>
        <COLUMN>16</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>165</LINE>
        <COLUMN>2</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>166</LINE>
        <COLUMN>2</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>167</LINE>
        <COLUMN>2</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>168</LINE>
        <COLUMN>33</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>170</LINE>
        <COLUMN>15</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>170</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>171</LINE>
        <COLUMN>26</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>170</LINE>
        <COLUMN>0</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>170</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>171</LINE>
        <COLUMN>26</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>170</LINE>
        <COLUMN>0</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>170</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>173</LINE>
        <COLUMN>15</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>173</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>174</LINE>
        <COLUMN>27</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>173</LINE>
        <COLUMN>0</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>173</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>174</LINE>
        <COLUMN>27</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>173</LINE>
        <COLUMN>0</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>173</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>177</LINE>
        <COLUMN>15</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>177</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>178</LINE>
        <COLUMN>33</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>179</LINE>
        <COLUMN>34</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>177</LINE>
        <COLUMN>0</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>177</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>199</LINE>
        <COLUMN>13</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>199</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>200</LINE>
        <COLUMN>15</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>200</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>199</LINE>
        <COLUMN>0</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>199</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>210</LINE>
        <COLUMN>2</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>211</LINE>
        <COLUMN>19</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>212</LINE>
        <COLUMN>13</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>212</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>213</LINE>
        <COLUMN>23</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>212</LINE>
        <COLUMN>12</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>212</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>216</LINE>
        <COLUMN>2</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>217</LINE>
        <COLUMN>19</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>218</LINE>
        <COLUMN>13</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>218</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>219</LINE>
        <COLUMN>23</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>218</LINE>
        <COLUMN>12</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>218</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>222</LINE>
        <COLUMN>27</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>223</LINE>
        <COLUMN>27</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>224</LINE>
        <COLUMN>27</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>226</LINE>
        <COLUMN>13</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>227</LINE>
        <COLUMN>13</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>228</LINE>
        <COLUMN>13</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>234</LINE>
        <COLUMN>31</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>235</LINE>
        <COLUMN>8</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>236</LINE>
        <COLUMN>17</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>238</LINE>
        <COLUMN>13</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>238</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>240</LINE>
        <COLUMN>11</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>241</LINE>
        <COLUMN>15</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>241</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>242</LINE>
        <COLUMN>37</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>241</LINE>
        <COLUMN>0</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>241</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>247</LINE>
        <COLUMN>10</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>249</LINE>
        <COLUMN>30</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>250</LINE>
        <COLUMN>50</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>251</LINE>
        <COLUMN>20</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>254</LINE>
        <COLUMN>29</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>258</LINE>
        <COLUMN>19</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>260</LINE>
        <COLUMN>15</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>261</LINE>
        <COLUMN>22</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>238</LINE>
        <COLUMN>0</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>238</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>240</LINE>
        <COLUMN>11</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>241</LINE>
        <COLUMN>15</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>241</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>242</LINE>
        <COLUMN>37</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>241</LINE>
        <COLUMN>0</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>241</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>247</LINE>
        <COLUMN>10</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>249</LINE>
        <COLUMN>30</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>250</LINE>
        <COLUMN>50</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>251</LINE>
        <COLUMN>20</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>254</LINE>
        <COLUMN>29</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>258</LINE>
        <COLUMN>19</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>260</LINE>
        <COLUMN>15</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>261</LINE>
        <COLUMN>22</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>238</LINE>
        <COLUMN>0</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>238</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>265</LINE>
        <COLUMN>19</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>266</LINE>
        <COLUMN>13</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>266</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>267</LINE>
        <COLUMN>11</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>269</LINE>
        <COLUMN>15</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>269</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>270</LINE>
        <COLUMN>38</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>269</LINE>
        <COLUMN>0</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>269</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>275</LINE>
        <COLUMN>10</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>276</LINE>
        <COLUMN>30</COLUMN>
      </SFA>
    </PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContraction.h</FILENAME>
      <LINE>152</LINE>
      <COLUMN>20</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'Eigen::TensorContractionEvaluatorBase&lt;Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::DefaultDevice&gt; &gt;::m_left_contracting_strides' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>Eigen::TensorContractionEvaluatorBase&lt;Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::DefaultDevice&gt; &gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorContractionEvaluatorBase@U?$TensorEvaluator@$$CBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$01$0A@_J@Eigen@@$$CBV34@@Eigen@@UDefaultDevice@2@@Eigen@@@Eigen@@QEAA@AEBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$01$0A@_J@Eigen@@$$CBV34@@1@AEBUDefaultDevice@1@@Z</DECORATED>
    <FUNCLINE>152</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>Eigen::TensorContractionEvaluatorBase&lt;Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::DefaultDevice&gt; &gt;::m_left_contracting_strides</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContraction.h</FILENAME>
      <LINE>152</LINE>
      <COLUMN>20</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'Eigen::TensorContractionEvaluatorBase&lt;Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::DefaultDevice&gt; &gt;::m_right_contracting_strides' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>Eigen::TensorContractionEvaluatorBase&lt;Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::DefaultDevice&gt; &gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorContractionEvaluatorBase@U?$TensorEvaluator@$$CBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$01$0A@_J@Eigen@@$$CBV34@@Eigen@@UDefaultDevice@2@@Eigen@@@Eigen@@QEAA@AEBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$01$0A@_J@Eigen@@$$CBV34@@1@AEBUDefaultDevice@1@@Z</DECORATED>
    <FUNCLINE>152</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>Eigen::TensorContractionEvaluatorBase&lt;Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::DefaultDevice&gt; &gt;::m_right_contracting_strides</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContraction.h</FILENAME>
      <LINE>152</LINE>
      <COLUMN>20</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'Eigen::TensorContractionEvaluatorBase&lt;Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::DefaultDevice&gt; &gt;::m_left_nocontract_strides' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>Eigen::TensorContractionEvaluatorBase&lt;Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::DefaultDevice&gt; &gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorContractionEvaluatorBase@U?$TensorEvaluator@$$CBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$01$0A@_J@Eigen@@$$CBV34@@Eigen@@UDefaultDevice@2@@Eigen@@@Eigen@@QEAA@AEBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$01$0A@_J@Eigen@@$$CBV34@@1@AEBUDefaultDevice@1@@Z</DECORATED>
    <FUNCLINE>152</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>Eigen::TensorContractionEvaluatorBase&lt;Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::DefaultDevice&gt; &gt;::m_left_nocontract_strides</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContraction.h</FILENAME>
      <LINE>152</LINE>
      <COLUMN>20</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'Eigen::TensorContractionEvaluatorBase&lt;Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::DefaultDevice&gt; &gt;::m_right_nocontract_strides' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>Eigen::TensorContractionEvaluatorBase&lt;Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::DefaultDevice&gt; &gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorContractionEvaluatorBase@U?$TensorEvaluator@$$CBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$01$0A@_J@Eigen@@$$CBV34@@Eigen@@UDefaultDevice@2@@Eigen@@@Eigen@@QEAA@AEBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$01$0A@_J@Eigen@@$$CBV34@@1@AEBUDefaultDevice@1@@Z</DECORATED>
    <FUNCLINE>152</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>Eigen::TensorContractionEvaluatorBase&lt;Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::DefaultDevice&gt; &gt;::m_right_nocontract_strides</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContraction.h</FILENAME>
      <LINE>184</LINE>
      <COLUMN>62</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorContractionEvaluatorBase&lt;Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::DefaultDevice&gt; &gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorContractionEvaluatorBase@U?$TensorEvaluator@$$CBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$01$0A@_J@Eigen@@$$CBV34@@Eigen@@UDefaultDevice@2@@Eigen@@@Eigen@@QEAA@AEBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$01$0A@_J@Eigen@@$$CBV34@@1@AEBUDefaultDevice@1@@Z</DECORATED>
    <FUNCLINE>152</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContraction.h</FILENAME>
      <LINE>184</LINE>
      <COLUMN>58</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorContractionEvaluatorBase&lt;Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::DefaultDevice&gt; &gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorContractionEvaluatorBase@U?$TensorEvaluator@$$CBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$01$0A@_J@Eigen@@$$CBV34@@Eigen@@UDefaultDevice@2@@Eigen@@@Eigen@@QEAA@AEBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$01$0A@_J@Eigen@@$$CBV34@@1@AEBUDefaultDevice@1@@Z</DECORATED>
    <FUNCLINE>152</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContraction.h</FILENAME>
      <LINE>187</LINE>
      <COLUMN>64</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorContractionEvaluatorBase&lt;Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::DefaultDevice&gt; &gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorContractionEvaluatorBase@U?$TensorEvaluator@$$CBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$01$0A@_J@Eigen@@$$CBV34@@Eigen@@UDefaultDevice@2@@Eigen@@@Eigen@@QEAA@AEBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$01$0A@_J@Eigen@@$$CBV34@@1@AEBUDefaultDevice@1@@Z</DECORATED>
    <FUNCLINE>152</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContraction.h</FILENAME>
      <LINE>187</LINE>
      <COLUMN>60</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorContractionEvaluatorBase&lt;Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::DefaultDevice&gt; &gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorContractionEvaluatorBase@U?$TensorEvaluator@$$CBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$01$0A@_J@Eigen@@$$CBV34@@Eigen@@UDefaultDevice@2@@Eigen@@@Eigen@@QEAA@AEBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$01$0A@_J@Eigen@@$$CBV34@@1@AEBUDefaultDevice@1@@Z</DECORATED>
    <FUNCLINE>152</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContraction.h</FILENAME>
      <LINE>192</LINE>
      <COLUMN>77</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorContractionEvaluatorBase&lt;Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::DefaultDevice&gt; &gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorContractionEvaluatorBase@U?$TensorEvaluator@$$CBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$01$0A@_J@Eigen@@$$CBV34@@Eigen@@UDefaultDevice@2@@Eigen@@@Eigen@@QEAA@AEBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$01$0A@_J@Eigen@@$$CBV34@@1@AEBUDefaultDevice@1@@Z</DECORATED>
    <FUNCLINE>152</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContraction.h</FILENAME>
      <LINE>193</LINE>
      <COLUMN>78</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorContractionEvaluatorBase&lt;Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::DefaultDevice&gt; &gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorContractionEvaluatorBase@U?$TensorEvaluator@$$CBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$01$0A@_J@Eigen@@$$CBV34@@Eigen@@UDefaultDevice@2@@Eigen@@@Eigen@@QEAA@AEBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$01$0A@_J@Eigen@@$$CBV34@@1@AEBUDefaultDevice@1@@Z</DECORATED>
    <FUNCLINE>152</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContraction.h</FILENAME>
      <LINE>213</LINE>
      <COLUMN>19</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorContractionEvaluatorBase&lt;Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::DefaultDevice&gt; &gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorContractionEvaluatorBase@U?$TensorEvaluator@$$CBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$01$0A@_J@Eigen@@$$CBV34@@Eigen@@UDefaultDevice@2@@Eigen@@@Eigen@@QEAA@AEBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$01$0A@_J@Eigen@@$$CBV34@@1@AEBUDefaultDevice@1@@Z</DECORATED>
    <FUNCLINE>152</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContraction.h</FILENAME>
      <LINE>219</LINE>
      <COLUMN>19</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorContractionEvaluatorBase&lt;Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::DefaultDevice&gt; &gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorContractionEvaluatorBase@U?$TensorEvaluator@$$CBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$01$0A@_J@Eigen@@$$CBV34@@Eigen@@UDefaultDevice@2@@Eigen@@@Eigen@@QEAA@AEBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$01$0A@_J@Eigen@@$$CBV34@@1@AEBUDefaultDevice@1@@Z</DECORATED>
    <FUNCLINE>152</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContraction.h</FILENAME>
      <LINE>254</LINE>
      <COLUMN>26</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorContractionEvaluatorBase&lt;Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::DefaultDevice&gt; &gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorContractionEvaluatorBase@U?$TensorEvaluator@$$CBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$01$0A@_J@Eigen@@$$CBV34@@Eigen@@UDefaultDevice@2@@Eigen@@@Eigen@@QEAA@AEBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$01$0A@_J@Eigen@@$$CBV34@@1@AEBUDefaultDevice@1@@Z</DECORATED>
    <FUNCLINE>152</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContraction.h</FILENAME>
      <LINE>255</LINE>
      <COLUMN>36</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorContractionEvaluatorBase&lt;Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::DefaultDevice&gt; &gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorContractionEvaluatorBase@U?$TensorEvaluator@$$CBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$01$0A@_J@Eigen@@$$CBV34@@Eigen@@UDefaultDevice@2@@Eigen@@@Eigen@@QEAA@AEBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$01$0A@_J@Eigen@@$$CBV34@@1@AEBUDefaultDevice@1@@Z</DECORATED>
    <FUNCLINE>152</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContraction.h</FILENAME>
      <LINE>277</LINE>
      <COLUMN>26</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorContractionEvaluatorBase&lt;Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::DefaultDevice&gt; &gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorContractionEvaluatorBase@U?$TensorEvaluator@$$CBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$01$0A@_J@Eigen@@$$CBV34@@Eigen@@UDefaultDevice@2@@Eigen@@@Eigen@@QEAA@AEBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$01$0A@_J@Eigen@@$$CBV34@@1@AEBUDefaultDevice@1@@Z</DECORATED>
    <FUNCLINE>152</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContraction.h</FILENAME>
      <LINE>278</LINE>
      <COLUMN>36</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorContractionEvaluatorBase&lt;Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::DefaultDevice&gt; &gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorContractionEvaluatorBase@U?$TensorEvaluator@$$CBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$01$0A@_J@Eigen@@$$CBV34@@Eigen@@UDefaultDevice@2@@Eigen@@@Eigen@@QEAA@AEBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$01$0A@_J@Eigen@@$$CBV34@@1@AEBUDefaultDevice@1@@Z</DECORATED>
    <FUNCLINE>152</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContraction.h</FILENAME>
      <LINE>305</LINE>
      <COLUMN>21</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorContractionEvaluatorBase&lt;Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::DefaultDevice&gt; &gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorContractionEvaluatorBase@U?$TensorEvaluator@$$CBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$01$0A@_J@Eigen@@$$CBV34@@Eigen@@UDefaultDevice@2@@Eigen@@@Eigen@@QEAA@AEBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$01$0A@_J@Eigen@@$$CBV34@@1@AEBUDefaultDevice@1@@Z</DECORATED>
    <FUNCLINE>152</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContraction.h</FILENAME>
      <LINE>312</LINE>
      <COLUMN>44</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorContractionEvaluatorBase&lt;Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::DefaultDevice&gt; &gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorContractionEvaluatorBase@U?$TensorEvaluator@$$CBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$01$0A@_J@Eigen@@$$CBV34@@Eigen@@UDefaultDevice@2@@Eigen@@@Eigen@@QEAA@AEBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$01$0A@_J@Eigen@@$$CBV34@@1@AEBUDefaultDevice@1@@Z</DECORATED>
    <FUNCLINE>152</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContraction.h</FILENAME>
      <LINE>250</LINE>
      <COLUMN>50</COLUMN>
    </SFA>
    <DEFECTCODE>28020</DEFECTCODE>
    <DESCRIPTION>The expression '0&lt;=_Param_(1)&amp;&amp;_Param_(1)&lt;=1-1' is not true at this call.</DESCRIPTION>
    <FUNCTION>Eigen::TensorContractionEvaluatorBase&lt;Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt; &gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorContractionEvaluatorBase@U?$TensorEvaluator@$$CBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$01$0A@_J@Eigen@@$$CBV34@@Eigen@@UThreadPoolDevice@2@@Eigen@@@Eigen@@QEAA@AEBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$01$0A@_J@Eigen@@$$CBV34@@1@AEBUThreadPoolDevice@1@@Z</DECORATED>
    <FUNCLINE>152</FUNCLINE>
    <PATH>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>159</LINE>
        <COLUMN>23</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>154</LINE>
        <COLUMN>16</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>156</LINE>
        <COLUMN>15</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>158</LINE>
        <COLUMN>16</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>159</LINE>
        <COLUMN>16</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>165</LINE>
        <COLUMN>2</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>166</LINE>
        <COLUMN>2</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>167</LINE>
        <COLUMN>2</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>168</LINE>
        <COLUMN>33</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>170</LINE>
        <COLUMN>15</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>170</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>171</LINE>
        <COLUMN>26</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>170</LINE>
        <COLUMN>0</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>170</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>171</LINE>
        <COLUMN>26</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>170</LINE>
        <COLUMN>0</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>170</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>173</LINE>
        <COLUMN>15</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>173</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>174</LINE>
        <COLUMN>27</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>173</LINE>
        <COLUMN>0</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>173</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>174</LINE>
        <COLUMN>27</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>173</LINE>
        <COLUMN>0</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>173</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>177</LINE>
        <COLUMN>15</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>177</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>178</LINE>
        <COLUMN>33</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>179</LINE>
        <COLUMN>34</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>177</LINE>
        <COLUMN>0</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>177</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>199</LINE>
        <COLUMN>13</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>199</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>200</LINE>
        <COLUMN>15</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>200</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>199</LINE>
        <COLUMN>0</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>199</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>210</LINE>
        <COLUMN>2</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>211</LINE>
        <COLUMN>19</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>212</LINE>
        <COLUMN>13</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>212</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>213</LINE>
        <COLUMN>23</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>212</LINE>
        <COLUMN>12</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>212</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>216</LINE>
        <COLUMN>2</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>217</LINE>
        <COLUMN>19</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>218</LINE>
        <COLUMN>13</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>218</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>219</LINE>
        <COLUMN>23</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>218</LINE>
        <COLUMN>12</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>218</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>222</LINE>
        <COLUMN>27</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>223</LINE>
        <COLUMN>27</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>224</LINE>
        <COLUMN>27</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>226</LINE>
        <COLUMN>13</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>227</LINE>
        <COLUMN>13</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>228</LINE>
        <COLUMN>13</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>234</LINE>
        <COLUMN>31</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>235</LINE>
        <COLUMN>8</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>236</LINE>
        <COLUMN>17</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>238</LINE>
        <COLUMN>13</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>238</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>240</LINE>
        <COLUMN>11</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>241</LINE>
        <COLUMN>15</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>241</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>242</LINE>
        <COLUMN>37</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>241</LINE>
        <COLUMN>0</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>241</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>247</LINE>
        <COLUMN>10</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>249</LINE>
        <COLUMN>30</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>250</LINE>
        <COLUMN>50</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>251</LINE>
        <COLUMN>20</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>254</LINE>
        <COLUMN>29</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>258</LINE>
        <COLUMN>19</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>260</LINE>
        <COLUMN>15</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>261</LINE>
        <COLUMN>22</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>238</LINE>
        <COLUMN>0</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>238</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>240</LINE>
        <COLUMN>11</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>241</LINE>
        <COLUMN>15</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>241</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>242</LINE>
        <COLUMN>37</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>241</LINE>
        <COLUMN>0</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>241</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>247</LINE>
        <COLUMN>10</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>249</LINE>
        <COLUMN>30</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>250</LINE>
        <COLUMN>50</COLUMN>
      </SFA>
    </PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContraction.h</FILENAME>
      <LINE>276</LINE>
      <COLUMN>30</COLUMN>
    </SFA>
    <DEFECTCODE>28020</DEFECTCODE>
    <DESCRIPTION>The expression '0&lt;=_Param_(1)&amp;&amp;_Param_(1)&lt;=2-1' is not true at this call.</DESCRIPTION>
    <FUNCTION>Eigen::TensorContractionEvaluatorBase&lt;Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt; &gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorContractionEvaluatorBase@U?$TensorEvaluator@$$CBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$01$0A@_J@Eigen@@$$CBV34@@Eigen@@UThreadPoolDevice@2@@Eigen@@@Eigen@@QEAA@AEBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$01$0A@_J@Eigen@@$$CBV34@@1@AEBUThreadPoolDevice@1@@Z</DECORATED>
    <FUNCLINE>152</FUNCLINE>
    <PATH>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>159</LINE>
        <COLUMN>23</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>154</LINE>
        <COLUMN>16</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>156</LINE>
        <COLUMN>15</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>158</LINE>
        <COLUMN>16</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>159</LINE>
        <COLUMN>16</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>165</LINE>
        <COLUMN>2</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>166</LINE>
        <COLUMN>2</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>167</LINE>
        <COLUMN>2</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>168</LINE>
        <COLUMN>33</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>170</LINE>
        <COLUMN>15</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>170</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>171</LINE>
        <COLUMN>26</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>170</LINE>
        <COLUMN>0</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>170</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>171</LINE>
        <COLUMN>26</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>170</LINE>
        <COLUMN>0</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>170</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>173</LINE>
        <COLUMN>15</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>173</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>174</LINE>
        <COLUMN>27</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>173</LINE>
        <COLUMN>0</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>173</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>174</LINE>
        <COLUMN>27</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>173</LINE>
        <COLUMN>0</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>173</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>177</LINE>
        <COLUMN>15</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>177</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>178</LINE>
        <COLUMN>33</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>179</LINE>
        <COLUMN>34</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>177</LINE>
        <COLUMN>0</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>177</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>199</LINE>
        <COLUMN>13</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>199</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>200</LINE>
        <COLUMN>15</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>200</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>199</LINE>
        <COLUMN>0</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>199</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>210</LINE>
        <COLUMN>2</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>211</LINE>
        <COLUMN>19</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>212</LINE>
        <COLUMN>13</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>212</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>213</LINE>
        <COLUMN>23</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>212</LINE>
        <COLUMN>12</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>212</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>216</LINE>
        <COLUMN>2</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>217</LINE>
        <COLUMN>19</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>218</LINE>
        <COLUMN>13</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>218</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>219</LINE>
        <COLUMN>23</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>218</LINE>
        <COLUMN>12</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>218</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>222</LINE>
        <COLUMN>27</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>223</LINE>
        <COLUMN>27</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>224</LINE>
        <COLUMN>27</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>226</LINE>
        <COLUMN>13</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>227</LINE>
        <COLUMN>13</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>228</LINE>
        <COLUMN>13</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>234</LINE>
        <COLUMN>31</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>235</LINE>
        <COLUMN>8</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>236</LINE>
        <COLUMN>17</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>238</LINE>
        <COLUMN>13</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>238</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>240</LINE>
        <COLUMN>11</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>241</LINE>
        <COLUMN>15</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>241</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>242</LINE>
        <COLUMN>37</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>241</LINE>
        <COLUMN>0</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>241</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>247</LINE>
        <COLUMN>10</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>249</LINE>
        <COLUMN>30</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>250</LINE>
        <COLUMN>50</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>251</LINE>
        <COLUMN>20</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>254</LINE>
        <COLUMN>29</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>258</LINE>
        <COLUMN>19</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>260</LINE>
        <COLUMN>15</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>261</LINE>
        <COLUMN>22</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>238</LINE>
        <COLUMN>0</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>238</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>240</LINE>
        <COLUMN>11</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>241</LINE>
        <COLUMN>15</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>241</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>242</LINE>
        <COLUMN>37</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>241</LINE>
        <COLUMN>0</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>241</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>247</LINE>
        <COLUMN>10</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>249</LINE>
        <COLUMN>30</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>250</LINE>
        <COLUMN>50</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>251</LINE>
        <COLUMN>20</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>254</LINE>
        <COLUMN>29</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>258</LINE>
        <COLUMN>19</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>260</LINE>
        <COLUMN>15</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>261</LINE>
        <COLUMN>22</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>238</LINE>
        <COLUMN>0</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>238</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>265</LINE>
        <COLUMN>19</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>266</LINE>
        <COLUMN>13</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>266</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>267</LINE>
        <COLUMN>11</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>269</LINE>
        <COLUMN>15</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>269</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>270</LINE>
        <COLUMN>38</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>269</LINE>
        <COLUMN>0</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>269</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>275</LINE>
        <COLUMN>10</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>276</LINE>
        <COLUMN>30</COLUMN>
      </SFA>
    </PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContraction.h</FILENAME>
      <LINE>152</LINE>
      <COLUMN>20</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'Eigen::TensorContractionEvaluatorBase&lt;Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt; &gt;::m_left_contracting_strides' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>Eigen::TensorContractionEvaluatorBase&lt;Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt; &gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorContractionEvaluatorBase@U?$TensorEvaluator@$$CBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$01$0A@_J@Eigen@@$$CBV34@@Eigen@@UThreadPoolDevice@2@@Eigen@@@Eigen@@QEAA@AEBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$01$0A@_J@Eigen@@$$CBV34@@1@AEBUThreadPoolDevice@1@@Z</DECORATED>
    <FUNCLINE>152</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>Eigen::TensorContractionEvaluatorBase&lt;Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt; &gt;::m_left_contracting_strides</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContraction.h</FILENAME>
      <LINE>152</LINE>
      <COLUMN>20</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'Eigen::TensorContractionEvaluatorBase&lt;Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt; &gt;::m_right_contracting_strides' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>Eigen::TensorContractionEvaluatorBase&lt;Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt; &gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorContractionEvaluatorBase@U?$TensorEvaluator@$$CBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$01$0A@_J@Eigen@@$$CBV34@@Eigen@@UThreadPoolDevice@2@@Eigen@@@Eigen@@QEAA@AEBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$01$0A@_J@Eigen@@$$CBV34@@1@AEBUThreadPoolDevice@1@@Z</DECORATED>
    <FUNCLINE>152</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>Eigen::TensorContractionEvaluatorBase&lt;Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt; &gt;::m_right_contracting_strides</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContraction.h</FILENAME>
      <LINE>152</LINE>
      <COLUMN>20</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'Eigen::TensorContractionEvaluatorBase&lt;Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt; &gt;::m_left_nocontract_strides' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>Eigen::TensorContractionEvaluatorBase&lt;Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt; &gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorContractionEvaluatorBase@U?$TensorEvaluator@$$CBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$01$0A@_J@Eigen@@$$CBV34@@Eigen@@UThreadPoolDevice@2@@Eigen@@@Eigen@@QEAA@AEBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$01$0A@_J@Eigen@@$$CBV34@@1@AEBUThreadPoolDevice@1@@Z</DECORATED>
    <FUNCLINE>152</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>Eigen::TensorContractionEvaluatorBase&lt;Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt; &gt;::m_left_nocontract_strides</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContraction.h</FILENAME>
      <LINE>152</LINE>
      <COLUMN>20</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'Eigen::TensorContractionEvaluatorBase&lt;Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt; &gt;::m_right_nocontract_strides' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>Eigen::TensorContractionEvaluatorBase&lt;Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt; &gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorContractionEvaluatorBase@U?$TensorEvaluator@$$CBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$01$0A@_J@Eigen@@$$CBV34@@Eigen@@UThreadPoolDevice@2@@Eigen@@@Eigen@@QEAA@AEBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$01$0A@_J@Eigen@@$$CBV34@@1@AEBUThreadPoolDevice@1@@Z</DECORATED>
    <FUNCLINE>152</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>Eigen::TensorContractionEvaluatorBase&lt;Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt; &gt;::m_right_nocontract_strides</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContraction.h</FILENAME>
      <LINE>184</LINE>
      <COLUMN>62</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorContractionEvaluatorBase&lt;Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt; &gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorContractionEvaluatorBase@U?$TensorEvaluator@$$CBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$01$0A@_J@Eigen@@$$CBV34@@Eigen@@UThreadPoolDevice@2@@Eigen@@@Eigen@@QEAA@AEBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$01$0A@_J@Eigen@@$$CBV34@@1@AEBUThreadPoolDevice@1@@Z</DECORATED>
    <FUNCLINE>152</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContraction.h</FILENAME>
      <LINE>184</LINE>
      <COLUMN>58</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorContractionEvaluatorBase&lt;Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt; &gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorContractionEvaluatorBase@U?$TensorEvaluator@$$CBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$01$0A@_J@Eigen@@$$CBV34@@Eigen@@UThreadPoolDevice@2@@Eigen@@@Eigen@@QEAA@AEBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$01$0A@_J@Eigen@@$$CBV34@@1@AEBUThreadPoolDevice@1@@Z</DECORATED>
    <FUNCLINE>152</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContraction.h</FILENAME>
      <LINE>187</LINE>
      <COLUMN>64</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorContractionEvaluatorBase&lt;Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt; &gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorContractionEvaluatorBase@U?$TensorEvaluator@$$CBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$01$0A@_J@Eigen@@$$CBV34@@Eigen@@UThreadPoolDevice@2@@Eigen@@@Eigen@@QEAA@AEBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$01$0A@_J@Eigen@@$$CBV34@@1@AEBUThreadPoolDevice@1@@Z</DECORATED>
    <FUNCLINE>152</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContraction.h</FILENAME>
      <LINE>187</LINE>
      <COLUMN>60</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorContractionEvaluatorBase&lt;Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt; &gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorContractionEvaluatorBase@U?$TensorEvaluator@$$CBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$01$0A@_J@Eigen@@$$CBV34@@Eigen@@UThreadPoolDevice@2@@Eigen@@@Eigen@@QEAA@AEBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$01$0A@_J@Eigen@@$$CBV34@@1@AEBUThreadPoolDevice@1@@Z</DECORATED>
    <FUNCLINE>152</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContraction.h</FILENAME>
      <LINE>192</LINE>
      <COLUMN>77</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorContractionEvaluatorBase&lt;Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt; &gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorContractionEvaluatorBase@U?$TensorEvaluator@$$CBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$01$0A@_J@Eigen@@$$CBV34@@Eigen@@UThreadPoolDevice@2@@Eigen@@@Eigen@@QEAA@AEBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$01$0A@_J@Eigen@@$$CBV34@@1@AEBUThreadPoolDevice@1@@Z</DECORATED>
    <FUNCLINE>152</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContraction.h</FILENAME>
      <LINE>193</LINE>
      <COLUMN>78</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorContractionEvaluatorBase&lt;Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt; &gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorContractionEvaluatorBase@U?$TensorEvaluator@$$CBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$01$0A@_J@Eigen@@$$CBV34@@Eigen@@UThreadPoolDevice@2@@Eigen@@@Eigen@@QEAA@AEBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$01$0A@_J@Eigen@@$$CBV34@@1@AEBUThreadPoolDevice@1@@Z</DECORATED>
    <FUNCLINE>152</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContraction.h</FILENAME>
      <LINE>213</LINE>
      <COLUMN>19</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorContractionEvaluatorBase&lt;Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt; &gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorContractionEvaluatorBase@U?$TensorEvaluator@$$CBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$01$0A@_J@Eigen@@$$CBV34@@Eigen@@UThreadPoolDevice@2@@Eigen@@@Eigen@@QEAA@AEBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$01$0A@_J@Eigen@@$$CBV34@@1@AEBUThreadPoolDevice@1@@Z</DECORATED>
    <FUNCLINE>152</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContraction.h</FILENAME>
      <LINE>219</LINE>
      <COLUMN>19</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorContractionEvaluatorBase&lt;Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt; &gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorContractionEvaluatorBase@U?$TensorEvaluator@$$CBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$01$0A@_J@Eigen@@$$CBV34@@Eigen@@UThreadPoolDevice@2@@Eigen@@@Eigen@@QEAA@AEBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$01$0A@_J@Eigen@@$$CBV34@@1@AEBUThreadPoolDevice@1@@Z</DECORATED>
    <FUNCLINE>152</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContraction.h</FILENAME>
      <LINE>254</LINE>
      <COLUMN>26</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorContractionEvaluatorBase&lt;Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt; &gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorContractionEvaluatorBase@U?$TensorEvaluator@$$CBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$01$0A@_J@Eigen@@$$CBV34@@Eigen@@UThreadPoolDevice@2@@Eigen@@@Eigen@@QEAA@AEBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$01$0A@_J@Eigen@@$$CBV34@@1@AEBUThreadPoolDevice@1@@Z</DECORATED>
    <FUNCLINE>152</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContraction.h</FILENAME>
      <LINE>255</LINE>
      <COLUMN>36</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorContractionEvaluatorBase&lt;Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt; &gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorContractionEvaluatorBase@U?$TensorEvaluator@$$CBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$01$0A@_J@Eigen@@$$CBV34@@Eigen@@UThreadPoolDevice@2@@Eigen@@@Eigen@@QEAA@AEBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$01$0A@_J@Eigen@@$$CBV34@@1@AEBUThreadPoolDevice@1@@Z</DECORATED>
    <FUNCLINE>152</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContraction.h</FILENAME>
      <LINE>277</LINE>
      <COLUMN>26</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorContractionEvaluatorBase&lt;Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt; &gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorContractionEvaluatorBase@U?$TensorEvaluator@$$CBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$01$0A@_J@Eigen@@$$CBV34@@Eigen@@UThreadPoolDevice@2@@Eigen@@@Eigen@@QEAA@AEBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$01$0A@_J@Eigen@@$$CBV34@@1@AEBUThreadPoolDevice@1@@Z</DECORATED>
    <FUNCLINE>152</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContraction.h</FILENAME>
      <LINE>278</LINE>
      <COLUMN>36</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorContractionEvaluatorBase&lt;Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt; &gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorContractionEvaluatorBase@U?$TensorEvaluator@$$CBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$01$0A@_J@Eigen@@$$CBV34@@Eigen@@UThreadPoolDevice@2@@Eigen@@@Eigen@@QEAA@AEBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$01$0A@_J@Eigen@@$$CBV34@@1@AEBUThreadPoolDevice@1@@Z</DECORATED>
    <FUNCLINE>152</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContraction.h</FILENAME>
      <LINE>305</LINE>
      <COLUMN>21</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorContractionEvaluatorBase&lt;Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt; &gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorContractionEvaluatorBase@U?$TensorEvaluator@$$CBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$01$0A@_J@Eigen@@$$CBV34@@Eigen@@UThreadPoolDevice@2@@Eigen@@@Eigen@@QEAA@AEBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$01$0A@_J@Eigen@@$$CBV34@@1@AEBUThreadPoolDevice@1@@Z</DECORATED>
    <FUNCLINE>152</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContraction.h</FILENAME>
      <LINE>312</LINE>
      <COLUMN>44</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorContractionEvaluatorBase&lt;Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt; &gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorContractionEvaluatorBase@U?$TensorEvaluator@$$CBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$01$0A@_J@Eigen@@$$CBV34@@Eigen@@UThreadPoolDevice@2@@Eigen@@@Eigen@@QEAA@AEBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$01$0A@_J@Eigen@@$$CBV34@@1@AEBUThreadPoolDevice@1@@Z</DECORATED>
    <FUNCLINE>152</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContraction.h</FILENAME>
      <LINE>212</LINE>
      <COLUMN>4</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>Ill-defined for-loop:  initial condition does not satisfy test.  Loop body not executed.</DESCRIPTION>
    <FUNCTION>Eigen::TensorContractionEvaluatorBase&lt;Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::TensorMap&lt;Eigen::Tensor&lt;float,2,0,__int64&gt;,0,Eigen::MakePointer&gt; const &gt; const ,Eigen::DefaultDevice&gt; &gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorContractionEvaluatorBase@U?$TensorEvaluator@$$CBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$00$0A@_J@Eigen@@$$CBV?$TensorMap@V?$Tensor@M$01$0A@_J@Eigen@@$0A@UMakePointer@2@@4@@Eigen@@UDefaultDevice@2@@Eigen@@@Eigen@@QEAA@AEBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$00$0A@_J@Eigen@@$$CBV?$TensorMap@V?$Tensor@M$01$0A@_J@Eigen@@$0A@UMakePointer@2@@4@@1@AEBUDefaultDevice@1@@Z</DECORATED>
    <FUNCLINE>152</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContraction.h</FILENAME>
      <LINE>276</LINE>
      <COLUMN>30</COLUMN>
    </SFA>
    <DEFECTCODE>28020</DEFECTCODE>
    <DESCRIPTION>The expression '0&lt;=_Param_(1)&amp;&amp;_Param_(1)&lt;=1-1' is not true at this call.</DESCRIPTION>
    <FUNCTION>Eigen::TensorContractionEvaluatorBase&lt;Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::TensorMap&lt;Eigen::Tensor&lt;float,2,0,__int64&gt;,0,Eigen::MakePointer&gt; const &gt; const ,Eigen::DefaultDevice&gt; &gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorContractionEvaluatorBase@U?$TensorEvaluator@$$CBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$00$0A@_J@Eigen@@$$CBV?$TensorMap@V?$Tensor@M$01$0A@_J@Eigen@@$0A@UMakePointer@2@@4@@Eigen@@UDefaultDevice@2@@Eigen@@@Eigen@@QEAA@AEBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$00$0A@_J@Eigen@@$$CBV?$TensorMap@V?$Tensor@M$01$0A@_J@Eigen@@$0A@UMakePointer@2@@4@@1@AEBUDefaultDevice@1@@Z</DECORATED>
    <FUNCLINE>152</FUNCLINE>
    <PATH>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>159</LINE>
        <COLUMN>23</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>154</LINE>
        <COLUMN>16</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>156</LINE>
        <COLUMN>15</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>158</LINE>
        <COLUMN>16</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>159</LINE>
        <COLUMN>16</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>165</LINE>
        <COLUMN>2</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>166</LINE>
        <COLUMN>2</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>167</LINE>
        <COLUMN>2</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>168</LINE>
        <COLUMN>33</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>170</LINE>
        <COLUMN>15</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>170</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>171</LINE>
        <COLUMN>26</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>170</LINE>
        <COLUMN>0</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>170</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>173</LINE>
        <COLUMN>15</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>173</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>174</LINE>
        <COLUMN>27</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>173</LINE>
        <COLUMN>0</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>173</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>174</LINE>
        <COLUMN>27</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>173</LINE>
        <COLUMN>0</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>173</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>177</LINE>
        <COLUMN>15</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>177</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>178</LINE>
        <COLUMN>33</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>179</LINE>
        <COLUMN>34</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>177</LINE>
        <COLUMN>0</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>177</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>199</LINE>
        <COLUMN>13</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>199</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>200</LINE>
        <COLUMN>15</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>200</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>199</LINE>
        <COLUMN>0</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>199</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>210</LINE>
        <COLUMN>2</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>211</LINE>
        <COLUMN>19</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>212</LINE>
        <COLUMN>13</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>212</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>216</LINE>
        <COLUMN>2</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>217</LINE>
        <COLUMN>19</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>218</LINE>
        <COLUMN>13</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>218</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>219</LINE>
        <COLUMN>23</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>218</LINE>
        <COLUMN>12</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>218</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>222</LINE>
        <COLUMN>27</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>223</LINE>
        <COLUMN>27</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>224</LINE>
        <COLUMN>27</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>226</LINE>
        <COLUMN>13</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>227</LINE>
        <COLUMN>13</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>228</LINE>
        <COLUMN>13</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>234</LINE>
        <COLUMN>31</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>235</LINE>
        <COLUMN>8</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>236</LINE>
        <COLUMN>17</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>238</LINE>
        <COLUMN>13</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>238</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>240</LINE>
        <COLUMN>11</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>241</LINE>
        <COLUMN>15</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>241</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>242</LINE>
        <COLUMN>37</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>241</LINE>
        <COLUMN>0</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>241</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>247</LINE>
        <COLUMN>10</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>249</LINE>
        <COLUMN>30</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>250</LINE>
        <COLUMN>50</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>251</LINE>
        <COLUMN>20</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>254</LINE>
        <COLUMN>29</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>258</LINE>
        <COLUMN>19</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>260</LINE>
        <COLUMN>15</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>261</LINE>
        <COLUMN>22</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>238</LINE>
        <COLUMN>0</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>238</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>265</LINE>
        <COLUMN>19</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>266</LINE>
        <COLUMN>13</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>266</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>267</LINE>
        <COLUMN>11</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>269</LINE>
        <COLUMN>15</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>269</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>270</LINE>
        <COLUMN>38</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>269</LINE>
        <COLUMN>0</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>269</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>275</LINE>
        <COLUMN>10</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>276</LINE>
        <COLUMN>30</COLUMN>
      </SFA>
    </PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContraction.h</FILENAME>
      <LINE>152</LINE>
      <COLUMN>20</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'Eigen::TensorContractionEvaluatorBase&lt;Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::TensorMap&lt;Eigen::Tensor&lt;float,2,0,__int64&gt;,0,Eigen::MakePointer&gt; const &gt; const ,Eigen::DefaultDevice&gt; &gt;::m_left_nocontract_strides' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>Eigen::TensorContractionEvaluatorBase&lt;Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::TensorMap&lt;Eigen::Tensor&lt;float,2,0,__int64&gt;,0,Eigen::MakePointer&gt; const &gt; const ,Eigen::DefaultDevice&gt; &gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorContractionEvaluatorBase@U?$TensorEvaluator@$$CBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$00$0A@_J@Eigen@@$$CBV?$TensorMap@V?$Tensor@M$01$0A@_J@Eigen@@$0A@UMakePointer@2@@4@@Eigen@@UDefaultDevice@2@@Eigen@@@Eigen@@QEAA@AEBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$00$0A@_J@Eigen@@$$CBV?$TensorMap@V?$Tensor@M$01$0A@_J@Eigen@@$0A@UMakePointer@2@@4@@1@AEBUDefaultDevice@1@@Z</DECORATED>
    <FUNCLINE>152</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>Eigen::TensorContractionEvaluatorBase&lt;Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::TensorMap&lt;Eigen::Tensor&lt;float,2,0,__int64&gt;,0,Eigen::MakePointer&gt; const &gt; const ,Eigen::DefaultDevice&gt; &gt;::m_left_nocontract_strides</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContraction.h</FILENAME>
      <LINE>152</LINE>
      <COLUMN>20</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'Eigen::TensorContractionEvaluatorBase&lt;Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::TensorMap&lt;Eigen::Tensor&lt;float,2,0,__int64&gt;,0,Eigen::MakePointer&gt; const &gt; const ,Eigen::DefaultDevice&gt; &gt;::m_right_nocontract_strides' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>Eigen::TensorContractionEvaluatorBase&lt;Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::TensorMap&lt;Eigen::Tensor&lt;float,2,0,__int64&gt;,0,Eigen::MakePointer&gt; const &gt; const ,Eigen::DefaultDevice&gt; &gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorContractionEvaluatorBase@U?$TensorEvaluator@$$CBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$00$0A@_J@Eigen@@$$CBV?$TensorMap@V?$Tensor@M$01$0A@_J@Eigen@@$0A@UMakePointer@2@@4@@Eigen@@UDefaultDevice@2@@Eigen@@@Eigen@@QEAA@AEBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$00$0A@_J@Eigen@@$$CBV?$TensorMap@V?$Tensor@M$01$0A@_J@Eigen@@$0A@UMakePointer@2@@4@@1@AEBUDefaultDevice@1@@Z</DECORATED>
    <FUNCLINE>152</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>Eigen::TensorContractionEvaluatorBase&lt;Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::TensorMap&lt;Eigen::Tensor&lt;float,2,0,__int64&gt;,0,Eigen::MakePointer&gt; const &gt; const ,Eigen::DefaultDevice&gt; &gt;::m_right_nocontract_strides</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContraction.h</FILENAME>
      <LINE>152</LINE>
      <COLUMN>20</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'Eigen::TensorContractionEvaluatorBase&lt;Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::TensorMap&lt;Eigen::Tensor&lt;float,2,0,__int64&gt;,0,Eigen::MakePointer&gt; const &gt; const ,Eigen::DefaultDevice&gt; &gt;::m_right_contracting_strides' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>Eigen::TensorContractionEvaluatorBase&lt;Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::TensorMap&lt;Eigen::Tensor&lt;float,2,0,__int64&gt;,0,Eigen::MakePointer&gt; const &gt; const ,Eigen::DefaultDevice&gt; &gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorContractionEvaluatorBase@U?$TensorEvaluator@$$CBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$00$0A@_J@Eigen@@$$CBV?$TensorMap@V?$Tensor@M$01$0A@_J@Eigen@@$0A@UMakePointer@2@@4@@Eigen@@UDefaultDevice@2@@Eigen@@@Eigen@@QEAA@AEBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$00$0A@_J@Eigen@@$$CBV?$TensorMap@V?$Tensor@M$01$0A@_J@Eigen@@$0A@UMakePointer@2@@4@@1@AEBUDefaultDevice@1@@Z</DECORATED>
    <FUNCLINE>152</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>Eigen::TensorContractionEvaluatorBase&lt;Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::TensorMap&lt;Eigen::Tensor&lt;float,2,0,__int64&gt;,0,Eigen::MakePointer&gt; const &gt; const ,Eigen::DefaultDevice&gt; &gt;::m_right_contracting_strides</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContraction.h</FILENAME>
      <LINE>152</LINE>
      <COLUMN>20</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'Eigen::TensorContractionEvaluatorBase&lt;Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::TensorMap&lt;Eigen::Tensor&lt;float,2,0,__int64&gt;,0,Eigen::MakePointer&gt; const &gt; const ,Eigen::DefaultDevice&gt; &gt;::m_left_contracting_strides' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>Eigen::TensorContractionEvaluatorBase&lt;Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::TensorMap&lt;Eigen::Tensor&lt;float,2,0,__int64&gt;,0,Eigen::MakePointer&gt; const &gt; const ,Eigen::DefaultDevice&gt; &gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorContractionEvaluatorBase@U?$TensorEvaluator@$$CBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$00$0A@_J@Eigen@@$$CBV?$TensorMap@V?$Tensor@M$01$0A@_J@Eigen@@$0A@UMakePointer@2@@4@@Eigen@@UDefaultDevice@2@@Eigen@@@Eigen@@QEAA@AEBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$00$0A@_J@Eigen@@$$CBV?$TensorMap@V?$Tensor@M$01$0A@_J@Eigen@@$0A@UMakePointer@2@@4@@1@AEBUDefaultDevice@1@@Z</DECORATED>
    <FUNCLINE>152</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>Eigen::TensorContractionEvaluatorBase&lt;Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::TensorMap&lt;Eigen::Tensor&lt;float,2,0,__int64&gt;,0,Eigen::MakePointer&gt; const &gt; const ,Eigen::DefaultDevice&gt; &gt;::m_left_contracting_strides</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContraction.h</FILENAME>
      <LINE>184</LINE>
      <COLUMN>62</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorContractionEvaluatorBase&lt;Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::TensorMap&lt;Eigen::Tensor&lt;float,2,0,__int64&gt;,0,Eigen::MakePointer&gt; const &gt; const ,Eigen::DefaultDevice&gt; &gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorContractionEvaluatorBase@U?$TensorEvaluator@$$CBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$00$0A@_J@Eigen@@$$CBV?$TensorMap@V?$Tensor@M$01$0A@_J@Eigen@@$0A@UMakePointer@2@@4@@Eigen@@UDefaultDevice@2@@Eigen@@@Eigen@@QEAA@AEBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$00$0A@_J@Eigen@@$$CBV?$TensorMap@V?$Tensor@M$01$0A@_J@Eigen@@$0A@UMakePointer@2@@4@@1@AEBUDefaultDevice@1@@Z</DECORATED>
    <FUNCLINE>152</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContraction.h</FILENAME>
      <LINE>184</LINE>
      <COLUMN>58</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorContractionEvaluatorBase&lt;Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::TensorMap&lt;Eigen::Tensor&lt;float,2,0,__int64&gt;,0,Eigen::MakePointer&gt; const &gt; const ,Eigen::DefaultDevice&gt; &gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorContractionEvaluatorBase@U?$TensorEvaluator@$$CBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$00$0A@_J@Eigen@@$$CBV?$TensorMap@V?$Tensor@M$01$0A@_J@Eigen@@$0A@UMakePointer@2@@4@@Eigen@@UDefaultDevice@2@@Eigen@@@Eigen@@QEAA@AEBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$00$0A@_J@Eigen@@$$CBV?$TensorMap@V?$Tensor@M$01$0A@_J@Eigen@@$0A@UMakePointer@2@@4@@1@AEBUDefaultDevice@1@@Z</DECORATED>
    <FUNCLINE>152</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContraction.h</FILENAME>
      <LINE>187</LINE>
      <COLUMN>64</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorContractionEvaluatorBase&lt;Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::TensorMap&lt;Eigen::Tensor&lt;float,2,0,__int64&gt;,0,Eigen::MakePointer&gt; const &gt; const ,Eigen::DefaultDevice&gt; &gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorContractionEvaluatorBase@U?$TensorEvaluator@$$CBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$00$0A@_J@Eigen@@$$CBV?$TensorMap@V?$Tensor@M$01$0A@_J@Eigen@@$0A@UMakePointer@2@@4@@Eigen@@UDefaultDevice@2@@Eigen@@@Eigen@@QEAA@AEBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$00$0A@_J@Eigen@@$$CBV?$TensorMap@V?$Tensor@M$01$0A@_J@Eigen@@$0A@UMakePointer@2@@4@@1@AEBUDefaultDevice@1@@Z</DECORATED>
    <FUNCLINE>152</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContraction.h</FILENAME>
      <LINE>187</LINE>
      <COLUMN>60</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorContractionEvaluatorBase&lt;Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::TensorMap&lt;Eigen::Tensor&lt;float,2,0,__int64&gt;,0,Eigen::MakePointer&gt; const &gt; const ,Eigen::DefaultDevice&gt; &gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorContractionEvaluatorBase@U?$TensorEvaluator@$$CBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$00$0A@_J@Eigen@@$$CBV?$TensorMap@V?$Tensor@M$01$0A@_J@Eigen@@$0A@UMakePointer@2@@4@@Eigen@@UDefaultDevice@2@@Eigen@@@Eigen@@QEAA@AEBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$00$0A@_J@Eigen@@$$CBV?$TensorMap@V?$Tensor@M$01$0A@_J@Eigen@@$0A@UMakePointer@2@@4@@1@AEBUDefaultDevice@1@@Z</DECORATED>
    <FUNCLINE>152</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContraction.h</FILENAME>
      <LINE>192</LINE>
      <COLUMN>77</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorContractionEvaluatorBase&lt;Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::TensorMap&lt;Eigen::Tensor&lt;float,2,0,__int64&gt;,0,Eigen::MakePointer&gt; const &gt; const ,Eigen::DefaultDevice&gt; &gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorContractionEvaluatorBase@U?$TensorEvaluator@$$CBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$00$0A@_J@Eigen@@$$CBV?$TensorMap@V?$Tensor@M$01$0A@_J@Eigen@@$0A@UMakePointer@2@@4@@Eigen@@UDefaultDevice@2@@Eigen@@@Eigen@@QEAA@AEBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$00$0A@_J@Eigen@@$$CBV?$TensorMap@V?$Tensor@M$01$0A@_J@Eigen@@$0A@UMakePointer@2@@4@@1@AEBUDefaultDevice@1@@Z</DECORATED>
    <FUNCLINE>152</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContraction.h</FILENAME>
      <LINE>193</LINE>
      <COLUMN>78</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorContractionEvaluatorBase&lt;Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::TensorMap&lt;Eigen::Tensor&lt;float,2,0,__int64&gt;,0,Eigen::MakePointer&gt; const &gt; const ,Eigen::DefaultDevice&gt; &gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorContractionEvaluatorBase@U?$TensorEvaluator@$$CBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$00$0A@_J@Eigen@@$$CBV?$TensorMap@V?$Tensor@M$01$0A@_J@Eigen@@$0A@UMakePointer@2@@4@@Eigen@@UDefaultDevice@2@@Eigen@@@Eigen@@QEAA@AEBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$00$0A@_J@Eigen@@$$CBV?$TensorMap@V?$Tensor@M$01$0A@_J@Eigen@@$0A@UMakePointer@2@@4@@1@AEBUDefaultDevice@1@@Z</DECORATED>
    <FUNCLINE>152</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContraction.h</FILENAME>
      <LINE>213</LINE>
      <COLUMN>19</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorContractionEvaluatorBase&lt;Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::TensorMap&lt;Eigen::Tensor&lt;float,2,0,__int64&gt;,0,Eigen::MakePointer&gt; const &gt; const ,Eigen::DefaultDevice&gt; &gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorContractionEvaluatorBase@U?$TensorEvaluator@$$CBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$00$0A@_J@Eigen@@$$CBV?$TensorMap@V?$Tensor@M$01$0A@_J@Eigen@@$0A@UMakePointer@2@@4@@Eigen@@UDefaultDevice@2@@Eigen@@@Eigen@@QEAA@AEBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$00$0A@_J@Eigen@@$$CBV?$TensorMap@V?$Tensor@M$01$0A@_J@Eigen@@$0A@UMakePointer@2@@4@@1@AEBUDefaultDevice@1@@Z</DECORATED>
    <FUNCLINE>152</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContraction.h</FILENAME>
      <LINE>219</LINE>
      <COLUMN>19</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorContractionEvaluatorBase&lt;Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::TensorMap&lt;Eigen::Tensor&lt;float,2,0,__int64&gt;,0,Eigen::MakePointer&gt; const &gt; const ,Eigen::DefaultDevice&gt; &gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorContractionEvaluatorBase@U?$TensorEvaluator@$$CBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$00$0A@_J@Eigen@@$$CBV?$TensorMap@V?$Tensor@M$01$0A@_J@Eigen@@$0A@UMakePointer@2@@4@@Eigen@@UDefaultDevice@2@@Eigen@@@Eigen@@QEAA@AEBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$00$0A@_J@Eigen@@$$CBV?$TensorMap@V?$Tensor@M$01$0A@_J@Eigen@@$0A@UMakePointer@2@@4@@1@AEBUDefaultDevice@1@@Z</DECORATED>
    <FUNCLINE>152</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContraction.h</FILENAME>
      <LINE>254</LINE>
      <COLUMN>26</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorContractionEvaluatorBase&lt;Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::TensorMap&lt;Eigen::Tensor&lt;float,2,0,__int64&gt;,0,Eigen::MakePointer&gt; const &gt; const ,Eigen::DefaultDevice&gt; &gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorContractionEvaluatorBase@U?$TensorEvaluator@$$CBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$00$0A@_J@Eigen@@$$CBV?$TensorMap@V?$Tensor@M$01$0A@_J@Eigen@@$0A@UMakePointer@2@@4@@Eigen@@UDefaultDevice@2@@Eigen@@@Eigen@@QEAA@AEBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$00$0A@_J@Eigen@@$$CBV?$TensorMap@V?$Tensor@M$01$0A@_J@Eigen@@$0A@UMakePointer@2@@4@@1@AEBUDefaultDevice@1@@Z</DECORATED>
    <FUNCLINE>152</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContraction.h</FILENAME>
      <LINE>255</LINE>
      <COLUMN>36</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorContractionEvaluatorBase&lt;Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::TensorMap&lt;Eigen::Tensor&lt;float,2,0,__int64&gt;,0,Eigen::MakePointer&gt; const &gt; const ,Eigen::DefaultDevice&gt; &gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorContractionEvaluatorBase@U?$TensorEvaluator@$$CBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$00$0A@_J@Eigen@@$$CBV?$TensorMap@V?$Tensor@M$01$0A@_J@Eigen@@$0A@UMakePointer@2@@4@@Eigen@@UDefaultDevice@2@@Eigen@@@Eigen@@QEAA@AEBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$00$0A@_J@Eigen@@$$CBV?$TensorMap@V?$Tensor@M$01$0A@_J@Eigen@@$0A@UMakePointer@2@@4@@1@AEBUDefaultDevice@1@@Z</DECORATED>
    <FUNCLINE>152</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContraction.h</FILENAME>
      <LINE>277</LINE>
      <COLUMN>26</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorContractionEvaluatorBase&lt;Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::TensorMap&lt;Eigen::Tensor&lt;float,2,0,__int64&gt;,0,Eigen::MakePointer&gt; const &gt; const ,Eigen::DefaultDevice&gt; &gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorContractionEvaluatorBase@U?$TensorEvaluator@$$CBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$00$0A@_J@Eigen@@$$CBV?$TensorMap@V?$Tensor@M$01$0A@_J@Eigen@@$0A@UMakePointer@2@@4@@Eigen@@UDefaultDevice@2@@Eigen@@@Eigen@@QEAA@AEBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$00$0A@_J@Eigen@@$$CBV?$TensorMap@V?$Tensor@M$01$0A@_J@Eigen@@$0A@UMakePointer@2@@4@@1@AEBUDefaultDevice@1@@Z</DECORATED>
    <FUNCLINE>152</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContraction.h</FILENAME>
      <LINE>278</LINE>
      <COLUMN>36</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorContractionEvaluatorBase&lt;Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::TensorMap&lt;Eigen::Tensor&lt;float,2,0,__int64&gt;,0,Eigen::MakePointer&gt; const &gt; const ,Eigen::DefaultDevice&gt; &gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorContractionEvaluatorBase@U?$TensorEvaluator@$$CBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$00$0A@_J@Eigen@@$$CBV?$TensorMap@V?$Tensor@M$01$0A@_J@Eigen@@$0A@UMakePointer@2@@4@@Eigen@@UDefaultDevice@2@@Eigen@@@Eigen@@QEAA@AEBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$00$0A@_J@Eigen@@$$CBV?$TensorMap@V?$Tensor@M$01$0A@_J@Eigen@@$0A@UMakePointer@2@@4@@1@AEBUDefaultDevice@1@@Z</DECORATED>
    <FUNCLINE>152</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContraction.h</FILENAME>
      <LINE>305</LINE>
      <COLUMN>21</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorContractionEvaluatorBase&lt;Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::TensorMap&lt;Eigen::Tensor&lt;float,2,0,__int64&gt;,0,Eigen::MakePointer&gt; const &gt; const ,Eigen::DefaultDevice&gt; &gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorContractionEvaluatorBase@U?$TensorEvaluator@$$CBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$00$0A@_J@Eigen@@$$CBV?$TensorMap@V?$Tensor@M$01$0A@_J@Eigen@@$0A@UMakePointer@2@@4@@Eigen@@UDefaultDevice@2@@Eigen@@@Eigen@@QEAA@AEBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$00$0A@_J@Eigen@@$$CBV?$TensorMap@V?$Tensor@M$01$0A@_J@Eigen@@$0A@UMakePointer@2@@4@@1@AEBUDefaultDevice@1@@Z</DECORATED>
    <FUNCLINE>152</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContraction.h</FILENAME>
      <LINE>312</LINE>
      <COLUMN>44</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorContractionEvaluatorBase&lt;Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::TensorMap&lt;Eigen::Tensor&lt;float,2,0,__int64&gt;,0,Eigen::MakePointer&gt; const &gt; const ,Eigen::DefaultDevice&gt; &gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorContractionEvaluatorBase@U?$TensorEvaluator@$$CBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$00$0A@_J@Eigen@@$$CBV?$TensorMap@V?$Tensor@M$01$0A@_J@Eigen@@$0A@UMakePointer@2@@4@@Eigen@@UDefaultDevice@2@@Eigen@@@Eigen@@QEAA@AEBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$00$0A@_J@Eigen@@$$CBV?$TensorMap@V?$Tensor@M$01$0A@_J@Eigen@@$0A@UMakePointer@2@@4@@1@AEBUDefaultDevice@1@@Z</DECORATED>
    <FUNCLINE>152</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContraction.h</FILENAME>
      <LINE>250</LINE>
      <COLUMN>50</COLUMN>
    </SFA>
    <DEFECTCODE>28020</DEFECTCODE>
    <DESCRIPTION>The expression '0&lt;=_Param_(1)&amp;&amp;_Param_(1)&lt;=1-1' is not true at this call.</DESCRIPTION>
    <FUNCTION>Eigen::TensorContractionEvaluatorBase&lt;Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,3,0,__int64&gt; const &gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt; &gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorContractionEvaluatorBase@U?$TensorEvaluator@$$CBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$01$0A@_J@3@$$CBV?$Tensor@M$02$0A@_J@3@@Eigen@@$$CBV?$Tensor@M$01$0A@_J@4@@Eigen@@UThreadPoolDevice@2@@Eigen@@@Eigen@@QEAA@AEBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$01$0A@_J@3@$$CBV?$Tensor@M$02$0A@_J@3@@Eigen@@$$CBV?$Tensor@M$01$0A@_J@4@@1@AEBUThreadPoolDevice@1@@Z</DECORATED>
    <FUNCLINE>152</FUNCLINE>
    <PATH>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>159</LINE>
        <COLUMN>23</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>154</LINE>
        <COLUMN>16</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>156</LINE>
        <COLUMN>15</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>158</LINE>
        <COLUMN>16</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>159</LINE>
        <COLUMN>16</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>165</LINE>
        <COLUMN>2</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>166</LINE>
        <COLUMN>2</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>167</LINE>
        <COLUMN>2</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>168</LINE>
        <COLUMN>33</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>170</LINE>
        <COLUMN>15</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>170</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>171</LINE>
        <COLUMN>26</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>170</LINE>
        <COLUMN>0</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>170</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>171</LINE>
        <COLUMN>26</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>170</LINE>
        <COLUMN>0</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>170</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>173</LINE>
        <COLUMN>15</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>173</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>174</LINE>
        <COLUMN>27</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>173</LINE>
        <COLUMN>0</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>173</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>174</LINE>
        <COLUMN>27</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>173</LINE>
        <COLUMN>0</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>173</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>177</LINE>
        <COLUMN>15</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>177</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>178</LINE>
        <COLUMN>33</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>179</LINE>
        <COLUMN>34</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>177</LINE>
        <COLUMN>0</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>177</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>199</LINE>
        <COLUMN>13</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>199</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>200</LINE>
        <COLUMN>15</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>200</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>199</LINE>
        <COLUMN>0</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>199</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>210</LINE>
        <COLUMN>2</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>211</LINE>
        <COLUMN>19</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>212</LINE>
        <COLUMN>13</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>212</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>213</LINE>
        <COLUMN>23</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>212</LINE>
        <COLUMN>12</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>212</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>216</LINE>
        <COLUMN>2</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>217</LINE>
        <COLUMN>19</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>218</LINE>
        <COLUMN>13</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>218</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>219</LINE>
        <COLUMN>23</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>218</LINE>
        <COLUMN>12</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>218</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>222</LINE>
        <COLUMN>27</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>223</LINE>
        <COLUMN>27</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>224</LINE>
        <COLUMN>27</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>226</LINE>
        <COLUMN>13</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>227</LINE>
        <COLUMN>13</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>228</LINE>
        <COLUMN>13</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>234</LINE>
        <COLUMN>31</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>235</LINE>
        <COLUMN>8</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>236</LINE>
        <COLUMN>17</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>238</LINE>
        <COLUMN>13</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>238</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>240</LINE>
        <COLUMN>11</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>241</LINE>
        <COLUMN>15</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>241</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>242</LINE>
        <COLUMN>37</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>241</LINE>
        <COLUMN>0</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>241</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>247</LINE>
        <COLUMN>10</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>249</LINE>
        <COLUMN>30</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>250</LINE>
        <COLUMN>50</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>251</LINE>
        <COLUMN>20</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>254</LINE>
        <COLUMN>29</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>258</LINE>
        <COLUMN>19</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>260</LINE>
        <COLUMN>15</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>261</LINE>
        <COLUMN>22</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>238</LINE>
        <COLUMN>0</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>238</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>240</LINE>
        <COLUMN>11</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>241</LINE>
        <COLUMN>15</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>241</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>242</LINE>
        <COLUMN>37</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>241</LINE>
        <COLUMN>0</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>241</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>247</LINE>
        <COLUMN>10</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>249</LINE>
        <COLUMN>30</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>250</LINE>
        <COLUMN>50</COLUMN>
      </SFA>
    </PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContraction.h</FILENAME>
      <LINE>276</LINE>
      <COLUMN>30</COLUMN>
    </SFA>
    <DEFECTCODE>28020</DEFECTCODE>
    <DESCRIPTION>The expression '0&lt;=_Param_(1)&amp;&amp;_Param_(1)&lt;=2-1' is not true at this call.</DESCRIPTION>
    <FUNCTION>Eigen::TensorContractionEvaluatorBase&lt;Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,3,0,__int64&gt; const &gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt; &gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorContractionEvaluatorBase@U?$TensorEvaluator@$$CBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$01$0A@_J@3@$$CBV?$Tensor@M$02$0A@_J@3@@Eigen@@$$CBV?$Tensor@M$01$0A@_J@4@@Eigen@@UThreadPoolDevice@2@@Eigen@@@Eigen@@QEAA@AEBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$01$0A@_J@3@$$CBV?$Tensor@M$02$0A@_J@3@@Eigen@@$$CBV?$Tensor@M$01$0A@_J@4@@1@AEBUThreadPoolDevice@1@@Z</DECORATED>
    <FUNCLINE>152</FUNCLINE>
    <PATH>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>159</LINE>
        <COLUMN>23</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>154</LINE>
        <COLUMN>16</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>156</LINE>
        <COLUMN>15</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>158</LINE>
        <COLUMN>16</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>159</LINE>
        <COLUMN>16</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>165</LINE>
        <COLUMN>2</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>166</LINE>
        <COLUMN>2</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>167</LINE>
        <COLUMN>2</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>168</LINE>
        <COLUMN>33</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>170</LINE>
        <COLUMN>15</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>170</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>171</LINE>
        <COLUMN>26</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>170</LINE>
        <COLUMN>0</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>170</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>171</LINE>
        <COLUMN>26</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>170</LINE>
        <COLUMN>0</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>170</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>173</LINE>
        <COLUMN>15</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>173</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>174</LINE>
        <COLUMN>27</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>173</LINE>
        <COLUMN>0</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>173</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>174</LINE>
        <COLUMN>27</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>173</LINE>
        <COLUMN>0</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>173</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>177</LINE>
        <COLUMN>15</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>177</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>178</LINE>
        <COLUMN>33</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>179</LINE>
        <COLUMN>34</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>177</LINE>
        <COLUMN>0</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>177</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>199</LINE>
        <COLUMN>13</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>199</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>200</LINE>
        <COLUMN>15</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>200</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>199</LINE>
        <COLUMN>0</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>199</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>210</LINE>
        <COLUMN>2</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>211</LINE>
        <COLUMN>19</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>212</LINE>
        <COLUMN>13</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>212</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>213</LINE>
        <COLUMN>23</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>212</LINE>
        <COLUMN>12</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>212</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>216</LINE>
        <COLUMN>2</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>217</LINE>
        <COLUMN>19</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>218</LINE>
        <COLUMN>13</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>218</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>219</LINE>
        <COLUMN>23</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>218</LINE>
        <COLUMN>12</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>218</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>222</LINE>
        <COLUMN>27</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>223</LINE>
        <COLUMN>27</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>224</LINE>
        <COLUMN>27</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>226</LINE>
        <COLUMN>13</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>227</LINE>
        <COLUMN>13</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>228</LINE>
        <COLUMN>13</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>234</LINE>
        <COLUMN>31</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>235</LINE>
        <COLUMN>8</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>236</LINE>
        <COLUMN>17</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>238</LINE>
        <COLUMN>13</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>238</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>240</LINE>
        <COLUMN>11</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>241</LINE>
        <COLUMN>15</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>241</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>242</LINE>
        <COLUMN>37</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>241</LINE>
        <COLUMN>0</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>241</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>247</LINE>
        <COLUMN>10</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>249</LINE>
        <COLUMN>30</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>250</LINE>
        <COLUMN>50</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>251</LINE>
        <COLUMN>20</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>254</LINE>
        <COLUMN>29</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>258</LINE>
        <COLUMN>19</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>260</LINE>
        <COLUMN>15</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>261</LINE>
        <COLUMN>22</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>238</LINE>
        <COLUMN>0</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>238</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>240</LINE>
        <COLUMN>11</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>241</LINE>
        <COLUMN>15</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>241</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>242</LINE>
        <COLUMN>37</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>241</LINE>
        <COLUMN>0</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>241</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>247</LINE>
        <COLUMN>10</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>249</LINE>
        <COLUMN>30</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>250</LINE>
        <COLUMN>50</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>251</LINE>
        <COLUMN>20</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>254</LINE>
        <COLUMN>29</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>258</LINE>
        <COLUMN>19</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>260</LINE>
        <COLUMN>15</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>261</LINE>
        <COLUMN>22</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>238</LINE>
        <COLUMN>0</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>238</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>265</LINE>
        <COLUMN>19</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>266</LINE>
        <COLUMN>13</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>266</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>267</LINE>
        <COLUMN>11</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>269</LINE>
        <COLUMN>15</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>269</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>270</LINE>
        <COLUMN>38</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>269</LINE>
        <COLUMN>0</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>269</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>275</LINE>
        <COLUMN>10</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>276</LINE>
        <COLUMN>30</COLUMN>
      </SFA>
    </PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContraction.h</FILENAME>
      <LINE>152</LINE>
      <COLUMN>20</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'Eigen::TensorContractionEvaluatorBase&lt;Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,3,0,__int64&gt; const &gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt; &gt;::m_left_contracting_strides' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>Eigen::TensorContractionEvaluatorBase&lt;Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,3,0,__int64&gt; const &gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt; &gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorContractionEvaluatorBase@U?$TensorEvaluator@$$CBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$01$0A@_J@3@$$CBV?$Tensor@M$02$0A@_J@3@@Eigen@@$$CBV?$Tensor@M$01$0A@_J@4@@Eigen@@UThreadPoolDevice@2@@Eigen@@@Eigen@@QEAA@AEBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$01$0A@_J@3@$$CBV?$Tensor@M$02$0A@_J@3@@Eigen@@$$CBV?$Tensor@M$01$0A@_J@4@@1@AEBUThreadPoolDevice@1@@Z</DECORATED>
    <FUNCLINE>152</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>Eigen::TensorContractionEvaluatorBase&lt;Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,3,0,__int64&gt; const &gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt; &gt;::m_left_contracting_strides</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContraction.h</FILENAME>
      <LINE>152</LINE>
      <COLUMN>20</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'Eigen::TensorContractionEvaluatorBase&lt;Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,3,0,__int64&gt; const &gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt; &gt;::m_right_contracting_strides' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>Eigen::TensorContractionEvaluatorBase&lt;Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,3,0,__int64&gt; const &gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt; &gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorContractionEvaluatorBase@U?$TensorEvaluator@$$CBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$01$0A@_J@3@$$CBV?$Tensor@M$02$0A@_J@3@@Eigen@@$$CBV?$Tensor@M$01$0A@_J@4@@Eigen@@UThreadPoolDevice@2@@Eigen@@@Eigen@@QEAA@AEBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$01$0A@_J@3@$$CBV?$Tensor@M$02$0A@_J@3@@Eigen@@$$CBV?$Tensor@M$01$0A@_J@4@@1@AEBUThreadPoolDevice@1@@Z</DECORATED>
    <FUNCLINE>152</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>Eigen::TensorContractionEvaluatorBase&lt;Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,3,0,__int64&gt; const &gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt; &gt;::m_right_contracting_strides</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContraction.h</FILENAME>
      <LINE>152</LINE>
      <COLUMN>20</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'Eigen::TensorContractionEvaluatorBase&lt;Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,3,0,__int64&gt; const &gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt; &gt;::m_right_nocontract_strides' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>Eigen::TensorContractionEvaluatorBase&lt;Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,3,0,__int64&gt; const &gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt; &gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorContractionEvaluatorBase@U?$TensorEvaluator@$$CBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$01$0A@_J@3@$$CBV?$Tensor@M$02$0A@_J@3@@Eigen@@$$CBV?$Tensor@M$01$0A@_J@4@@Eigen@@UThreadPoolDevice@2@@Eigen@@@Eigen@@QEAA@AEBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$01$0A@_J@3@$$CBV?$Tensor@M$02$0A@_J@3@@Eigen@@$$CBV?$Tensor@M$01$0A@_J@4@@1@AEBUThreadPoolDevice@1@@Z</DECORATED>
    <FUNCLINE>152</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>Eigen::TensorContractionEvaluatorBase&lt;Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,3,0,__int64&gt; const &gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt; &gt;::m_right_nocontract_strides</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContraction.h</FILENAME>
      <LINE>152</LINE>
      <COLUMN>20</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'Eigen::TensorContractionEvaluatorBase&lt;Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,3,0,__int64&gt; const &gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt; &gt;::m_left_nocontract_strides' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>Eigen::TensorContractionEvaluatorBase&lt;Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,3,0,__int64&gt; const &gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt; &gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorContractionEvaluatorBase@U?$TensorEvaluator@$$CBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$01$0A@_J@3@$$CBV?$Tensor@M$02$0A@_J@3@@Eigen@@$$CBV?$Tensor@M$01$0A@_J@4@@Eigen@@UThreadPoolDevice@2@@Eigen@@@Eigen@@QEAA@AEBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$01$0A@_J@3@$$CBV?$Tensor@M$02$0A@_J@3@@Eigen@@$$CBV?$Tensor@M$01$0A@_J@4@@1@AEBUThreadPoolDevice@1@@Z</DECORATED>
    <FUNCLINE>152</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>Eigen::TensorContractionEvaluatorBase&lt;Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,3,0,__int64&gt; const &gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt; &gt;::m_left_nocontract_strides</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContraction.h</FILENAME>
      <LINE>184</LINE>
      <COLUMN>62</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorContractionEvaluatorBase&lt;Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,3,0,__int64&gt; const &gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt; &gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorContractionEvaluatorBase@U?$TensorEvaluator@$$CBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$01$0A@_J@3@$$CBV?$Tensor@M$02$0A@_J@3@@Eigen@@$$CBV?$Tensor@M$01$0A@_J@4@@Eigen@@UThreadPoolDevice@2@@Eigen@@@Eigen@@QEAA@AEBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$01$0A@_J@3@$$CBV?$Tensor@M$02$0A@_J@3@@Eigen@@$$CBV?$Tensor@M$01$0A@_J@4@@1@AEBUThreadPoolDevice@1@@Z</DECORATED>
    <FUNCLINE>152</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContraction.h</FILENAME>
      <LINE>184</LINE>
      <COLUMN>58</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorContractionEvaluatorBase&lt;Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,3,0,__int64&gt; const &gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt; &gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorContractionEvaluatorBase@U?$TensorEvaluator@$$CBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$01$0A@_J@3@$$CBV?$Tensor@M$02$0A@_J@3@@Eigen@@$$CBV?$Tensor@M$01$0A@_J@4@@Eigen@@UThreadPoolDevice@2@@Eigen@@@Eigen@@QEAA@AEBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$01$0A@_J@3@$$CBV?$Tensor@M$02$0A@_J@3@@Eigen@@$$CBV?$Tensor@M$01$0A@_J@4@@1@AEBUThreadPoolDevice@1@@Z</DECORATED>
    <FUNCLINE>152</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContraction.h</FILENAME>
      <LINE>187</LINE>
      <COLUMN>64</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorContractionEvaluatorBase&lt;Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,3,0,__int64&gt; const &gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt; &gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorContractionEvaluatorBase@U?$TensorEvaluator@$$CBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$01$0A@_J@3@$$CBV?$Tensor@M$02$0A@_J@3@@Eigen@@$$CBV?$Tensor@M$01$0A@_J@4@@Eigen@@UThreadPoolDevice@2@@Eigen@@@Eigen@@QEAA@AEBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$01$0A@_J@3@$$CBV?$Tensor@M$02$0A@_J@3@@Eigen@@$$CBV?$Tensor@M$01$0A@_J@4@@1@AEBUThreadPoolDevice@1@@Z</DECORATED>
    <FUNCLINE>152</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContraction.h</FILENAME>
      <LINE>187</LINE>
      <COLUMN>60</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorContractionEvaluatorBase&lt;Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,3,0,__int64&gt; const &gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt; &gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorContractionEvaluatorBase@U?$TensorEvaluator@$$CBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$01$0A@_J@3@$$CBV?$Tensor@M$02$0A@_J@3@@Eigen@@$$CBV?$Tensor@M$01$0A@_J@4@@Eigen@@UThreadPoolDevice@2@@Eigen@@@Eigen@@QEAA@AEBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$01$0A@_J@3@$$CBV?$Tensor@M$02$0A@_J@3@@Eigen@@$$CBV?$Tensor@M$01$0A@_J@4@@1@AEBUThreadPoolDevice@1@@Z</DECORATED>
    <FUNCLINE>152</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContraction.h</FILENAME>
      <LINE>192</LINE>
      <COLUMN>77</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorContractionEvaluatorBase&lt;Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,3,0,__int64&gt; const &gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt; &gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorContractionEvaluatorBase@U?$TensorEvaluator@$$CBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$01$0A@_J@3@$$CBV?$Tensor@M$02$0A@_J@3@@Eigen@@$$CBV?$Tensor@M$01$0A@_J@4@@Eigen@@UThreadPoolDevice@2@@Eigen@@@Eigen@@QEAA@AEBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$01$0A@_J@3@$$CBV?$Tensor@M$02$0A@_J@3@@Eigen@@$$CBV?$Tensor@M$01$0A@_J@4@@1@AEBUThreadPoolDevice@1@@Z</DECORATED>
    <FUNCLINE>152</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContraction.h</FILENAME>
      <LINE>193</LINE>
      <COLUMN>78</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorContractionEvaluatorBase&lt;Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,3,0,__int64&gt; const &gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt; &gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorContractionEvaluatorBase@U?$TensorEvaluator@$$CBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$01$0A@_J@3@$$CBV?$Tensor@M$02$0A@_J@3@@Eigen@@$$CBV?$Tensor@M$01$0A@_J@4@@Eigen@@UThreadPoolDevice@2@@Eigen@@@Eigen@@QEAA@AEBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$01$0A@_J@3@$$CBV?$Tensor@M$02$0A@_J@3@@Eigen@@$$CBV?$Tensor@M$01$0A@_J@4@@1@AEBUThreadPoolDevice@1@@Z</DECORATED>
    <FUNCLINE>152</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContraction.h</FILENAME>
      <LINE>213</LINE>
      <COLUMN>19</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorContractionEvaluatorBase&lt;Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,3,0,__int64&gt; const &gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt; &gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorContractionEvaluatorBase@U?$TensorEvaluator@$$CBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$01$0A@_J@3@$$CBV?$Tensor@M$02$0A@_J@3@@Eigen@@$$CBV?$Tensor@M$01$0A@_J@4@@Eigen@@UThreadPoolDevice@2@@Eigen@@@Eigen@@QEAA@AEBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$01$0A@_J@3@$$CBV?$Tensor@M$02$0A@_J@3@@Eigen@@$$CBV?$Tensor@M$01$0A@_J@4@@1@AEBUThreadPoolDevice@1@@Z</DECORATED>
    <FUNCLINE>152</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContraction.h</FILENAME>
      <LINE>219</LINE>
      <COLUMN>19</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorContractionEvaluatorBase&lt;Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,3,0,__int64&gt; const &gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt; &gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorContractionEvaluatorBase@U?$TensorEvaluator@$$CBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$01$0A@_J@3@$$CBV?$Tensor@M$02$0A@_J@3@@Eigen@@$$CBV?$Tensor@M$01$0A@_J@4@@Eigen@@UThreadPoolDevice@2@@Eigen@@@Eigen@@QEAA@AEBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$01$0A@_J@3@$$CBV?$Tensor@M$02$0A@_J@3@@Eigen@@$$CBV?$Tensor@M$01$0A@_J@4@@1@AEBUThreadPoolDevice@1@@Z</DECORATED>
    <FUNCLINE>152</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContraction.h</FILENAME>
      <LINE>254</LINE>
      <COLUMN>26</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorContractionEvaluatorBase&lt;Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,3,0,__int64&gt; const &gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt; &gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorContractionEvaluatorBase@U?$TensorEvaluator@$$CBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$01$0A@_J@3@$$CBV?$Tensor@M$02$0A@_J@3@@Eigen@@$$CBV?$Tensor@M$01$0A@_J@4@@Eigen@@UThreadPoolDevice@2@@Eigen@@@Eigen@@QEAA@AEBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$01$0A@_J@3@$$CBV?$Tensor@M$02$0A@_J@3@@Eigen@@$$CBV?$Tensor@M$01$0A@_J@4@@1@AEBUThreadPoolDevice@1@@Z</DECORATED>
    <FUNCLINE>152</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContraction.h</FILENAME>
      <LINE>255</LINE>
      <COLUMN>36</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorContractionEvaluatorBase&lt;Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,3,0,__int64&gt; const &gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt; &gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorContractionEvaluatorBase@U?$TensorEvaluator@$$CBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$01$0A@_J@3@$$CBV?$Tensor@M$02$0A@_J@3@@Eigen@@$$CBV?$Tensor@M$01$0A@_J@4@@Eigen@@UThreadPoolDevice@2@@Eigen@@@Eigen@@QEAA@AEBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$01$0A@_J@3@$$CBV?$Tensor@M$02$0A@_J@3@@Eigen@@$$CBV?$Tensor@M$01$0A@_J@4@@1@AEBUThreadPoolDevice@1@@Z</DECORATED>
    <FUNCLINE>152</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContraction.h</FILENAME>
      <LINE>277</LINE>
      <COLUMN>26</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorContractionEvaluatorBase&lt;Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,3,0,__int64&gt; const &gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt; &gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorContractionEvaluatorBase@U?$TensorEvaluator@$$CBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$01$0A@_J@3@$$CBV?$Tensor@M$02$0A@_J@3@@Eigen@@$$CBV?$Tensor@M$01$0A@_J@4@@Eigen@@UThreadPoolDevice@2@@Eigen@@@Eigen@@QEAA@AEBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$01$0A@_J@3@$$CBV?$Tensor@M$02$0A@_J@3@@Eigen@@$$CBV?$Tensor@M$01$0A@_J@4@@1@AEBUThreadPoolDevice@1@@Z</DECORATED>
    <FUNCLINE>152</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContraction.h</FILENAME>
      <LINE>278</LINE>
      <COLUMN>36</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorContractionEvaluatorBase&lt;Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,3,0,__int64&gt; const &gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt; &gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorContractionEvaluatorBase@U?$TensorEvaluator@$$CBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$01$0A@_J@3@$$CBV?$Tensor@M$02$0A@_J@3@@Eigen@@$$CBV?$Tensor@M$01$0A@_J@4@@Eigen@@UThreadPoolDevice@2@@Eigen@@@Eigen@@QEAA@AEBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$01$0A@_J@3@$$CBV?$Tensor@M$02$0A@_J@3@@Eigen@@$$CBV?$Tensor@M$01$0A@_J@4@@1@AEBUThreadPoolDevice@1@@Z</DECORATED>
    <FUNCLINE>152</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContraction.h</FILENAME>
      <LINE>305</LINE>
      <COLUMN>21</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorContractionEvaluatorBase&lt;Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,3,0,__int64&gt; const &gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt; &gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorContractionEvaluatorBase@U?$TensorEvaluator@$$CBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$01$0A@_J@3@$$CBV?$Tensor@M$02$0A@_J@3@@Eigen@@$$CBV?$Tensor@M$01$0A@_J@4@@Eigen@@UThreadPoolDevice@2@@Eigen@@@Eigen@@QEAA@AEBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$01$0A@_J@3@$$CBV?$Tensor@M$02$0A@_J@3@@Eigen@@$$CBV?$Tensor@M$01$0A@_J@4@@1@AEBUThreadPoolDevice@1@@Z</DECORATED>
    <FUNCLINE>152</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContraction.h</FILENAME>
      <LINE>312</LINE>
      <COLUMN>44</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorContractionEvaluatorBase&lt;Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,3,0,__int64&gt; const &gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt; &gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorContractionEvaluatorBase@U?$TensorEvaluator@$$CBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$01$0A@_J@3@$$CBV?$Tensor@M$02$0A@_J@3@@Eigen@@$$CBV?$Tensor@M$01$0A@_J@4@@Eigen@@UThreadPoolDevice@2@@Eigen@@@Eigen@@QEAA@AEBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$01$0A@_J@3@$$CBV?$Tensor@M$02$0A@_J@3@@Eigen@@$$CBV?$Tensor@M$01$0A@_J@4@@1@AEBUThreadPoolDevice@1@@Z</DECORATED>
    <FUNCLINE>152</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContraction.h</FILENAME>
      <LINE>250</LINE>
      <COLUMN>50</COLUMN>
    </SFA>
    <DEFECTCODE>28020</DEFECTCODE>
    <DESCRIPTION>The expression '0&lt;=_Param_(1)&amp;&amp;_Param_(1)&lt;=1-1' is not true at this call.</DESCRIPTION>
    <FUNCTION>Eigen::TensorContractionEvaluatorBase&lt;Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt; &gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorContractionEvaluatorBase@U?$TensorEvaluator@$$CBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$01$0A@_J@3@$$CBV43@@Eigen@@$$CBV?$Tensor@M$01$0A@_J@4@@Eigen@@UThreadPoolDevice@2@@Eigen@@@Eigen@@QEAA@AEBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$01$0A@_J@3@$$CBV43@@Eigen@@$$CBV?$Tensor@M$01$0A@_J@4@@1@AEBUThreadPoolDevice@1@@Z</DECORATED>
    <FUNCLINE>152</FUNCLINE>
    <PATH>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>159</LINE>
        <COLUMN>23</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>154</LINE>
        <COLUMN>16</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>156</LINE>
        <COLUMN>15</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>158</LINE>
        <COLUMN>16</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>159</LINE>
        <COLUMN>16</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>165</LINE>
        <COLUMN>2</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>166</LINE>
        <COLUMN>2</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>167</LINE>
        <COLUMN>2</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>168</LINE>
        <COLUMN>33</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>170</LINE>
        <COLUMN>15</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>170</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>171</LINE>
        <COLUMN>26</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>170</LINE>
        <COLUMN>0</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>170</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>171</LINE>
        <COLUMN>26</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>170</LINE>
        <COLUMN>0</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>170</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>173</LINE>
        <COLUMN>15</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>173</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>174</LINE>
        <COLUMN>27</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>173</LINE>
        <COLUMN>0</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>173</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>174</LINE>
        <COLUMN>27</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>173</LINE>
        <COLUMN>0</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>173</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>177</LINE>
        <COLUMN>15</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>177</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>178</LINE>
        <COLUMN>33</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>179</LINE>
        <COLUMN>34</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>177</LINE>
        <COLUMN>0</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>177</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>199</LINE>
        <COLUMN>13</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>199</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>200</LINE>
        <COLUMN>15</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>200</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>199</LINE>
        <COLUMN>0</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>199</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>210</LINE>
        <COLUMN>2</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>211</LINE>
        <COLUMN>19</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>212</LINE>
        <COLUMN>13</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>212</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>213</LINE>
        <COLUMN>23</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>212</LINE>
        <COLUMN>12</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>212</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>216</LINE>
        <COLUMN>2</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>217</LINE>
        <COLUMN>19</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>218</LINE>
        <COLUMN>13</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>218</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>219</LINE>
        <COLUMN>23</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>218</LINE>
        <COLUMN>12</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>218</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>222</LINE>
        <COLUMN>27</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>223</LINE>
        <COLUMN>27</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>224</LINE>
        <COLUMN>27</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>226</LINE>
        <COLUMN>13</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>227</LINE>
        <COLUMN>13</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>228</LINE>
        <COLUMN>13</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>234</LINE>
        <COLUMN>31</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>235</LINE>
        <COLUMN>8</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>236</LINE>
        <COLUMN>17</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>238</LINE>
        <COLUMN>13</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>238</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>240</LINE>
        <COLUMN>11</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>241</LINE>
        <COLUMN>15</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>241</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>242</LINE>
        <COLUMN>37</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>241</LINE>
        <COLUMN>0</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>241</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>247</LINE>
        <COLUMN>10</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>249</LINE>
        <COLUMN>30</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>250</LINE>
        <COLUMN>50</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>251</LINE>
        <COLUMN>20</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>254</LINE>
        <COLUMN>29</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>258</LINE>
        <COLUMN>19</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>260</LINE>
        <COLUMN>15</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>261</LINE>
        <COLUMN>22</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>238</LINE>
        <COLUMN>0</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>238</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>240</LINE>
        <COLUMN>11</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>241</LINE>
        <COLUMN>15</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>241</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>242</LINE>
        <COLUMN>37</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>241</LINE>
        <COLUMN>0</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>241</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>247</LINE>
        <COLUMN>10</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>249</LINE>
        <COLUMN>30</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>250</LINE>
        <COLUMN>50</COLUMN>
      </SFA>
    </PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContraction.h</FILENAME>
      <LINE>276</LINE>
      <COLUMN>30</COLUMN>
    </SFA>
    <DEFECTCODE>28020</DEFECTCODE>
    <DESCRIPTION>The expression '0&lt;=_Param_(1)&amp;&amp;_Param_(1)&lt;=2-1' is not true at this call.</DESCRIPTION>
    <FUNCTION>Eigen::TensorContractionEvaluatorBase&lt;Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt; &gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorContractionEvaluatorBase@U?$TensorEvaluator@$$CBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$01$0A@_J@3@$$CBV43@@Eigen@@$$CBV?$Tensor@M$01$0A@_J@4@@Eigen@@UThreadPoolDevice@2@@Eigen@@@Eigen@@QEAA@AEBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$01$0A@_J@3@$$CBV43@@Eigen@@$$CBV?$Tensor@M$01$0A@_J@4@@1@AEBUThreadPoolDevice@1@@Z</DECORATED>
    <FUNCLINE>152</FUNCLINE>
    <PATH>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>159</LINE>
        <COLUMN>23</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>154</LINE>
        <COLUMN>16</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>156</LINE>
        <COLUMN>15</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>158</LINE>
        <COLUMN>16</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>159</LINE>
        <COLUMN>16</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>165</LINE>
        <COLUMN>2</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>166</LINE>
        <COLUMN>2</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>167</LINE>
        <COLUMN>2</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>168</LINE>
        <COLUMN>33</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>170</LINE>
        <COLUMN>15</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>170</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>171</LINE>
        <COLUMN>26</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>170</LINE>
        <COLUMN>0</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>170</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>171</LINE>
        <COLUMN>26</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>170</LINE>
        <COLUMN>0</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>170</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>173</LINE>
        <COLUMN>15</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>173</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>174</LINE>
        <COLUMN>27</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>173</LINE>
        <COLUMN>0</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>173</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>174</LINE>
        <COLUMN>27</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>173</LINE>
        <COLUMN>0</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>173</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>177</LINE>
        <COLUMN>15</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>177</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>178</LINE>
        <COLUMN>33</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>179</LINE>
        <COLUMN>34</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>177</LINE>
        <COLUMN>0</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>177</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>199</LINE>
        <COLUMN>13</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>199</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>200</LINE>
        <COLUMN>15</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>200</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>199</LINE>
        <COLUMN>0</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>199</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>210</LINE>
        <COLUMN>2</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>211</LINE>
        <COLUMN>19</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>212</LINE>
        <COLUMN>13</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>212</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>213</LINE>
        <COLUMN>23</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>212</LINE>
        <COLUMN>12</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>212</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>216</LINE>
        <COLUMN>2</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>217</LINE>
        <COLUMN>19</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>218</LINE>
        <COLUMN>13</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>218</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>219</LINE>
        <COLUMN>23</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>218</LINE>
        <COLUMN>12</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>218</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>222</LINE>
        <COLUMN>27</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>223</LINE>
        <COLUMN>27</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>224</LINE>
        <COLUMN>27</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>226</LINE>
        <COLUMN>13</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>227</LINE>
        <COLUMN>13</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>228</LINE>
        <COLUMN>13</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>234</LINE>
        <COLUMN>31</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>235</LINE>
        <COLUMN>8</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>236</LINE>
        <COLUMN>17</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>238</LINE>
        <COLUMN>13</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>238</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>240</LINE>
        <COLUMN>11</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>241</LINE>
        <COLUMN>15</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>241</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>242</LINE>
        <COLUMN>37</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>241</LINE>
        <COLUMN>0</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>241</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>247</LINE>
        <COLUMN>10</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>249</LINE>
        <COLUMN>30</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>250</LINE>
        <COLUMN>50</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>251</LINE>
        <COLUMN>20</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>254</LINE>
        <COLUMN>29</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>258</LINE>
        <COLUMN>19</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>260</LINE>
        <COLUMN>15</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>261</LINE>
        <COLUMN>22</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>238</LINE>
        <COLUMN>0</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>238</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>240</LINE>
        <COLUMN>11</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>241</LINE>
        <COLUMN>15</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>241</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>242</LINE>
        <COLUMN>37</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>241</LINE>
        <COLUMN>0</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>241</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>247</LINE>
        <COLUMN>10</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>249</LINE>
        <COLUMN>30</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>250</LINE>
        <COLUMN>50</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>251</LINE>
        <COLUMN>20</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>254</LINE>
        <COLUMN>29</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>258</LINE>
        <COLUMN>19</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>260</LINE>
        <COLUMN>15</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>261</LINE>
        <COLUMN>22</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>238</LINE>
        <COLUMN>0</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>238</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>265</LINE>
        <COLUMN>19</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>266</LINE>
        <COLUMN>13</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>266</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>267</LINE>
        <COLUMN>11</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>269</LINE>
        <COLUMN>15</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>269</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>270</LINE>
        <COLUMN>38</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>269</LINE>
        <COLUMN>0</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>269</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>275</LINE>
        <COLUMN>10</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>276</LINE>
        <COLUMN>30</COLUMN>
      </SFA>
    </PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContraction.h</FILENAME>
      <LINE>152</LINE>
      <COLUMN>20</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'Eigen::TensorContractionEvaluatorBase&lt;Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt; &gt;::m_left_contracting_strides' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>Eigen::TensorContractionEvaluatorBase&lt;Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt; &gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorContractionEvaluatorBase@U?$TensorEvaluator@$$CBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$01$0A@_J@3@$$CBV43@@Eigen@@$$CBV?$Tensor@M$01$0A@_J@4@@Eigen@@UThreadPoolDevice@2@@Eigen@@@Eigen@@QEAA@AEBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$01$0A@_J@3@$$CBV43@@Eigen@@$$CBV?$Tensor@M$01$0A@_J@4@@1@AEBUThreadPoolDevice@1@@Z</DECORATED>
    <FUNCLINE>152</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>Eigen::TensorContractionEvaluatorBase&lt;Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt; &gt;::m_left_contracting_strides</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContraction.h</FILENAME>
      <LINE>152</LINE>
      <COLUMN>20</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'Eigen::TensorContractionEvaluatorBase&lt;Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt; &gt;::m_right_contracting_strides' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>Eigen::TensorContractionEvaluatorBase&lt;Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt; &gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorContractionEvaluatorBase@U?$TensorEvaluator@$$CBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$01$0A@_J@3@$$CBV43@@Eigen@@$$CBV?$Tensor@M$01$0A@_J@4@@Eigen@@UThreadPoolDevice@2@@Eigen@@@Eigen@@QEAA@AEBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$01$0A@_J@3@$$CBV43@@Eigen@@$$CBV?$Tensor@M$01$0A@_J@4@@1@AEBUThreadPoolDevice@1@@Z</DECORATED>
    <FUNCLINE>152</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>Eigen::TensorContractionEvaluatorBase&lt;Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt; &gt;::m_right_contracting_strides</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContraction.h</FILENAME>
      <LINE>152</LINE>
      <COLUMN>20</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'Eigen::TensorContractionEvaluatorBase&lt;Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt; &gt;::m_left_nocontract_strides' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>Eigen::TensorContractionEvaluatorBase&lt;Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt; &gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorContractionEvaluatorBase@U?$TensorEvaluator@$$CBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$01$0A@_J@3@$$CBV43@@Eigen@@$$CBV?$Tensor@M$01$0A@_J@4@@Eigen@@UThreadPoolDevice@2@@Eigen@@@Eigen@@QEAA@AEBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$01$0A@_J@3@$$CBV43@@Eigen@@$$CBV?$Tensor@M$01$0A@_J@4@@1@AEBUThreadPoolDevice@1@@Z</DECORATED>
    <FUNCLINE>152</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>Eigen::TensorContractionEvaluatorBase&lt;Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt; &gt;::m_left_nocontract_strides</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContraction.h</FILENAME>
      <LINE>152</LINE>
      <COLUMN>20</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'Eigen::TensorContractionEvaluatorBase&lt;Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt; &gt;::m_right_nocontract_strides' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>Eigen::TensorContractionEvaluatorBase&lt;Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt; &gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorContractionEvaluatorBase@U?$TensorEvaluator@$$CBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$01$0A@_J@3@$$CBV43@@Eigen@@$$CBV?$Tensor@M$01$0A@_J@4@@Eigen@@UThreadPoolDevice@2@@Eigen@@@Eigen@@QEAA@AEBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$01$0A@_J@3@$$CBV43@@Eigen@@$$CBV?$Tensor@M$01$0A@_J@4@@1@AEBUThreadPoolDevice@1@@Z</DECORATED>
    <FUNCLINE>152</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>Eigen::TensorContractionEvaluatorBase&lt;Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt; &gt;::m_right_nocontract_strides</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContraction.h</FILENAME>
      <LINE>184</LINE>
      <COLUMN>62</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorContractionEvaluatorBase&lt;Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt; &gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorContractionEvaluatorBase@U?$TensorEvaluator@$$CBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$01$0A@_J@3@$$CBV43@@Eigen@@$$CBV?$Tensor@M$01$0A@_J@4@@Eigen@@UThreadPoolDevice@2@@Eigen@@@Eigen@@QEAA@AEBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$01$0A@_J@3@$$CBV43@@Eigen@@$$CBV?$Tensor@M$01$0A@_J@4@@1@AEBUThreadPoolDevice@1@@Z</DECORATED>
    <FUNCLINE>152</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContraction.h</FILENAME>
      <LINE>184</LINE>
      <COLUMN>58</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorContractionEvaluatorBase&lt;Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt; &gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorContractionEvaluatorBase@U?$TensorEvaluator@$$CBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$01$0A@_J@3@$$CBV43@@Eigen@@$$CBV?$Tensor@M$01$0A@_J@4@@Eigen@@UThreadPoolDevice@2@@Eigen@@@Eigen@@QEAA@AEBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$01$0A@_J@3@$$CBV43@@Eigen@@$$CBV?$Tensor@M$01$0A@_J@4@@1@AEBUThreadPoolDevice@1@@Z</DECORATED>
    <FUNCLINE>152</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContraction.h</FILENAME>
      <LINE>187</LINE>
      <COLUMN>64</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorContractionEvaluatorBase&lt;Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt; &gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorContractionEvaluatorBase@U?$TensorEvaluator@$$CBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$01$0A@_J@3@$$CBV43@@Eigen@@$$CBV?$Tensor@M$01$0A@_J@4@@Eigen@@UThreadPoolDevice@2@@Eigen@@@Eigen@@QEAA@AEBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$01$0A@_J@3@$$CBV43@@Eigen@@$$CBV?$Tensor@M$01$0A@_J@4@@1@AEBUThreadPoolDevice@1@@Z</DECORATED>
    <FUNCLINE>152</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContraction.h</FILENAME>
      <LINE>187</LINE>
      <COLUMN>60</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorContractionEvaluatorBase&lt;Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt; &gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorContractionEvaluatorBase@U?$TensorEvaluator@$$CBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$01$0A@_J@3@$$CBV43@@Eigen@@$$CBV?$Tensor@M$01$0A@_J@4@@Eigen@@UThreadPoolDevice@2@@Eigen@@@Eigen@@QEAA@AEBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$01$0A@_J@3@$$CBV43@@Eigen@@$$CBV?$Tensor@M$01$0A@_J@4@@1@AEBUThreadPoolDevice@1@@Z</DECORATED>
    <FUNCLINE>152</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContraction.h</FILENAME>
      <LINE>192</LINE>
      <COLUMN>77</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorContractionEvaluatorBase&lt;Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt; &gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorContractionEvaluatorBase@U?$TensorEvaluator@$$CBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$01$0A@_J@3@$$CBV43@@Eigen@@$$CBV?$Tensor@M$01$0A@_J@4@@Eigen@@UThreadPoolDevice@2@@Eigen@@@Eigen@@QEAA@AEBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$01$0A@_J@3@$$CBV43@@Eigen@@$$CBV?$Tensor@M$01$0A@_J@4@@1@AEBUThreadPoolDevice@1@@Z</DECORATED>
    <FUNCLINE>152</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContraction.h</FILENAME>
      <LINE>193</LINE>
      <COLUMN>78</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorContractionEvaluatorBase&lt;Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt; &gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorContractionEvaluatorBase@U?$TensorEvaluator@$$CBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$01$0A@_J@3@$$CBV43@@Eigen@@$$CBV?$Tensor@M$01$0A@_J@4@@Eigen@@UThreadPoolDevice@2@@Eigen@@@Eigen@@QEAA@AEBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$01$0A@_J@3@$$CBV43@@Eigen@@$$CBV?$Tensor@M$01$0A@_J@4@@1@AEBUThreadPoolDevice@1@@Z</DECORATED>
    <FUNCLINE>152</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContraction.h</FILENAME>
      <LINE>213</LINE>
      <COLUMN>19</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorContractionEvaluatorBase&lt;Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt; &gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorContractionEvaluatorBase@U?$TensorEvaluator@$$CBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$01$0A@_J@3@$$CBV43@@Eigen@@$$CBV?$Tensor@M$01$0A@_J@4@@Eigen@@UThreadPoolDevice@2@@Eigen@@@Eigen@@QEAA@AEBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$01$0A@_J@3@$$CBV43@@Eigen@@$$CBV?$Tensor@M$01$0A@_J@4@@1@AEBUThreadPoolDevice@1@@Z</DECORATED>
    <FUNCLINE>152</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContraction.h</FILENAME>
      <LINE>219</LINE>
      <COLUMN>19</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorContractionEvaluatorBase&lt;Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt; &gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorContractionEvaluatorBase@U?$TensorEvaluator@$$CBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$01$0A@_J@3@$$CBV43@@Eigen@@$$CBV?$Tensor@M$01$0A@_J@4@@Eigen@@UThreadPoolDevice@2@@Eigen@@@Eigen@@QEAA@AEBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$01$0A@_J@3@$$CBV43@@Eigen@@$$CBV?$Tensor@M$01$0A@_J@4@@1@AEBUThreadPoolDevice@1@@Z</DECORATED>
    <FUNCLINE>152</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContraction.h</FILENAME>
      <LINE>254</LINE>
      <COLUMN>26</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorContractionEvaluatorBase&lt;Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt; &gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorContractionEvaluatorBase@U?$TensorEvaluator@$$CBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$01$0A@_J@3@$$CBV43@@Eigen@@$$CBV?$Tensor@M$01$0A@_J@4@@Eigen@@UThreadPoolDevice@2@@Eigen@@@Eigen@@QEAA@AEBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$01$0A@_J@3@$$CBV43@@Eigen@@$$CBV?$Tensor@M$01$0A@_J@4@@1@AEBUThreadPoolDevice@1@@Z</DECORATED>
    <FUNCLINE>152</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContraction.h</FILENAME>
      <LINE>255</LINE>
      <COLUMN>36</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorContractionEvaluatorBase&lt;Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt; &gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorContractionEvaluatorBase@U?$TensorEvaluator@$$CBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$01$0A@_J@3@$$CBV43@@Eigen@@$$CBV?$Tensor@M$01$0A@_J@4@@Eigen@@UThreadPoolDevice@2@@Eigen@@@Eigen@@QEAA@AEBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$01$0A@_J@3@$$CBV43@@Eigen@@$$CBV?$Tensor@M$01$0A@_J@4@@1@AEBUThreadPoolDevice@1@@Z</DECORATED>
    <FUNCLINE>152</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContraction.h</FILENAME>
      <LINE>277</LINE>
      <COLUMN>26</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorContractionEvaluatorBase&lt;Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt; &gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorContractionEvaluatorBase@U?$TensorEvaluator@$$CBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$01$0A@_J@3@$$CBV43@@Eigen@@$$CBV?$Tensor@M$01$0A@_J@4@@Eigen@@UThreadPoolDevice@2@@Eigen@@@Eigen@@QEAA@AEBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$01$0A@_J@3@$$CBV43@@Eigen@@$$CBV?$Tensor@M$01$0A@_J@4@@1@AEBUThreadPoolDevice@1@@Z</DECORATED>
    <FUNCLINE>152</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContraction.h</FILENAME>
      <LINE>278</LINE>
      <COLUMN>36</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorContractionEvaluatorBase&lt;Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt; &gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorContractionEvaluatorBase@U?$TensorEvaluator@$$CBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$01$0A@_J@3@$$CBV43@@Eigen@@$$CBV?$Tensor@M$01$0A@_J@4@@Eigen@@UThreadPoolDevice@2@@Eigen@@@Eigen@@QEAA@AEBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$01$0A@_J@3@$$CBV43@@Eigen@@$$CBV?$Tensor@M$01$0A@_J@4@@1@AEBUThreadPoolDevice@1@@Z</DECORATED>
    <FUNCLINE>152</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContraction.h</FILENAME>
      <LINE>305</LINE>
      <COLUMN>21</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorContractionEvaluatorBase&lt;Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt; &gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorContractionEvaluatorBase@U?$TensorEvaluator@$$CBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$01$0A@_J@3@$$CBV43@@Eigen@@$$CBV?$Tensor@M$01$0A@_J@4@@Eigen@@UThreadPoolDevice@2@@Eigen@@@Eigen@@QEAA@AEBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$01$0A@_J@3@$$CBV43@@Eigen@@$$CBV?$Tensor@M$01$0A@_J@4@@1@AEBUThreadPoolDevice@1@@Z</DECORATED>
    <FUNCLINE>152</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContraction.h</FILENAME>
      <LINE>312</LINE>
      <COLUMN>44</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorContractionEvaluatorBase&lt;Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt; &gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorContractionEvaluatorBase@U?$TensorEvaluator@$$CBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$01$0A@_J@3@$$CBV43@@Eigen@@$$CBV?$Tensor@M$01$0A@_J@4@@Eigen@@UThreadPoolDevice@2@@Eigen@@@Eigen@@QEAA@AEBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$01$0A@_J@3@$$CBV43@@Eigen@@$$CBV?$Tensor@M$01$0A@_J@4@@1@AEBUThreadPoolDevice@1@@Z</DECORATED>
    <FUNCLINE>152</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContraction.h</FILENAME>
      <LINE>212</LINE>
      <COLUMN>4</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>Ill-defined for-loop:  initial condition does not satisfy test.  Loop body not executed.</DESCRIPTION>
    <FUNCTION>Eigen::TensorContractionEvaluatorBase&lt;Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt; &gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorContractionEvaluatorBase@U?$TensorEvaluator@$$CBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$00$0A@_J@Eigen@@$$CBV?$Tensor@M$01$0A@_J@4@@Eigen@@UThreadPoolDevice@2@@Eigen@@@Eigen@@QEAA@AEBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$00$0A@_J@Eigen@@$$CBV?$Tensor@M$01$0A@_J@4@@1@AEBUThreadPoolDevice@1@@Z</DECORATED>
    <FUNCLINE>152</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContraction.h</FILENAME>
      <LINE>276</LINE>
      <COLUMN>30</COLUMN>
    </SFA>
    <DEFECTCODE>28020</DEFECTCODE>
    <DESCRIPTION>The expression '0&lt;=_Param_(1)&amp;&amp;_Param_(1)&lt;=1-1' is not true at this call.</DESCRIPTION>
    <FUNCTION>Eigen::TensorContractionEvaluatorBase&lt;Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt; &gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorContractionEvaluatorBase@U?$TensorEvaluator@$$CBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$00$0A@_J@Eigen@@$$CBV?$Tensor@M$01$0A@_J@4@@Eigen@@UThreadPoolDevice@2@@Eigen@@@Eigen@@QEAA@AEBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$00$0A@_J@Eigen@@$$CBV?$Tensor@M$01$0A@_J@4@@1@AEBUThreadPoolDevice@1@@Z</DECORATED>
    <FUNCLINE>152</FUNCLINE>
    <PATH>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>159</LINE>
        <COLUMN>23</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>154</LINE>
        <COLUMN>16</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>156</LINE>
        <COLUMN>15</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>158</LINE>
        <COLUMN>16</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>159</LINE>
        <COLUMN>16</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>165</LINE>
        <COLUMN>2</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>166</LINE>
        <COLUMN>2</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>167</LINE>
        <COLUMN>2</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>168</LINE>
        <COLUMN>33</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>170</LINE>
        <COLUMN>15</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>170</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>171</LINE>
        <COLUMN>26</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>170</LINE>
        <COLUMN>0</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>170</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>173</LINE>
        <COLUMN>15</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>173</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>174</LINE>
        <COLUMN>27</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>173</LINE>
        <COLUMN>0</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>173</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>174</LINE>
        <COLUMN>27</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>173</LINE>
        <COLUMN>0</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>173</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>177</LINE>
        <COLUMN>15</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>177</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>178</LINE>
        <COLUMN>33</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>179</LINE>
        <COLUMN>34</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>177</LINE>
        <COLUMN>0</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>177</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>199</LINE>
        <COLUMN>13</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>199</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>200</LINE>
        <COLUMN>15</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>200</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>199</LINE>
        <COLUMN>0</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>199</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>210</LINE>
        <COLUMN>2</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>211</LINE>
        <COLUMN>19</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>212</LINE>
        <COLUMN>13</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>212</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>216</LINE>
        <COLUMN>2</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>217</LINE>
        <COLUMN>19</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>218</LINE>
        <COLUMN>13</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>218</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>219</LINE>
        <COLUMN>23</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>218</LINE>
        <COLUMN>12</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>218</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>222</LINE>
        <COLUMN>27</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>223</LINE>
        <COLUMN>27</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>224</LINE>
        <COLUMN>27</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>226</LINE>
        <COLUMN>13</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>227</LINE>
        <COLUMN>13</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>228</LINE>
        <COLUMN>13</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>234</LINE>
        <COLUMN>31</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>235</LINE>
        <COLUMN>8</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>236</LINE>
        <COLUMN>17</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>238</LINE>
        <COLUMN>13</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>238</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>240</LINE>
        <COLUMN>11</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>241</LINE>
        <COLUMN>15</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>241</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>242</LINE>
        <COLUMN>37</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>241</LINE>
        <COLUMN>0</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>241</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>247</LINE>
        <COLUMN>10</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>249</LINE>
        <COLUMN>30</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>250</LINE>
        <COLUMN>50</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>251</LINE>
        <COLUMN>20</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>254</LINE>
        <COLUMN>29</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>258</LINE>
        <COLUMN>19</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>260</LINE>
        <COLUMN>15</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>261</LINE>
        <COLUMN>22</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>238</LINE>
        <COLUMN>0</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>238</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>265</LINE>
        <COLUMN>19</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>266</LINE>
        <COLUMN>13</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>266</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>267</LINE>
        <COLUMN>11</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>269</LINE>
        <COLUMN>15</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>269</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>270</LINE>
        <COLUMN>38</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>269</LINE>
        <COLUMN>0</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>269</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>275</LINE>
        <COLUMN>10</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>276</LINE>
        <COLUMN>30</COLUMN>
      </SFA>
    </PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContraction.h</FILENAME>
      <LINE>152</LINE>
      <COLUMN>20</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'Eigen::TensorContractionEvaluatorBase&lt;Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt; &gt;::m_left_contracting_strides' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>Eigen::TensorContractionEvaluatorBase&lt;Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt; &gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorContractionEvaluatorBase@U?$TensorEvaluator@$$CBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$00$0A@_J@Eigen@@$$CBV?$Tensor@M$01$0A@_J@4@@Eigen@@UThreadPoolDevice@2@@Eigen@@@Eigen@@QEAA@AEBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$00$0A@_J@Eigen@@$$CBV?$Tensor@M$01$0A@_J@4@@1@AEBUThreadPoolDevice@1@@Z</DECORATED>
    <FUNCLINE>152</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>Eigen::TensorContractionEvaluatorBase&lt;Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt; &gt;::m_left_contracting_strides</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContraction.h</FILENAME>
      <LINE>152</LINE>
      <COLUMN>20</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'Eigen::TensorContractionEvaluatorBase&lt;Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt; &gt;::m_right_contracting_strides' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>Eigen::TensorContractionEvaluatorBase&lt;Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt; &gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorContractionEvaluatorBase@U?$TensorEvaluator@$$CBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$00$0A@_J@Eigen@@$$CBV?$Tensor@M$01$0A@_J@4@@Eigen@@UThreadPoolDevice@2@@Eigen@@@Eigen@@QEAA@AEBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$00$0A@_J@Eigen@@$$CBV?$Tensor@M$01$0A@_J@4@@1@AEBUThreadPoolDevice@1@@Z</DECORATED>
    <FUNCLINE>152</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>Eigen::TensorContractionEvaluatorBase&lt;Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt; &gt;::m_right_contracting_strides</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContraction.h</FILENAME>
      <LINE>152</LINE>
      <COLUMN>20</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'Eigen::TensorContractionEvaluatorBase&lt;Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt; &gt;::m_left_nocontract_strides' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>Eigen::TensorContractionEvaluatorBase&lt;Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt; &gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorContractionEvaluatorBase@U?$TensorEvaluator@$$CBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$00$0A@_J@Eigen@@$$CBV?$Tensor@M$01$0A@_J@4@@Eigen@@UThreadPoolDevice@2@@Eigen@@@Eigen@@QEAA@AEBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$00$0A@_J@Eigen@@$$CBV?$Tensor@M$01$0A@_J@4@@1@AEBUThreadPoolDevice@1@@Z</DECORATED>
    <FUNCLINE>152</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>Eigen::TensorContractionEvaluatorBase&lt;Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt; &gt;::m_left_nocontract_strides</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContraction.h</FILENAME>
      <LINE>152</LINE>
      <COLUMN>20</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'Eigen::TensorContractionEvaluatorBase&lt;Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt; &gt;::m_right_nocontract_strides' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>Eigen::TensorContractionEvaluatorBase&lt;Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt; &gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorContractionEvaluatorBase@U?$TensorEvaluator@$$CBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$00$0A@_J@Eigen@@$$CBV?$Tensor@M$01$0A@_J@4@@Eigen@@UThreadPoolDevice@2@@Eigen@@@Eigen@@QEAA@AEBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$00$0A@_J@Eigen@@$$CBV?$Tensor@M$01$0A@_J@4@@1@AEBUThreadPoolDevice@1@@Z</DECORATED>
    <FUNCLINE>152</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>Eigen::TensorContractionEvaluatorBase&lt;Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt; &gt;::m_right_nocontract_strides</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContraction.h</FILENAME>
      <LINE>184</LINE>
      <COLUMN>62</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorContractionEvaluatorBase&lt;Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt; &gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorContractionEvaluatorBase@U?$TensorEvaluator@$$CBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$00$0A@_J@Eigen@@$$CBV?$Tensor@M$01$0A@_J@4@@Eigen@@UThreadPoolDevice@2@@Eigen@@@Eigen@@QEAA@AEBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$00$0A@_J@Eigen@@$$CBV?$Tensor@M$01$0A@_J@4@@1@AEBUThreadPoolDevice@1@@Z</DECORATED>
    <FUNCLINE>152</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContraction.h</FILENAME>
      <LINE>184</LINE>
      <COLUMN>58</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorContractionEvaluatorBase&lt;Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt; &gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorContractionEvaluatorBase@U?$TensorEvaluator@$$CBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$00$0A@_J@Eigen@@$$CBV?$Tensor@M$01$0A@_J@4@@Eigen@@UThreadPoolDevice@2@@Eigen@@@Eigen@@QEAA@AEBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$00$0A@_J@Eigen@@$$CBV?$Tensor@M$01$0A@_J@4@@1@AEBUThreadPoolDevice@1@@Z</DECORATED>
    <FUNCLINE>152</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContraction.h</FILENAME>
      <LINE>187</LINE>
      <COLUMN>64</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorContractionEvaluatorBase&lt;Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt; &gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorContractionEvaluatorBase@U?$TensorEvaluator@$$CBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$00$0A@_J@Eigen@@$$CBV?$Tensor@M$01$0A@_J@4@@Eigen@@UThreadPoolDevice@2@@Eigen@@@Eigen@@QEAA@AEBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$00$0A@_J@Eigen@@$$CBV?$Tensor@M$01$0A@_J@4@@1@AEBUThreadPoolDevice@1@@Z</DECORATED>
    <FUNCLINE>152</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContraction.h</FILENAME>
      <LINE>187</LINE>
      <COLUMN>60</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorContractionEvaluatorBase&lt;Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt; &gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorContractionEvaluatorBase@U?$TensorEvaluator@$$CBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$00$0A@_J@Eigen@@$$CBV?$Tensor@M$01$0A@_J@4@@Eigen@@UThreadPoolDevice@2@@Eigen@@@Eigen@@QEAA@AEBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$00$0A@_J@Eigen@@$$CBV?$Tensor@M$01$0A@_J@4@@1@AEBUThreadPoolDevice@1@@Z</DECORATED>
    <FUNCLINE>152</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContraction.h</FILENAME>
      <LINE>192</LINE>
      <COLUMN>77</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorContractionEvaluatorBase&lt;Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt; &gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorContractionEvaluatorBase@U?$TensorEvaluator@$$CBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$00$0A@_J@Eigen@@$$CBV?$Tensor@M$01$0A@_J@4@@Eigen@@UThreadPoolDevice@2@@Eigen@@@Eigen@@QEAA@AEBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$00$0A@_J@Eigen@@$$CBV?$Tensor@M$01$0A@_J@4@@1@AEBUThreadPoolDevice@1@@Z</DECORATED>
    <FUNCLINE>152</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContraction.h</FILENAME>
      <LINE>193</LINE>
      <COLUMN>78</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorContractionEvaluatorBase&lt;Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt; &gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorContractionEvaluatorBase@U?$TensorEvaluator@$$CBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$00$0A@_J@Eigen@@$$CBV?$Tensor@M$01$0A@_J@4@@Eigen@@UThreadPoolDevice@2@@Eigen@@@Eigen@@QEAA@AEBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$00$0A@_J@Eigen@@$$CBV?$Tensor@M$01$0A@_J@4@@1@AEBUThreadPoolDevice@1@@Z</DECORATED>
    <FUNCLINE>152</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContraction.h</FILENAME>
      <LINE>213</LINE>
      <COLUMN>19</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorContractionEvaluatorBase&lt;Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt; &gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorContractionEvaluatorBase@U?$TensorEvaluator@$$CBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$00$0A@_J@Eigen@@$$CBV?$Tensor@M$01$0A@_J@4@@Eigen@@UThreadPoolDevice@2@@Eigen@@@Eigen@@QEAA@AEBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$00$0A@_J@Eigen@@$$CBV?$Tensor@M$01$0A@_J@4@@1@AEBUThreadPoolDevice@1@@Z</DECORATED>
    <FUNCLINE>152</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContraction.h</FILENAME>
      <LINE>219</LINE>
      <COLUMN>19</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorContractionEvaluatorBase&lt;Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt; &gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorContractionEvaluatorBase@U?$TensorEvaluator@$$CBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$00$0A@_J@Eigen@@$$CBV?$Tensor@M$01$0A@_J@4@@Eigen@@UThreadPoolDevice@2@@Eigen@@@Eigen@@QEAA@AEBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$00$0A@_J@Eigen@@$$CBV?$Tensor@M$01$0A@_J@4@@1@AEBUThreadPoolDevice@1@@Z</DECORATED>
    <FUNCLINE>152</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContraction.h</FILENAME>
      <LINE>254</LINE>
      <COLUMN>26</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorContractionEvaluatorBase&lt;Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt; &gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorContractionEvaluatorBase@U?$TensorEvaluator@$$CBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$00$0A@_J@Eigen@@$$CBV?$Tensor@M$01$0A@_J@4@@Eigen@@UThreadPoolDevice@2@@Eigen@@@Eigen@@QEAA@AEBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$00$0A@_J@Eigen@@$$CBV?$Tensor@M$01$0A@_J@4@@1@AEBUThreadPoolDevice@1@@Z</DECORATED>
    <FUNCLINE>152</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContraction.h</FILENAME>
      <LINE>255</LINE>
      <COLUMN>36</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorContractionEvaluatorBase&lt;Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt; &gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorContractionEvaluatorBase@U?$TensorEvaluator@$$CBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$00$0A@_J@Eigen@@$$CBV?$Tensor@M$01$0A@_J@4@@Eigen@@UThreadPoolDevice@2@@Eigen@@@Eigen@@QEAA@AEBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$00$0A@_J@Eigen@@$$CBV?$Tensor@M$01$0A@_J@4@@1@AEBUThreadPoolDevice@1@@Z</DECORATED>
    <FUNCLINE>152</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContraction.h</FILENAME>
      <LINE>277</LINE>
      <COLUMN>26</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorContractionEvaluatorBase&lt;Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt; &gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorContractionEvaluatorBase@U?$TensorEvaluator@$$CBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$00$0A@_J@Eigen@@$$CBV?$Tensor@M$01$0A@_J@4@@Eigen@@UThreadPoolDevice@2@@Eigen@@@Eigen@@QEAA@AEBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$00$0A@_J@Eigen@@$$CBV?$Tensor@M$01$0A@_J@4@@1@AEBUThreadPoolDevice@1@@Z</DECORATED>
    <FUNCLINE>152</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContraction.h</FILENAME>
      <LINE>278</LINE>
      <COLUMN>36</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorContractionEvaluatorBase&lt;Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt; &gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorContractionEvaluatorBase@U?$TensorEvaluator@$$CBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$00$0A@_J@Eigen@@$$CBV?$Tensor@M$01$0A@_J@4@@Eigen@@UThreadPoolDevice@2@@Eigen@@@Eigen@@QEAA@AEBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$00$0A@_J@Eigen@@$$CBV?$Tensor@M$01$0A@_J@4@@1@AEBUThreadPoolDevice@1@@Z</DECORATED>
    <FUNCLINE>152</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContraction.h</FILENAME>
      <LINE>305</LINE>
      <COLUMN>21</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorContractionEvaluatorBase&lt;Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt; &gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorContractionEvaluatorBase@U?$TensorEvaluator@$$CBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$00$0A@_J@Eigen@@$$CBV?$Tensor@M$01$0A@_J@4@@Eigen@@UThreadPoolDevice@2@@Eigen@@@Eigen@@QEAA@AEBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$00$0A@_J@Eigen@@$$CBV?$Tensor@M$01$0A@_J@4@@1@AEBUThreadPoolDevice@1@@Z</DECORATED>
    <FUNCLINE>152</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContraction.h</FILENAME>
      <LINE>312</LINE>
      <COLUMN>44</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorContractionEvaluatorBase&lt;Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt; &gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorContractionEvaluatorBase@U?$TensorEvaluator@$$CBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$00$0A@_J@Eigen@@$$CBV?$Tensor@M$01$0A@_J@4@@Eigen@@UThreadPoolDevice@2@@Eigen@@@Eigen@@QEAA@AEBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$00$0A@_J@Eigen@@$$CBV?$Tensor@M$01$0A@_J@4@@1@AEBUThreadPoolDevice@1@@Z</DECORATED>
    <FUNCLINE>152</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContractionThreadPool.h</FILENAME>
      <LINE>294</LINE>
      <COLUMN>4</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;::Context&lt;Eigen::internal::gemm_pack_lhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,0&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,8,4,0,0,0&gt;,Eigen::internal::gemm_pack_rhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,4,0,0,0&gt;,Eigen::internal::gebp_kernel&lt;float,float,__int64,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt;,8,4,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,0&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt; &gt;::state_kernel_' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;::Context&lt;Eigen::internal::gemm_pack_lhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,0&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,8,4,0,0,0&gt;,Eigen::internal::gemm_pack_rhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,4,0,0,0&gt;,Eigen::internal::gebp_kernel&lt;float,float,__int64,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt;,8,4,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,0&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt; &gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$Context@U?$gemm_pack_lhs@M_JV?$TensorContractionSubMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$00$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$0A@@std@@V?$array@_J$00@4@$03$0A@$0A@$0A@@internal@Eigen@@$07$03$0A@$0A@$0A@@internal@Eigen@@U?$gemm_pack_rhs@M_JV?$TensorContractionSubMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0A@$0A@@internal@Eigen@@$03$0A@$0A@$0A@@23@U?$gebp_kernel@MM_JV?$blas_data_mapper@M_J$0A@$0A@$00@internal@Eigen@@$07$03$0A@$0A@@23@V?$TensorContractionInputMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$00$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$0A@@std@@V?$array@_J$00@4@$03$0A@$0A@$0A@@23@V?$TensorContractionInputMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0A@$0A@@23@V?$blas_data_mapper@M_J$0A@$0A@$00@23@@?$TensorEvaluator@$$CBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$00$0A@_J@Eigen@@$$CBV?$Tensor@M$01$0A@_J@4@@Eigen@@UThreadPoolDevice@2@@Eigen@@QEAA@AEBUThreadPoolDevice@2@HAEAV?$TensorContractionInputMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$00$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$0A@@std@@V?$array@_J$00@4@$03$0A@$0A@$0A@@internal@2@AEAV?$TensorContractionInputMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0A@$0A@@52@PEAM_J444444444444_N5@Z</DECORATED>
    <FUNCLINE>294</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;::Context&lt;Eigen::internal::gemm_pack_lhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,0&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,8,4,0,0,0&gt;,Eigen::internal::gemm_pack_rhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,4,0,0,0&gt;,Eigen::internal::gebp_kernel&lt;float,float,__int64,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt;,8,4,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,0&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt; &gt;::state_kernel_</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContractionThreadPool.h</FILENAME>
      <LINE>294</LINE>
      <COLUMN>4</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;::Context&lt;Eigen::internal::gemm_pack_lhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,0&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,8,4,0,0,0&gt;,Eigen::internal::gemm_pack_rhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,4,0,0,0&gt;,Eigen::internal::gebp_kernel&lt;float,float,__int64,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt;,8,4,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,0&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt; &gt;::pad_' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;::Context&lt;Eigen::internal::gemm_pack_lhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,0&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,8,4,0,0,0&gt;,Eigen::internal::gemm_pack_rhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,4,0,0,0&gt;,Eigen::internal::gebp_kernel&lt;float,float,__int64,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt;,8,4,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,0&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt; &gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$Context@U?$gemm_pack_lhs@M_JV?$TensorContractionSubMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$00$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$0A@@std@@V?$array@_J$00@4@$03$0A@$0A@$0A@@internal@Eigen@@$07$03$0A@$0A@$0A@@internal@Eigen@@U?$gemm_pack_rhs@M_JV?$TensorContractionSubMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0A@$0A@@internal@Eigen@@$03$0A@$0A@$0A@@23@U?$gebp_kernel@MM_JV?$blas_data_mapper@M_J$0A@$0A@$00@internal@Eigen@@$07$03$0A@$0A@@23@V?$TensorContractionInputMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$00$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$0A@@std@@V?$array@_J$00@4@$03$0A@$0A@$0A@@23@V?$TensorContractionInputMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0A@$0A@@23@V?$blas_data_mapper@M_J$0A@$0A@$00@23@@?$TensorEvaluator@$$CBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$00$0A@_J@Eigen@@$$CBV?$Tensor@M$01$0A@_J@4@@Eigen@@UThreadPoolDevice@2@@Eigen@@QEAA@AEBUThreadPoolDevice@2@HAEAV?$TensorContractionInputMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$00$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$0A@@std@@V?$array@_J$00@4@$03$0A@$0A@$0A@@internal@2@AEAV?$TensorContractionInputMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0A@$0A@@52@PEAM_J444444444444_N5@Z</DECORATED>
    <FUNCLINE>294</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;::Context&lt;Eigen::internal::gemm_pack_lhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,0&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,8,4,0,0,0&gt;,Eigen::internal::gemm_pack_rhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,4,0,0,0&gt;,Eigen::internal::gebp_kernel&lt;float,float,__int64,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt;,8,4,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,0&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt; &gt;::pad_</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContractionThreadPool.h</FILENAME>
      <LINE>294</LINE>
      <COLUMN>4</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;::Context&lt;Eigen::internal::gemm_pack_lhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,0&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,8,4,0,0,0&gt;,Eigen::internal::gemm_pack_rhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,1,0&gt;,4,0,0,0&gt;,Eigen::internal::gebp_kernel&lt;float,float,__int64,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt;,8,4,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,0&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,1,0&gt;,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt; &gt;::state_kernel_' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;::Context&lt;Eigen::internal::gemm_pack_lhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,0&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,8,4,0,0,0&gt;,Eigen::internal::gemm_pack_rhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,1,0&gt;,4,0,0,0&gt;,Eigen::internal::gebp_kernel&lt;float,float,__int64,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt;,8,4,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,0&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,1,0&gt;,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt; &gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$Context@U?$gemm_pack_lhs@M_JV?$TensorContractionSubMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$00$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$0A@@std@@V?$array@_J$00@4@$03$0A@$0A@$0A@@internal@Eigen@@$07$03$0A@$0A@$0A@@internal@Eigen@@U?$gemm_pack_rhs@M_JV?$TensorContractionSubMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$00$0A@@internal@Eigen@@$03$0A@$0A@$0A@@23@U?$gebp_kernel@MM_JV?$blas_data_mapper@M_J$0A@$0A@$00@internal@Eigen@@$07$03$0A@$0A@@23@V?$TensorContractionInputMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$00$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$0A@@std@@V?$array@_J$00@4@$03$0A@$0A@$0A@@23@V?$TensorContractionInputMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$00$0A@@23@V?$blas_data_mapper@M_J$0A@$0A@$00@23@@?$TensorEvaluator@$$CBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$00$0A@_J@Eigen@@$$CBV?$Tensor@M$01$0A@_J@4@@Eigen@@UThreadPoolDevice@2@@Eigen@@QEAA@AEBUThreadPoolDevice@2@HAEAV?$TensorContractionInputMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$00$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$0A@@std@@V?$array@_J$00@4@$03$0A@$0A@$0A@@internal@2@AEAV?$TensorContractionInputMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$00$0A@@52@PEAM_J444444444444_N5@Z</DECORATED>
    <FUNCLINE>294</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;::Context&lt;Eigen::internal::gemm_pack_lhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,0&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,8,4,0,0,0&gt;,Eigen::internal::gemm_pack_rhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,1,0&gt;,4,0,0,0&gt;,Eigen::internal::gebp_kernel&lt;float,float,__int64,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt;,8,4,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,0&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,1,0&gt;,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt; &gt;::state_kernel_</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContractionThreadPool.h</FILENAME>
      <LINE>294</LINE>
      <COLUMN>4</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;::Context&lt;Eigen::internal::gemm_pack_lhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,0&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,8,4,0,0,0&gt;,Eigen::internal::gemm_pack_rhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,1,0&gt;,4,0,0,0&gt;,Eigen::internal::gebp_kernel&lt;float,float,__int64,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt;,8,4,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,0&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,1,0&gt;,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt; &gt;::pad_' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;::Context&lt;Eigen::internal::gemm_pack_lhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,0&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,8,4,0,0,0&gt;,Eigen::internal::gemm_pack_rhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,1,0&gt;,4,0,0,0&gt;,Eigen::internal::gebp_kernel&lt;float,float,__int64,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt;,8,4,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,0&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,1,0&gt;,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt; &gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$Context@U?$gemm_pack_lhs@M_JV?$TensorContractionSubMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$00$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$0A@@std@@V?$array@_J$00@4@$03$0A@$0A@$0A@@internal@Eigen@@$07$03$0A@$0A@$0A@@internal@Eigen@@U?$gemm_pack_rhs@M_JV?$TensorContractionSubMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$00$0A@@internal@Eigen@@$03$0A@$0A@$0A@@23@U?$gebp_kernel@MM_JV?$blas_data_mapper@M_J$0A@$0A@$00@internal@Eigen@@$07$03$0A@$0A@@23@V?$TensorContractionInputMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$00$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$0A@@std@@V?$array@_J$00@4@$03$0A@$0A@$0A@@23@V?$TensorContractionInputMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$00$0A@@23@V?$blas_data_mapper@M_J$0A@$0A@$00@23@@?$TensorEvaluator@$$CBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$00$0A@_J@Eigen@@$$CBV?$Tensor@M$01$0A@_J@4@@Eigen@@UThreadPoolDevice@2@@Eigen@@QEAA@AEBUThreadPoolDevice@2@HAEAV?$TensorContractionInputMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$00$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$0A@@std@@V?$array@_J$00@4@$03$0A@$0A@$0A@@internal@2@AEAV?$TensorContractionInputMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$00$0A@@52@PEAM_J444444444444_N5@Z</DECORATED>
    <FUNCLINE>294</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;::Context&lt;Eigen::internal::gemm_pack_lhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,0&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,8,4,0,0,0&gt;,Eigen::internal::gemm_pack_rhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,1,0&gt;,4,0,0,0&gt;,Eigen::internal::gebp_kernel&lt;float,float,__int64,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt;,8,4,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,0&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,1,0&gt;,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt; &gt;::pad_</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContractionThreadPool.h</FILENAME>
      <LINE>294</LINE>
      <COLUMN>4</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;::Context&lt;Eigen::internal::gemm_pack_lhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,0&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,8,4,0,0,0&gt;,Eigen::internal::gemm_pack_rhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,4,0,0,0&gt;,Eigen::internal::gebp_kernel&lt;float,float,__int64,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt;,8,4,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,0&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt; &gt;::pad_' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;::Context&lt;Eigen::internal::gemm_pack_lhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,0&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,8,4,0,0,0&gt;,Eigen::internal::gemm_pack_rhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,4,0,0,0&gt;,Eigen::internal::gebp_kernel&lt;float,float,__int64,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt;,8,4,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,0&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt; &gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$Context@U?$gemm_pack_lhs@M_JV?$TensorContractionSubMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$00$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$0A@@std@@V?$array@_J$00@4@$03$0A@$0A@$0A@@internal@Eigen@@$07$03$0A@$0A@$0A@@internal@Eigen@@U?$gemm_pack_rhs@M_JV?$TensorContractionSubMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0A@$0A@@internal@Eigen@@$03$0A@$0A@$0A@@23@U?$gebp_kernel@MM_JV?$blas_data_mapper@M_J$0A@$0A@$00@internal@Eigen@@$07$03$0A@$0A@@23@V?$TensorContractionInputMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$00$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$0A@@std@@V?$array@_J$00@4@$03$0A@$0A@$0A@@23@V?$TensorContractionInputMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0A@$0A@@23@V?$blas_data_mapper@M_J$0A@$0A@$00@23@@?$TensorEvaluator@$$CBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$00$0A@_J@Eigen@@$$CBV?$Tensor@M$01$0A@_J@4@@Eigen@@UThreadPoolDevice@2@@Eigen@@QEAA@AEBUThreadPoolDevice@2@HAEAV?$TensorContractionInputMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$00$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$0A@@std@@V?$array@_J$00@4@$03$0A@$0A@$0A@@internal@2@AEAV?$TensorContractionInputMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0A@$0A@@52@PEAM_J444444444444_N5@Z</DECORATED>
    <FUNCLINE>294</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;::Context&lt;Eigen::internal::gemm_pack_lhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,0&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,8,4,0,0,0&gt;,Eigen::internal::gemm_pack_rhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,4,0,0,0&gt;,Eigen::internal::gebp_kernel&lt;float,float,__int64,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt;,8,4,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,0&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt; &gt;::pad_</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContractionThreadPool.h</FILENAME>
      <LINE>294</LINE>
      <COLUMN>4</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;::Context&lt;Eigen::internal::gemm_pack_lhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,0&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,8,4,0,0,0&gt;,Eigen::internal::gemm_pack_rhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,4,0,0,0&gt;,Eigen::internal::gebp_kernel&lt;float,float,__int64,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt;,8,4,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,0&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt; &gt;::state_kernel_' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;::Context&lt;Eigen::internal::gemm_pack_lhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,0&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,8,4,0,0,0&gt;,Eigen::internal::gemm_pack_rhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,4,0,0,0&gt;,Eigen::internal::gebp_kernel&lt;float,float,__int64,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt;,8,4,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,0&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt; &gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$Context@U?$gemm_pack_lhs@M_JV?$TensorContractionSubMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$00$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$0A@@std@@V?$array@_J$00@4@$03$0A@$0A@$0A@@internal@Eigen@@$07$03$0A@$0A@$0A@@internal@Eigen@@U?$gemm_pack_rhs@M_JV?$TensorContractionSubMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0A@$0A@@internal@Eigen@@$03$0A@$0A@$0A@@23@U?$gebp_kernel@MM_JV?$blas_data_mapper@M_J$0A@$0A@$00@internal@Eigen@@$07$03$0A@$0A@@23@V?$TensorContractionInputMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$00$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$0A@@std@@V?$array@_J$00@4@$03$0A@$0A@$0A@@23@V?$TensorContractionInputMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0A@$0A@@23@V?$blas_data_mapper@M_J$0A@$0A@$00@23@@?$TensorEvaluator@$$CBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$00$0A@_J@Eigen@@$$CBV?$Tensor@M$01$0A@_J@4@@Eigen@@UThreadPoolDevice@2@@Eigen@@QEAA@AEBUThreadPoolDevice@2@HAEAV?$TensorContractionInputMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$00$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$0A@@std@@V?$array@_J$00@4@$03$0A@$0A@$0A@@internal@2@AEAV?$TensorContractionInputMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0A@$0A@@52@PEAM_J444444444444_N5@Z</DECORATED>
    <FUNCLINE>294</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;::Context&lt;Eigen::internal::gemm_pack_lhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,0&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,8,4,0,0,0&gt;,Eigen::internal::gemm_pack_rhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,4,0,0,0&gt;,Eigen::internal::gebp_kernel&lt;float,float,__int64,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt;,8,4,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,0&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt; &gt;::state_kernel_</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContractionThreadPool.h</FILENAME>
      <LINE>294</LINE>
      <COLUMN>4</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;::Context&lt;Eigen::internal::gemm_pack_lhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,0&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,8,4,0,0,0&gt;,Eigen::internal::gemm_pack_rhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,1,0&gt;,4,0,0,0&gt;,Eigen::internal::gebp_kernel&lt;float,float,__int64,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt;,8,4,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,0&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,1,0&gt;,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt; &gt;::state_kernel_' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;::Context&lt;Eigen::internal::gemm_pack_lhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,0&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,8,4,0,0,0&gt;,Eigen::internal::gemm_pack_rhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,1,0&gt;,4,0,0,0&gt;,Eigen::internal::gebp_kernel&lt;float,float,__int64,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt;,8,4,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,0&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,1,0&gt;,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt; &gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$Context@U?$gemm_pack_lhs@M_JV?$TensorContractionSubMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$00$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$0A@@std@@V?$array@_J$00@4@$03$0A@$0A@$0A@@internal@Eigen@@$07$03$0A@$0A@$0A@@internal@Eigen@@U?$gemm_pack_rhs@M_JV?$TensorContractionSubMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$00$0A@@internal@Eigen@@$03$0A@$0A@$0A@@23@U?$gebp_kernel@MM_JV?$blas_data_mapper@M_J$0A@$0A@$00@internal@Eigen@@$07$03$0A@$0A@@23@V?$TensorContractionInputMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$00$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$0A@@std@@V?$array@_J$00@4@$03$0A@$0A@$0A@@23@V?$TensorContractionInputMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$00$0A@@23@V?$blas_data_mapper@M_J$0A@$0A@$00@23@@?$TensorEvaluator@$$CBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$00$0A@_J@Eigen@@$$CBV?$Tensor@M$01$0A@_J@4@@Eigen@@UThreadPoolDevice@2@@Eigen@@QEAA@AEBUThreadPoolDevice@2@HAEAV?$TensorContractionInputMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$00$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$0A@@std@@V?$array@_J$00@4@$03$0A@$0A@$0A@@internal@2@AEAV?$TensorContractionInputMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$00$0A@@52@PEAM_J444444444444_N5@Z</DECORATED>
    <FUNCLINE>294</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;::Context&lt;Eigen::internal::gemm_pack_lhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,0&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,8,4,0,0,0&gt;,Eigen::internal::gemm_pack_rhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,1,0&gt;,4,0,0,0&gt;,Eigen::internal::gebp_kernel&lt;float,float,__int64,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt;,8,4,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,0&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,1,0&gt;,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt; &gt;::state_kernel_</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContractionThreadPool.h</FILENAME>
      <LINE>294</LINE>
      <COLUMN>4</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;::Context&lt;Eigen::internal::gemm_pack_lhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,0&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,8,4,0,0,0&gt;,Eigen::internal::gemm_pack_rhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,1,0&gt;,4,0,0,0&gt;,Eigen::internal::gebp_kernel&lt;float,float,__int64,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt;,8,4,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,0&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,1,0&gt;,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt; &gt;::pad_' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;::Context&lt;Eigen::internal::gemm_pack_lhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,0&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,8,4,0,0,0&gt;,Eigen::internal::gemm_pack_rhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,1,0&gt;,4,0,0,0&gt;,Eigen::internal::gebp_kernel&lt;float,float,__int64,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt;,8,4,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,0&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,1,0&gt;,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt; &gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$Context@U?$gemm_pack_lhs@M_JV?$TensorContractionSubMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$00$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$0A@@std@@V?$array@_J$00@4@$03$0A@$0A@$0A@@internal@Eigen@@$07$03$0A@$0A@$0A@@internal@Eigen@@U?$gemm_pack_rhs@M_JV?$TensorContractionSubMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$00$0A@@internal@Eigen@@$03$0A@$0A@$0A@@23@U?$gebp_kernel@MM_JV?$blas_data_mapper@M_J$0A@$0A@$00@internal@Eigen@@$07$03$0A@$0A@@23@V?$TensorContractionInputMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$00$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$0A@@std@@V?$array@_J$00@4@$03$0A@$0A@$0A@@23@V?$TensorContractionInputMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$00$0A@@23@V?$blas_data_mapper@M_J$0A@$0A@$00@23@@?$TensorEvaluator@$$CBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$00$0A@_J@Eigen@@$$CBV?$Tensor@M$01$0A@_J@4@@Eigen@@UThreadPoolDevice@2@@Eigen@@QEAA@AEBUThreadPoolDevice@2@HAEAV?$TensorContractionInputMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$00$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$0A@@std@@V?$array@_J$00@4@$03$0A@$0A@$0A@@internal@2@AEAV?$TensorContractionInputMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$00$0A@@52@PEAM_J444444444444_N5@Z</DECORATED>
    <FUNCLINE>294</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;::Context&lt;Eigen::internal::gemm_pack_lhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,0&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,8,4,0,0,0&gt;,Eigen::internal::gemm_pack_rhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,1,0&gt;,4,0,0,0&gt;,Eigen::internal::gebp_kernel&lt;float,float,__int64,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt;,8,4,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,0&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,1,0&gt;,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt; &gt;::pad_</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContractionThreadPool.h</FILENAME>
      <LINE>294</LINE>
      <COLUMN>4</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;::Context&lt;Eigen::internal::gemm_pack_lhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,0&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,8,4,0,0,0&gt;,Eigen::internal::gemm_pack_rhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,4,0,0,0&gt;,Eigen::internal::gebp_kernel&lt;float,float,__int64,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt;,8,4,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,0&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt; &gt;::state_kernel_' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;::Context&lt;Eigen::internal::gemm_pack_lhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,0&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,8,4,0,0,0&gt;,Eigen::internal::gemm_pack_rhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,4,0,0,0&gt;,Eigen::internal::gebp_kernel&lt;float,float,__int64,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt;,8,4,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,0&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt; &gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$Context@U?$gemm_pack_lhs@M_JV?$TensorContractionSubMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$00$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$0A@@std@@V?$array@_J$00@4@$03$00$0A@$0A@@internal@Eigen@@$07$03$0A@$0A@$0A@@internal@Eigen@@U?$gemm_pack_rhs@M_JV?$TensorContractionSubMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0A@$0A@@internal@Eigen@@$03$0A@$0A@$0A@@23@U?$gebp_kernel@MM_JV?$blas_data_mapper@M_J$0A@$0A@$00@internal@Eigen@@$07$03$0A@$0A@@23@V?$TensorContractionInputMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$00$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$0A@@std@@V?$array@_J$00@4@$03$00$0A@$0A@@23@V?$TensorContractionInputMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0A@$0A@@23@V?$blas_data_mapper@M_J$0A@$0A@$00@23@@?$TensorEvaluator@$$CBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$00$0A@_J@Eigen@@$$CBV?$Tensor@M$01$0A@_J@4@@Eigen@@UThreadPoolDevice@2@@Eigen@@QEAA@AEBUThreadPoolDevice@2@HAEAV?$TensorContractionInputMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$00$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$0A@@std@@V?$array@_J$00@4@$03$00$0A@$0A@@internal@2@AEAV?$TensorContractionInputMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0A@$0A@@52@PEAM_J444444444444_N5@Z</DECORATED>
    <FUNCLINE>294</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;::Context&lt;Eigen::internal::gemm_pack_lhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,0&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,8,4,0,0,0&gt;,Eigen::internal::gemm_pack_rhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,4,0,0,0&gt;,Eigen::internal::gebp_kernel&lt;float,float,__int64,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt;,8,4,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,0&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt; &gt;::state_kernel_</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContractionThreadPool.h</FILENAME>
      <LINE>294</LINE>
      <COLUMN>4</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;::Context&lt;Eigen::internal::gemm_pack_lhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,0&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,8,4,0,0,0&gt;,Eigen::internal::gemm_pack_rhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,4,0,0,0&gt;,Eigen::internal::gebp_kernel&lt;float,float,__int64,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt;,8,4,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,0&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt; &gt;::pad_' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;::Context&lt;Eigen::internal::gemm_pack_lhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,0&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,8,4,0,0,0&gt;,Eigen::internal::gemm_pack_rhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,4,0,0,0&gt;,Eigen::internal::gebp_kernel&lt;float,float,__int64,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt;,8,4,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,0&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt; &gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$Context@U?$gemm_pack_lhs@M_JV?$TensorContractionSubMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$00$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$0A@@std@@V?$array@_J$00@4@$03$00$0A@$0A@@internal@Eigen@@$07$03$0A@$0A@$0A@@internal@Eigen@@U?$gemm_pack_rhs@M_JV?$TensorContractionSubMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0A@$0A@@internal@Eigen@@$03$0A@$0A@$0A@@23@U?$gebp_kernel@MM_JV?$blas_data_mapper@M_J$0A@$0A@$00@internal@Eigen@@$07$03$0A@$0A@@23@V?$TensorContractionInputMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$00$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$0A@@std@@V?$array@_J$00@4@$03$00$0A@$0A@@23@V?$TensorContractionInputMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0A@$0A@@23@V?$blas_data_mapper@M_J$0A@$0A@$00@23@@?$TensorEvaluator@$$CBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$00$0A@_J@Eigen@@$$CBV?$Tensor@M$01$0A@_J@4@@Eigen@@UThreadPoolDevice@2@@Eigen@@QEAA@AEBUThreadPoolDevice@2@HAEAV?$TensorContractionInputMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$00$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$0A@@std@@V?$array@_J$00@4@$03$00$0A@$0A@@internal@2@AEAV?$TensorContractionInputMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0A@$0A@@52@PEAM_J444444444444_N5@Z</DECORATED>
    <FUNCLINE>294</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;::Context&lt;Eigen::internal::gemm_pack_lhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,0&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,8,4,0,0,0&gt;,Eigen::internal::gemm_pack_rhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,4,0,0,0&gt;,Eigen::internal::gebp_kernel&lt;float,float,__int64,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt;,8,4,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,0&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt; &gt;::pad_</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContractionThreadPool.h</FILENAME>
      <LINE>294</LINE>
      <COLUMN>4</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;::Context&lt;Eigen::internal::gemm_pack_lhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,0&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,8,4,0,0,0&gt;,Eigen::internal::gemm_pack_rhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,1,0&gt;,4,0,0,0&gt;,Eigen::internal::gebp_kernel&lt;float,float,__int64,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt;,8,4,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,0&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,1,0&gt;,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt; &gt;::pad_' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;::Context&lt;Eigen::internal::gemm_pack_lhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,0&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,8,4,0,0,0&gt;,Eigen::internal::gemm_pack_rhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,1,0&gt;,4,0,0,0&gt;,Eigen::internal::gebp_kernel&lt;float,float,__int64,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt;,8,4,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,0&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,1,0&gt;,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt; &gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$Context@U?$gemm_pack_lhs@M_JV?$TensorContractionSubMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$00$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$0A@@std@@V?$array@_J$00@4@$03$00$0A@$0A@@internal@Eigen@@$07$03$0A@$0A@$0A@@internal@Eigen@@U?$gemm_pack_rhs@M_JV?$TensorContractionSubMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$00$0A@@internal@Eigen@@$03$0A@$0A@$0A@@23@U?$gebp_kernel@MM_JV?$blas_data_mapper@M_J$0A@$0A@$00@internal@Eigen@@$07$03$0A@$0A@@23@V?$TensorContractionInputMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$00$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$0A@@std@@V?$array@_J$00@4@$03$00$0A@$0A@@23@V?$TensorContractionInputMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$00$0A@@23@V?$blas_data_mapper@M_J$0A@$0A@$00@23@@?$TensorEvaluator@$$CBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$00$0A@_J@Eigen@@$$CBV?$Tensor@M$01$0A@_J@4@@Eigen@@UThreadPoolDevice@2@@Eigen@@QEAA@AEBUThreadPoolDevice@2@HAEAV?$TensorContractionInputMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$00$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$0A@@std@@V?$array@_J$00@4@$03$00$0A@$0A@@internal@2@AEAV?$TensorContractionInputMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$00$0A@@52@PEAM_J444444444444_N5@Z</DECORATED>
    <FUNCLINE>294</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;::Context&lt;Eigen::internal::gemm_pack_lhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,0&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,8,4,0,0,0&gt;,Eigen::internal::gemm_pack_rhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,1,0&gt;,4,0,0,0&gt;,Eigen::internal::gebp_kernel&lt;float,float,__int64,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt;,8,4,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,0&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,1,0&gt;,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt; &gt;::pad_</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContractionThreadPool.h</FILENAME>
      <LINE>294</LINE>
      <COLUMN>4</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;::Context&lt;Eigen::internal::gemm_pack_lhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,0&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,8,4,0,0,0&gt;,Eigen::internal::gemm_pack_rhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,1,0&gt;,4,0,0,0&gt;,Eigen::internal::gebp_kernel&lt;float,float,__int64,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt;,8,4,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,0&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,1,0&gt;,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt; &gt;::state_kernel_' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;::Context&lt;Eigen::internal::gemm_pack_lhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,0&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,8,4,0,0,0&gt;,Eigen::internal::gemm_pack_rhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,1,0&gt;,4,0,0,0&gt;,Eigen::internal::gebp_kernel&lt;float,float,__int64,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt;,8,4,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,0&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,1,0&gt;,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt; &gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$Context@U?$gemm_pack_lhs@M_JV?$TensorContractionSubMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$00$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$0A@@std@@V?$array@_J$00@4@$03$00$0A@$0A@@internal@Eigen@@$07$03$0A@$0A@$0A@@internal@Eigen@@U?$gemm_pack_rhs@M_JV?$TensorContractionSubMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$00$0A@@internal@Eigen@@$03$0A@$0A@$0A@@23@U?$gebp_kernel@MM_JV?$blas_data_mapper@M_J$0A@$0A@$00@internal@Eigen@@$07$03$0A@$0A@@23@V?$TensorContractionInputMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$00$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$0A@@std@@V?$array@_J$00@4@$03$00$0A@$0A@@23@V?$TensorContractionInputMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$00$0A@@23@V?$blas_data_mapper@M_J$0A@$0A@$00@23@@?$TensorEvaluator@$$CBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$00$0A@_J@Eigen@@$$CBV?$Tensor@M$01$0A@_J@4@@Eigen@@UThreadPoolDevice@2@@Eigen@@QEAA@AEBUThreadPoolDevice@2@HAEAV?$TensorContractionInputMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$00$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$0A@@std@@V?$array@_J$00@4@$03$00$0A@$0A@@internal@2@AEAV?$TensorContractionInputMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$00$0A@@52@PEAM_J444444444444_N5@Z</DECORATED>
    <FUNCLINE>294</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;::Context&lt;Eigen::internal::gemm_pack_lhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,0&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,8,4,0,0,0&gt;,Eigen::internal::gemm_pack_rhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,1,0&gt;,4,0,0,0&gt;,Eigen::internal::gebp_kernel&lt;float,float,__int64,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt;,8,4,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,0&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,1,0&gt;,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt; &gt;::state_kernel_</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContractionThreadPool.h</FILENAME>
      <LINE>294</LINE>
      <COLUMN>4</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;::Context&lt;Eigen::internal::gemm_pack_lhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,0&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,8,4,0,0,0&gt;,Eigen::internal::gemm_pack_rhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,4,0,0,0&gt;,Eigen::internal::gebp_kernel&lt;float,float,__int64,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt;,8,4,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,0&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt; &gt;::state_kernel_' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;::Context&lt;Eigen::internal::gemm_pack_lhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,0&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,8,4,0,0,0&gt;,Eigen::internal::gemm_pack_rhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,4,0,0,0&gt;,Eigen::internal::gebp_kernel&lt;float,float,__int64,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt;,8,4,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,0&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt; &gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$Context@U?$gemm_pack_lhs@M_JV?$TensorContractionSubMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$00$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$0A@@std@@V?$array@_J$00@4@$03$00$0A@$0A@@internal@Eigen@@$07$03$0A@$0A@$0A@@internal@Eigen@@U?$gemm_pack_rhs@M_JV?$TensorContractionSubMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0A@$0A@@internal@Eigen@@$03$0A@$0A@$0A@@23@U?$gebp_kernel@MM_JV?$blas_data_mapper@M_J$0A@$0A@$00@internal@Eigen@@$07$03$0A@$0A@@23@V?$TensorContractionInputMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$00$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$0A@@std@@V?$array@_J$00@4@$03$00$0A@$0A@@23@V?$TensorContractionInputMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0A@$0A@@23@V?$blas_data_mapper@M_J$0A@$0A@$00@23@@?$TensorEvaluator@$$CBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$00$0A@_J@Eigen@@$$CBV?$Tensor@M$01$0A@_J@4@@Eigen@@UThreadPoolDevice@2@@Eigen@@QEAA@AEBUThreadPoolDevice@2@HAEAV?$TensorContractionInputMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$00$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$0A@@std@@V?$array@_J$00@4@$03$00$0A@$0A@@internal@2@AEAV?$TensorContractionInputMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0A@$0A@@52@PEAM_J444444444444_N5@Z</DECORATED>
    <FUNCLINE>294</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;::Context&lt;Eigen::internal::gemm_pack_lhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,0&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,8,4,0,0,0&gt;,Eigen::internal::gemm_pack_rhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,4,0,0,0&gt;,Eigen::internal::gebp_kernel&lt;float,float,__int64,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt;,8,4,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,0&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt; &gt;::state_kernel_</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContractionThreadPool.h</FILENAME>
      <LINE>294</LINE>
      <COLUMN>4</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;::Context&lt;Eigen::internal::gemm_pack_lhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,0&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,8,4,0,0,0&gt;,Eigen::internal::gemm_pack_rhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,4,0,0,0&gt;,Eigen::internal::gebp_kernel&lt;float,float,__int64,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt;,8,4,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,0&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt; &gt;::pad_' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;::Context&lt;Eigen::internal::gemm_pack_lhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,0&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,8,4,0,0,0&gt;,Eigen::internal::gemm_pack_rhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,4,0,0,0&gt;,Eigen::internal::gebp_kernel&lt;float,float,__int64,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt;,8,4,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,0&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt; &gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$Context@U?$gemm_pack_lhs@M_JV?$TensorContractionSubMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$00$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$0A@@std@@V?$array@_J$00@4@$03$00$0A@$0A@@internal@Eigen@@$07$03$0A@$0A@$0A@@internal@Eigen@@U?$gemm_pack_rhs@M_JV?$TensorContractionSubMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0A@$0A@@internal@Eigen@@$03$0A@$0A@$0A@@23@U?$gebp_kernel@MM_JV?$blas_data_mapper@M_J$0A@$0A@$00@internal@Eigen@@$07$03$0A@$0A@@23@V?$TensorContractionInputMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$00$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$0A@@std@@V?$array@_J$00@4@$03$00$0A@$0A@@23@V?$TensorContractionInputMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0A@$0A@@23@V?$blas_data_mapper@M_J$0A@$0A@$00@23@@?$TensorEvaluator@$$CBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$00$0A@_J@Eigen@@$$CBV?$Tensor@M$01$0A@_J@4@@Eigen@@UThreadPoolDevice@2@@Eigen@@QEAA@AEBUThreadPoolDevice@2@HAEAV?$TensorContractionInputMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$00$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$0A@@std@@V?$array@_J$00@4@$03$00$0A@$0A@@internal@2@AEAV?$TensorContractionInputMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0A@$0A@@52@PEAM_J444444444444_N5@Z</DECORATED>
    <FUNCLINE>294</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;::Context&lt;Eigen::internal::gemm_pack_lhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,0&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,8,4,0,0,0&gt;,Eigen::internal::gemm_pack_rhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,4,0,0,0&gt;,Eigen::internal::gebp_kernel&lt;float,float,__int64,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt;,8,4,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,0&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt; &gt;::pad_</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContractionThreadPool.h</FILENAME>
      <LINE>294</LINE>
      <COLUMN>4</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;::Context&lt;Eigen::internal::gemm_pack_lhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,0&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,8,4,0,0,0&gt;,Eigen::internal::gemm_pack_rhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,1,0&gt;,4,0,0,0&gt;,Eigen::internal::gebp_kernel&lt;float,float,__int64,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt;,8,4,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,0&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,1,0&gt;,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt; &gt;::state_kernel_' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;::Context&lt;Eigen::internal::gemm_pack_lhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,0&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,8,4,0,0,0&gt;,Eigen::internal::gemm_pack_rhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,1,0&gt;,4,0,0,0&gt;,Eigen::internal::gebp_kernel&lt;float,float,__int64,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt;,8,4,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,0&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,1,0&gt;,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt; &gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$Context@U?$gemm_pack_lhs@M_JV?$TensorContractionSubMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$00$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$0A@@std@@V?$array@_J$00@4@$03$00$0A@$0A@@internal@Eigen@@$07$03$0A@$0A@$0A@@internal@Eigen@@U?$gemm_pack_rhs@M_JV?$TensorContractionSubMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$00$0A@@internal@Eigen@@$03$0A@$0A@$0A@@23@U?$gebp_kernel@MM_JV?$blas_data_mapper@M_J$0A@$0A@$00@internal@Eigen@@$07$03$0A@$0A@@23@V?$TensorContractionInputMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$00$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$0A@@std@@V?$array@_J$00@4@$03$00$0A@$0A@@23@V?$TensorContractionInputMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$00$0A@@23@V?$blas_data_mapper@M_J$0A@$0A@$00@23@@?$TensorEvaluator@$$CBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$00$0A@_J@Eigen@@$$CBV?$Tensor@M$01$0A@_J@4@@Eigen@@UThreadPoolDevice@2@@Eigen@@QEAA@AEBUThreadPoolDevice@2@HAEAV?$TensorContractionInputMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$00$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$0A@@std@@V?$array@_J$00@4@$03$00$0A@$0A@@internal@2@AEAV?$TensorContractionInputMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$00$0A@@52@PEAM_J444444444444_N5@Z</DECORATED>
    <FUNCLINE>294</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;::Context&lt;Eigen::internal::gemm_pack_lhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,0&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,8,4,0,0,0&gt;,Eigen::internal::gemm_pack_rhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,1,0&gt;,4,0,0,0&gt;,Eigen::internal::gebp_kernel&lt;float,float,__int64,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt;,8,4,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,0&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,1,0&gt;,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt; &gt;::state_kernel_</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContractionThreadPool.h</FILENAME>
      <LINE>294</LINE>
      <COLUMN>4</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;::Context&lt;Eigen::internal::gemm_pack_lhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,0&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,8,4,0,0,0&gt;,Eigen::internal::gemm_pack_rhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,1,0&gt;,4,0,0,0&gt;,Eigen::internal::gebp_kernel&lt;float,float,__int64,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt;,8,4,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,0&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,1,0&gt;,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt; &gt;::pad_' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;::Context&lt;Eigen::internal::gemm_pack_lhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,0&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,8,4,0,0,0&gt;,Eigen::internal::gemm_pack_rhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,1,0&gt;,4,0,0,0&gt;,Eigen::internal::gebp_kernel&lt;float,float,__int64,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt;,8,4,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,0&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,1,0&gt;,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt; &gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$Context@U?$gemm_pack_lhs@M_JV?$TensorContractionSubMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$00$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$0A@@std@@V?$array@_J$00@4@$03$00$0A@$0A@@internal@Eigen@@$07$03$0A@$0A@$0A@@internal@Eigen@@U?$gemm_pack_rhs@M_JV?$TensorContractionSubMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$00$0A@@internal@Eigen@@$03$0A@$0A@$0A@@23@U?$gebp_kernel@MM_JV?$blas_data_mapper@M_J$0A@$0A@$00@internal@Eigen@@$07$03$0A@$0A@@23@V?$TensorContractionInputMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$00$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$0A@@std@@V?$array@_J$00@4@$03$00$0A@$0A@@23@V?$TensorContractionInputMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$00$0A@@23@V?$blas_data_mapper@M_J$0A@$0A@$00@23@@?$TensorEvaluator@$$CBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$00$0A@_J@Eigen@@$$CBV?$Tensor@M$01$0A@_J@4@@Eigen@@UThreadPoolDevice@2@@Eigen@@QEAA@AEBUThreadPoolDevice@2@HAEAV?$TensorContractionInputMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$00$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$0A@@std@@V?$array@_J$00@4@$03$00$0A@$0A@@internal@2@AEAV?$TensorContractionInputMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$00$0A@@52@PEAM_J444444444444_N5@Z</DECORATED>
    <FUNCLINE>294</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;::Context&lt;Eigen::internal::gemm_pack_lhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,0&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,8,4,0,0,0&gt;,Eigen::internal::gemm_pack_rhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,1,0&gt;,4,0,0,0&gt;,Eigen::internal::gebp_kernel&lt;float,float,__int64,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt;,8,4,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,0&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,1,0&gt;,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt; &gt;::pad_</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContractionThreadPool.h</FILENAME>
      <LINE>294</LINE>
      <COLUMN>4</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;::Context&lt;Eigen::internal::gemm_pack_lhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,8,4,0,0,0&gt;,Eigen::internal::gemm_pack_rhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,4,0,0,0&gt;,Eigen::internal::gebp_kernel&lt;float,float,__int64,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt;,8,4,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt; &gt;::state_kernel_' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;::Context&lt;Eigen::internal::gemm_pack_lhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,8,4,0,0,0&gt;,Eigen::internal::gemm_pack_rhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,4,0,0,0&gt;,Eigen::internal::gebp_kernel&lt;float,float,__int64,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt;,8,4,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt; &gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$Context@U?$gemm_pack_lhs@M_JV?$TensorContractionSubMapper@M_J$00U?$TensorEvaluator@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$01$0A@_J@3@$$CBV43@@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0A@$0A@@internal@Eigen@@$07$03$0A@$0A@$0A@@internal@Eigen@@U?$gemm_pack_rhs@M_JV?$TensorContractionSubMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0A@$0A@@internal@Eigen@@$03$0A@$0A@$0A@@23@U?$gebp_kernel@MM_JV?$blas_data_mapper@M_J$0A@$0A@$00@internal@Eigen@@$07$03$0A@$0A@@23@V?$TensorContractionInputMapper@M_J$00U?$TensorEvaluator@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$01$0A@_J@3@$$CBV43@@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0A@$0A@@23@V?$TensorContractionInputMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0A@$0A@@23@V?$blas_data_mapper@M_J$0A@$0A@$00@23@@?$TensorEvaluator@$$CBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$01$0A@_J@3@$$CBV43@@Eigen@@$$CBV?$Tensor@M$01$0A@_J@4@@Eigen@@UThreadPoolDevice@2@@Eigen@@QEAA@AEBUThreadPoolDevice@2@HAEAV?$TensorContractionInputMapper@M_J$00U?$TensorEvaluator@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$01$0A@_J@3@$$CBV43@@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0A@$0A@@internal@2@AEAV?$TensorContractionInputMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0A@$0A@@52@PEAM_J444444444444_N5@Z</DECORATED>
    <FUNCLINE>294</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;::Context&lt;Eigen::internal::gemm_pack_lhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,8,4,0,0,0&gt;,Eigen::internal::gemm_pack_rhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,4,0,0,0&gt;,Eigen::internal::gebp_kernel&lt;float,float,__int64,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt;,8,4,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt; &gt;::state_kernel_</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContractionThreadPool.h</FILENAME>
      <LINE>294</LINE>
      <COLUMN>4</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;::Context&lt;Eigen::internal::gemm_pack_lhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,8,4,0,0,0&gt;,Eigen::internal::gemm_pack_rhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,4,0,0,0&gt;,Eigen::internal::gebp_kernel&lt;float,float,__int64,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt;,8,4,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt; &gt;::pad_' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;::Context&lt;Eigen::internal::gemm_pack_lhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,8,4,0,0,0&gt;,Eigen::internal::gemm_pack_rhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,4,0,0,0&gt;,Eigen::internal::gebp_kernel&lt;float,float,__int64,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt;,8,4,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt; &gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$Context@U?$gemm_pack_lhs@M_JV?$TensorContractionSubMapper@M_J$00U?$TensorEvaluator@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$01$0A@_J@3@$$CBV43@@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0A@$0A@@internal@Eigen@@$07$03$0A@$0A@$0A@@internal@Eigen@@U?$gemm_pack_rhs@M_JV?$TensorContractionSubMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0A@$0A@@internal@Eigen@@$03$0A@$0A@$0A@@23@U?$gebp_kernel@MM_JV?$blas_data_mapper@M_J$0A@$0A@$00@internal@Eigen@@$07$03$0A@$0A@@23@V?$TensorContractionInputMapper@M_J$00U?$TensorEvaluator@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$01$0A@_J@3@$$CBV43@@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0A@$0A@@23@V?$TensorContractionInputMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0A@$0A@@23@V?$blas_data_mapper@M_J$0A@$0A@$00@23@@?$TensorEvaluator@$$CBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$01$0A@_J@3@$$CBV43@@Eigen@@$$CBV?$Tensor@M$01$0A@_J@4@@Eigen@@UThreadPoolDevice@2@@Eigen@@QEAA@AEBUThreadPoolDevice@2@HAEAV?$TensorContractionInputMapper@M_J$00U?$TensorEvaluator@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$01$0A@_J@3@$$CBV43@@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0A@$0A@@internal@2@AEAV?$TensorContractionInputMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0A@$0A@@52@PEAM_J444444444444_N5@Z</DECORATED>
    <FUNCLINE>294</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;::Context&lt;Eigen::internal::gemm_pack_lhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,8,4,0,0,0&gt;,Eigen::internal::gemm_pack_rhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,4,0,0,0&gt;,Eigen::internal::gebp_kernel&lt;float,float,__int64,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt;,8,4,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt; &gt;::pad_</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContractionThreadPool.h</FILENAME>
      <LINE>294</LINE>
      <COLUMN>4</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;::Context&lt;Eigen::internal::gemm_pack_lhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,8,4,0,0,0&gt;,Eigen::internal::gemm_pack_rhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,1,0&gt;,4,0,0,0&gt;,Eigen::internal::gebp_kernel&lt;float,float,__int64,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt;,8,4,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,1,0&gt;,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt; &gt;::state_kernel_' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;::Context&lt;Eigen::internal::gemm_pack_lhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,8,4,0,0,0&gt;,Eigen::internal::gemm_pack_rhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,1,0&gt;,4,0,0,0&gt;,Eigen::internal::gebp_kernel&lt;float,float,__int64,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt;,8,4,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,1,0&gt;,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt; &gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$Context@U?$gemm_pack_lhs@M_JV?$TensorContractionSubMapper@M_J$00U?$TensorEvaluator@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$01$0A@_J@3@$$CBV43@@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0A@$0A@@internal@Eigen@@$07$03$0A@$0A@$0A@@internal@Eigen@@U?$gemm_pack_rhs@M_JV?$TensorContractionSubMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$00$0A@@internal@Eigen@@$03$0A@$0A@$0A@@23@U?$gebp_kernel@MM_JV?$blas_data_mapper@M_J$0A@$0A@$00@internal@Eigen@@$07$03$0A@$0A@@23@V?$TensorContractionInputMapper@M_J$00U?$TensorEvaluator@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$01$0A@_J@3@$$CBV43@@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0A@$0A@@23@V?$TensorContractionInputMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$00$0A@@23@V?$blas_data_mapper@M_J$0A@$0A@$00@23@@?$TensorEvaluator@$$CBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$01$0A@_J@3@$$CBV43@@Eigen@@$$CBV?$Tensor@M$01$0A@_J@4@@Eigen@@UThreadPoolDevice@2@@Eigen@@QEAA@AEBUThreadPoolDevice@2@HAEAV?$TensorContractionInputMapper@M_J$00U?$TensorEvaluator@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$01$0A@_J@3@$$CBV43@@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0A@$0A@@internal@2@AEAV?$TensorContractionInputMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$00$0A@@52@PEAM_J444444444444_N5@Z</DECORATED>
    <FUNCLINE>294</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;::Context&lt;Eigen::internal::gemm_pack_lhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,8,4,0,0,0&gt;,Eigen::internal::gemm_pack_rhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,1,0&gt;,4,0,0,0&gt;,Eigen::internal::gebp_kernel&lt;float,float,__int64,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt;,8,4,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,1,0&gt;,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt; &gt;::state_kernel_</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContractionThreadPool.h</FILENAME>
      <LINE>294</LINE>
      <COLUMN>4</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;::Context&lt;Eigen::internal::gemm_pack_lhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,8,4,0,0,0&gt;,Eigen::internal::gemm_pack_rhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,1,0&gt;,4,0,0,0&gt;,Eigen::internal::gebp_kernel&lt;float,float,__int64,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt;,8,4,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,1,0&gt;,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt; &gt;::pad_' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;::Context&lt;Eigen::internal::gemm_pack_lhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,8,4,0,0,0&gt;,Eigen::internal::gemm_pack_rhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,1,0&gt;,4,0,0,0&gt;,Eigen::internal::gebp_kernel&lt;float,float,__int64,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt;,8,4,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,1,0&gt;,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt; &gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$Context@U?$gemm_pack_lhs@M_JV?$TensorContractionSubMapper@M_J$00U?$TensorEvaluator@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$01$0A@_J@3@$$CBV43@@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0A@$0A@@internal@Eigen@@$07$03$0A@$0A@$0A@@internal@Eigen@@U?$gemm_pack_rhs@M_JV?$TensorContractionSubMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$00$0A@@internal@Eigen@@$03$0A@$0A@$0A@@23@U?$gebp_kernel@MM_JV?$blas_data_mapper@M_J$0A@$0A@$00@internal@Eigen@@$07$03$0A@$0A@@23@V?$TensorContractionInputMapper@M_J$00U?$TensorEvaluator@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$01$0A@_J@3@$$CBV43@@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0A@$0A@@23@V?$TensorContractionInputMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$00$0A@@23@V?$blas_data_mapper@M_J$0A@$0A@$00@23@@?$TensorEvaluator@$$CBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$01$0A@_J@3@$$CBV43@@Eigen@@$$CBV?$Tensor@M$01$0A@_J@4@@Eigen@@UThreadPoolDevice@2@@Eigen@@QEAA@AEBUThreadPoolDevice@2@HAEAV?$TensorContractionInputMapper@M_J$00U?$TensorEvaluator@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$01$0A@_J@3@$$CBV43@@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0A@$0A@@internal@2@AEAV?$TensorContractionInputMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$00$0A@@52@PEAM_J444444444444_N5@Z</DECORATED>
    <FUNCLINE>294</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;::Context&lt;Eigen::internal::gemm_pack_lhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,8,4,0,0,0&gt;,Eigen::internal::gemm_pack_rhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,1,0&gt;,4,0,0,0&gt;,Eigen::internal::gebp_kernel&lt;float,float,__int64,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt;,8,4,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,1,0&gt;,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt; &gt;::pad_</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContractionThreadPool.h</FILENAME>
      <LINE>294</LINE>
      <COLUMN>4</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;::Context&lt;Eigen::internal::gemm_pack_lhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,8,4,0,0,0&gt;,Eigen::internal::gemm_pack_rhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,4,0,0,0&gt;,Eigen::internal::gebp_kernel&lt;float,float,__int64,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt;,8,4,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt; &gt;::state_kernel_' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;::Context&lt;Eigen::internal::gemm_pack_lhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,8,4,0,0,0&gt;,Eigen::internal::gemm_pack_rhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,4,0,0,0&gt;,Eigen::internal::gebp_kernel&lt;float,float,__int64,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt;,8,4,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt; &gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$Context@U?$gemm_pack_lhs@M_JV?$TensorContractionSubMapper@M_J$00U?$TensorEvaluator@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$01$0A@_J@3@$$CBV43@@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0A@$0A@@internal@Eigen@@$07$03$0A@$0A@$0A@@internal@Eigen@@U?$gemm_pack_rhs@M_JV?$TensorContractionSubMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0A@$0A@@internal@Eigen@@$03$0A@$0A@$0A@@23@U?$gebp_kernel@MM_JV?$blas_data_mapper@M_J$0A@$0A@$00@internal@Eigen@@$07$03$0A@$0A@@23@V?$TensorContractionInputMapper@M_J$00U?$TensorEvaluator@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$01$0A@_J@3@$$CBV43@@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0A@$0A@@23@V?$TensorContractionInputMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0A@$0A@@23@V?$blas_data_mapper@M_J$0A@$0A@$00@23@@?$TensorEvaluator@$$CBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$01$0A@_J@3@$$CBV43@@Eigen@@$$CBV?$Tensor@M$01$0A@_J@4@@Eigen@@UThreadPoolDevice@2@@Eigen@@QEAA@AEBUThreadPoolDevice@2@HAEAV?$TensorContractionInputMapper@M_J$00U?$TensorEvaluator@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$01$0A@_J@3@$$CBV43@@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0A@$0A@@internal@2@AEAV?$TensorContractionInputMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0A@$0A@@52@PEAM_J444444444444_N5@Z</DECORATED>
    <FUNCLINE>294</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;::Context&lt;Eigen::internal::gemm_pack_lhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,8,4,0,0,0&gt;,Eigen::internal::gemm_pack_rhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,4,0,0,0&gt;,Eigen::internal::gebp_kernel&lt;float,float,__int64,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt;,8,4,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt; &gt;::state_kernel_</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContractionThreadPool.h</FILENAME>
      <LINE>294</LINE>
      <COLUMN>4</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;::Context&lt;Eigen::internal::gemm_pack_lhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,8,4,0,0,0&gt;,Eigen::internal::gemm_pack_rhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,4,0,0,0&gt;,Eigen::internal::gebp_kernel&lt;float,float,__int64,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt;,8,4,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt; &gt;::pad_' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;::Context&lt;Eigen::internal::gemm_pack_lhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,8,4,0,0,0&gt;,Eigen::internal::gemm_pack_rhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,4,0,0,0&gt;,Eigen::internal::gebp_kernel&lt;float,float,__int64,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt;,8,4,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt; &gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$Context@U?$gemm_pack_lhs@M_JV?$TensorContractionSubMapper@M_J$00U?$TensorEvaluator@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$01$0A@_J@3@$$CBV43@@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0A@$0A@@internal@Eigen@@$07$03$0A@$0A@$0A@@internal@Eigen@@U?$gemm_pack_rhs@M_JV?$TensorContractionSubMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0A@$0A@@internal@Eigen@@$03$0A@$0A@$0A@@23@U?$gebp_kernel@MM_JV?$blas_data_mapper@M_J$0A@$0A@$00@internal@Eigen@@$07$03$0A@$0A@@23@V?$TensorContractionInputMapper@M_J$00U?$TensorEvaluator@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$01$0A@_J@3@$$CBV43@@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0A@$0A@@23@V?$TensorContractionInputMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0A@$0A@@23@V?$blas_data_mapper@M_J$0A@$0A@$00@23@@?$TensorEvaluator@$$CBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$01$0A@_J@3@$$CBV43@@Eigen@@$$CBV?$Tensor@M$01$0A@_J@4@@Eigen@@UThreadPoolDevice@2@@Eigen@@QEAA@AEBUThreadPoolDevice@2@HAEAV?$TensorContractionInputMapper@M_J$00U?$TensorEvaluator@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$01$0A@_J@3@$$CBV43@@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0A@$0A@@internal@2@AEAV?$TensorContractionInputMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0A@$0A@@52@PEAM_J444444444444_N5@Z</DECORATED>
    <FUNCLINE>294</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;::Context&lt;Eigen::internal::gemm_pack_lhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,8,4,0,0,0&gt;,Eigen::internal::gemm_pack_rhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,4,0,0,0&gt;,Eigen::internal::gebp_kernel&lt;float,float,__int64,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt;,8,4,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt; &gt;::pad_</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContractionThreadPool.h</FILENAME>
      <LINE>294</LINE>
      <COLUMN>4</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;::Context&lt;Eigen::internal::gemm_pack_lhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,8,4,0,0,0&gt;,Eigen::internal::gemm_pack_rhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,1,0&gt;,4,0,0,0&gt;,Eigen::internal::gebp_kernel&lt;float,float,__int64,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt;,8,4,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,1,0&gt;,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt; &gt;::state_kernel_' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;::Context&lt;Eigen::internal::gemm_pack_lhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,8,4,0,0,0&gt;,Eigen::internal::gemm_pack_rhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,1,0&gt;,4,0,0,0&gt;,Eigen::internal::gebp_kernel&lt;float,float,__int64,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt;,8,4,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,1,0&gt;,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt; &gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$Context@U?$gemm_pack_lhs@M_JV?$TensorContractionSubMapper@M_J$00U?$TensorEvaluator@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$01$0A@_J@3@$$CBV43@@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0A@$0A@@internal@Eigen@@$07$03$0A@$0A@$0A@@internal@Eigen@@U?$gemm_pack_rhs@M_JV?$TensorContractionSubMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$00$0A@@internal@Eigen@@$03$0A@$0A@$0A@@23@U?$gebp_kernel@MM_JV?$blas_data_mapper@M_J$0A@$0A@$00@internal@Eigen@@$07$03$0A@$0A@@23@V?$TensorContractionInputMapper@M_J$00U?$TensorEvaluator@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$01$0A@_J@3@$$CBV43@@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0A@$0A@@23@V?$TensorContractionInputMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$00$0A@@23@V?$blas_data_mapper@M_J$0A@$0A@$00@23@@?$TensorEvaluator@$$CBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$01$0A@_J@3@$$CBV43@@Eigen@@$$CBV?$Tensor@M$01$0A@_J@4@@Eigen@@UThreadPoolDevice@2@@Eigen@@QEAA@AEBUThreadPoolDevice@2@HAEAV?$TensorContractionInputMapper@M_J$00U?$TensorEvaluator@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$01$0A@_J@3@$$CBV43@@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0A@$0A@@internal@2@AEAV?$TensorContractionInputMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$00$0A@@52@PEAM_J444444444444_N5@Z</DECORATED>
    <FUNCLINE>294</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;::Context&lt;Eigen::internal::gemm_pack_lhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,8,4,0,0,0&gt;,Eigen::internal::gemm_pack_rhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,1,0&gt;,4,0,0,0&gt;,Eigen::internal::gebp_kernel&lt;float,float,__int64,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt;,8,4,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,1,0&gt;,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt; &gt;::state_kernel_</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContractionThreadPool.h</FILENAME>
      <LINE>294</LINE>
      <COLUMN>4</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;::Context&lt;Eigen::internal::gemm_pack_lhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,8,4,0,0,0&gt;,Eigen::internal::gemm_pack_rhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,1,0&gt;,4,0,0,0&gt;,Eigen::internal::gebp_kernel&lt;float,float,__int64,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt;,8,4,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,1,0&gt;,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt; &gt;::pad_' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;::Context&lt;Eigen::internal::gemm_pack_lhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,8,4,0,0,0&gt;,Eigen::internal::gemm_pack_rhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,1,0&gt;,4,0,0,0&gt;,Eigen::internal::gebp_kernel&lt;float,float,__int64,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt;,8,4,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,1,0&gt;,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt; &gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$Context@U?$gemm_pack_lhs@M_JV?$TensorContractionSubMapper@M_J$00U?$TensorEvaluator@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$01$0A@_J@3@$$CBV43@@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0A@$0A@@internal@Eigen@@$07$03$0A@$0A@$0A@@internal@Eigen@@U?$gemm_pack_rhs@M_JV?$TensorContractionSubMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$00$0A@@internal@Eigen@@$03$0A@$0A@$0A@@23@U?$gebp_kernel@MM_JV?$blas_data_mapper@M_J$0A@$0A@$00@internal@Eigen@@$07$03$0A@$0A@@23@V?$TensorContractionInputMapper@M_J$00U?$TensorEvaluator@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$01$0A@_J@3@$$CBV43@@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0A@$0A@@23@V?$TensorContractionInputMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$00$0A@@23@V?$blas_data_mapper@M_J$0A@$0A@$00@23@@?$TensorEvaluator@$$CBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$01$0A@_J@3@$$CBV43@@Eigen@@$$CBV?$Tensor@M$01$0A@_J@4@@Eigen@@UThreadPoolDevice@2@@Eigen@@QEAA@AEBUThreadPoolDevice@2@HAEAV?$TensorContractionInputMapper@M_J$00U?$TensorEvaluator@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$01$0A@_J@3@$$CBV43@@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0A@$0A@@internal@2@AEAV?$TensorContractionInputMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$00$0A@@52@PEAM_J444444444444_N5@Z</DECORATED>
    <FUNCLINE>294</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;::Context&lt;Eigen::internal::gemm_pack_lhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,8,4,0,0,0&gt;,Eigen::internal::gemm_pack_rhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,1,0&gt;,4,0,0,0&gt;,Eigen::internal::gebp_kernel&lt;float,float,__int64,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt;,8,4,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,1,0&gt;,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt; &gt;::pad_</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContractionThreadPool.h</FILENAME>
      <LINE>294</LINE>
      <COLUMN>4</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;::Context&lt;Eigen::internal::gemm_pack_lhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,8,4,0,0,0&gt;,Eigen::internal::gemm_pack_rhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,4,0,0,0&gt;,Eigen::internal::gebp_kernel&lt;float,float,__int64,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt;,8,4,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt; &gt;::state_kernel_' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;::Context&lt;Eigen::internal::gemm_pack_lhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,8,4,0,0,0&gt;,Eigen::internal::gemm_pack_rhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,4,0,0,0&gt;,Eigen::internal::gebp_kernel&lt;float,float,__int64,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt;,8,4,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt; &gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$Context@U?$gemm_pack_lhs@M_JV?$TensorContractionSubMapper@M_J$00U?$TensorEvaluator@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$01$0A@_J@3@$$CBV43@@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0A@$0A@@internal@Eigen@@$07$03$0A@$0A@$0A@@internal@Eigen@@U?$gemm_pack_rhs@M_JV?$TensorContractionSubMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0A@$0A@@internal@Eigen@@$03$0A@$0A@$0A@@23@U?$gebp_kernel@MM_JV?$blas_data_mapper@M_J$0A@$0A@$00@internal@Eigen@@$07$03$0A@$0A@@23@V?$TensorContractionInputMapper@M_J$00U?$TensorEvaluator@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$01$0A@_J@3@$$CBV43@@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0A@$0A@@23@V?$TensorContractionInputMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0A@$0A@@23@V?$blas_data_mapper@M_J$0A@$0A@$00@23@@?$TensorEvaluator@$$CBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$01$0A@_J@3@$$CBV43@@Eigen@@$$CBV?$Tensor@M$01$0A@_J@4@@Eigen@@UThreadPoolDevice@2@@Eigen@@QEAA@AEBUThreadPoolDevice@2@HAEAV?$TensorContractionInputMapper@M_J$00U?$TensorEvaluator@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$01$0A@_J@3@$$CBV43@@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0A@$0A@@internal@2@AEAV?$TensorContractionInputMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0A@$0A@@52@PEAM_J444444444444_N5@Z</DECORATED>
    <FUNCLINE>294</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;::Context&lt;Eigen::internal::gemm_pack_lhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,8,4,0,0,0&gt;,Eigen::internal::gemm_pack_rhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,4,0,0,0&gt;,Eigen::internal::gebp_kernel&lt;float,float,__int64,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt;,8,4,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt; &gt;::state_kernel_</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContractionThreadPool.h</FILENAME>
      <LINE>294</LINE>
      <COLUMN>4</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;::Context&lt;Eigen::internal::gemm_pack_lhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,8,4,0,0,0&gt;,Eigen::internal::gemm_pack_rhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,4,0,0,0&gt;,Eigen::internal::gebp_kernel&lt;float,float,__int64,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt;,8,4,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt; &gt;::pad_' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;::Context&lt;Eigen::internal::gemm_pack_lhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,8,4,0,0,0&gt;,Eigen::internal::gemm_pack_rhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,4,0,0,0&gt;,Eigen::internal::gebp_kernel&lt;float,float,__int64,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt;,8,4,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt; &gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$Context@U?$gemm_pack_lhs@M_JV?$TensorContractionSubMapper@M_J$00U?$TensorEvaluator@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$01$0A@_J@3@$$CBV43@@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0A@$0A@@internal@Eigen@@$07$03$0A@$0A@$0A@@internal@Eigen@@U?$gemm_pack_rhs@M_JV?$TensorContractionSubMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0A@$0A@@internal@Eigen@@$03$0A@$0A@$0A@@23@U?$gebp_kernel@MM_JV?$blas_data_mapper@M_J$0A@$0A@$00@internal@Eigen@@$07$03$0A@$0A@@23@V?$TensorContractionInputMapper@M_J$00U?$TensorEvaluator@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$01$0A@_J@3@$$CBV43@@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0A@$0A@@23@V?$TensorContractionInputMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0A@$0A@@23@V?$blas_data_mapper@M_J$0A@$0A@$00@23@@?$TensorEvaluator@$$CBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$01$0A@_J@3@$$CBV43@@Eigen@@$$CBV?$Tensor@M$01$0A@_J@4@@Eigen@@UThreadPoolDevice@2@@Eigen@@QEAA@AEBUThreadPoolDevice@2@HAEAV?$TensorContractionInputMapper@M_J$00U?$TensorEvaluator@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$01$0A@_J@3@$$CBV43@@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0A@$0A@@internal@2@AEAV?$TensorContractionInputMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0A@$0A@@52@PEAM_J444444444444_N5@Z</DECORATED>
    <FUNCLINE>294</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;::Context&lt;Eigen::internal::gemm_pack_lhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,8,4,0,0,0&gt;,Eigen::internal::gemm_pack_rhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,4,0,0,0&gt;,Eigen::internal::gebp_kernel&lt;float,float,__int64,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt;,8,4,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt; &gt;::pad_</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContractionThreadPool.h</FILENAME>
      <LINE>294</LINE>
      <COLUMN>4</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;::Context&lt;Eigen::internal::gemm_pack_lhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,8,4,0,0,0&gt;,Eigen::internal::gemm_pack_rhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,1,0&gt;,4,0,0,0&gt;,Eigen::internal::gebp_kernel&lt;float,float,__int64,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt;,8,4,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,1,0&gt;,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt; &gt;::state_kernel_' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;::Context&lt;Eigen::internal::gemm_pack_lhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,8,4,0,0,0&gt;,Eigen::internal::gemm_pack_rhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,1,0&gt;,4,0,0,0&gt;,Eigen::internal::gebp_kernel&lt;float,float,__int64,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt;,8,4,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,1,0&gt;,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt; &gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$Context@U?$gemm_pack_lhs@M_JV?$TensorContractionSubMapper@M_J$00U?$TensorEvaluator@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$01$0A@_J@3@$$CBV43@@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0A@$0A@@internal@Eigen@@$07$03$0A@$0A@$0A@@internal@Eigen@@U?$gemm_pack_rhs@M_JV?$TensorContractionSubMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$00$0A@@internal@Eigen@@$03$0A@$0A@$0A@@23@U?$gebp_kernel@MM_JV?$blas_data_mapper@M_J$0A@$0A@$00@internal@Eigen@@$07$03$0A@$0A@@23@V?$TensorContractionInputMapper@M_J$00U?$TensorEvaluator@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$01$0A@_J@3@$$CBV43@@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0A@$0A@@23@V?$TensorContractionInputMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$00$0A@@23@V?$blas_data_mapper@M_J$0A@$0A@$00@23@@?$TensorEvaluator@$$CBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$01$0A@_J@3@$$CBV43@@Eigen@@$$CBV?$Tensor@M$01$0A@_J@4@@Eigen@@UThreadPoolDevice@2@@Eigen@@QEAA@AEBUThreadPoolDevice@2@HAEAV?$TensorContractionInputMapper@M_J$00U?$TensorEvaluator@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$01$0A@_J@3@$$CBV43@@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0A@$0A@@internal@2@AEAV?$TensorContractionInputMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$00$0A@@52@PEAM_J444444444444_N5@Z</DECORATED>
    <FUNCLINE>294</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;::Context&lt;Eigen::internal::gemm_pack_lhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,8,4,0,0,0&gt;,Eigen::internal::gemm_pack_rhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,1,0&gt;,4,0,0,0&gt;,Eigen::internal::gebp_kernel&lt;float,float,__int64,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt;,8,4,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,1,0&gt;,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt; &gt;::state_kernel_</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContractionThreadPool.h</FILENAME>
      <LINE>294</LINE>
      <COLUMN>4</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;::Context&lt;Eigen::internal::gemm_pack_lhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,8,4,0,0,0&gt;,Eigen::internal::gemm_pack_rhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,1,0&gt;,4,0,0,0&gt;,Eigen::internal::gebp_kernel&lt;float,float,__int64,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt;,8,4,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,1,0&gt;,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt; &gt;::pad_' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;::Context&lt;Eigen::internal::gemm_pack_lhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,8,4,0,0,0&gt;,Eigen::internal::gemm_pack_rhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,1,0&gt;,4,0,0,0&gt;,Eigen::internal::gebp_kernel&lt;float,float,__int64,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt;,8,4,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,1,0&gt;,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt; &gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$Context@U?$gemm_pack_lhs@M_JV?$TensorContractionSubMapper@M_J$00U?$TensorEvaluator@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$01$0A@_J@3@$$CBV43@@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0A@$0A@@internal@Eigen@@$07$03$0A@$0A@$0A@@internal@Eigen@@U?$gemm_pack_rhs@M_JV?$TensorContractionSubMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$00$0A@@internal@Eigen@@$03$0A@$0A@$0A@@23@U?$gebp_kernel@MM_JV?$blas_data_mapper@M_J$0A@$0A@$00@internal@Eigen@@$07$03$0A@$0A@@23@V?$TensorContractionInputMapper@M_J$00U?$TensorEvaluator@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$01$0A@_J@3@$$CBV43@@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0A@$0A@@23@V?$TensorContractionInputMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$00$0A@@23@V?$blas_data_mapper@M_J$0A@$0A@$00@23@@?$TensorEvaluator@$$CBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$01$0A@_J@3@$$CBV43@@Eigen@@$$CBV?$Tensor@M$01$0A@_J@4@@Eigen@@UThreadPoolDevice@2@@Eigen@@QEAA@AEBUThreadPoolDevice@2@HAEAV?$TensorContractionInputMapper@M_J$00U?$TensorEvaluator@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$01$0A@_J@3@$$CBV43@@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0A@$0A@@internal@2@AEAV?$TensorContractionInputMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$00$0A@@52@PEAM_J444444444444_N5@Z</DECORATED>
    <FUNCLINE>294</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;::Context&lt;Eigen::internal::gemm_pack_lhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,8,4,0,0,0&gt;,Eigen::internal::gemm_pack_rhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,1,0&gt;,4,0,0,0&gt;,Eigen::internal::gebp_kernel&lt;float,float,__int64,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt;,8,4,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,1,0&gt;,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt; &gt;::pad_</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContractionThreadPool.h</FILENAME>
      <LINE>294</LINE>
      <COLUMN>4</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;::Context&lt;Eigen::internal::gemm_pack_lhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,8,4,0,0,0&gt;,Eigen::internal::gemm_pack_rhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,4,0,0,0&gt;,Eigen::internal::gebp_kernel&lt;float,float,__int64,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt;,8,4,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt; &gt;::state_kernel_' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;::Context&lt;Eigen::internal::gemm_pack_lhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,8,4,0,0,0&gt;,Eigen::internal::gemm_pack_rhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,4,0,0,0&gt;,Eigen::internal::gebp_kernel&lt;float,float,__int64,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt;,8,4,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt; &gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$Context@U?$gemm_pack_lhs@M_JV?$TensorContractionSubMapper@M_J$00U?$TensorEvaluator@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$01$0A@_J@3@$$CBV43@@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0A@$0A@@internal@Eigen@@$07$03$0A@$0A@$0A@@internal@Eigen@@U?$gemm_pack_rhs@M_JV?$TensorContractionSubMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0A@$0A@@internal@Eigen@@$03$0A@$0A@$0A@@23@U?$gebp_kernel@MM_JV?$blas_data_mapper@M_J$0A@$0A@$00@internal@Eigen@@$07$03$0A@$0A@@23@V?$TensorContractionInputMapper@M_J$00U?$TensorEvaluator@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$01$0A@_J@3@$$CBV43@@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0A@$0A@@23@V?$TensorContractionInputMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0A@$0A@@23@V?$blas_data_mapper@M_J$0A@$0A@$00@23@@?$TensorEvaluator@$$CBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$01$0A@_J@3@$$CBV43@@Eigen@@$$CBV?$Tensor@M$01$0A@_J@4@@Eigen@@UThreadPoolDevice@2@@Eigen@@QEAA@AEBUThreadPoolDevice@2@HAEAV?$TensorContractionInputMapper@M_J$00U?$TensorEvaluator@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$01$0A@_J@3@$$CBV43@@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0A@$0A@@internal@2@AEAV?$TensorContractionInputMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0A@$0A@@52@PEAM_J444444444444_N5@Z</DECORATED>
    <FUNCLINE>294</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;::Context&lt;Eigen::internal::gemm_pack_lhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,8,4,0,0,0&gt;,Eigen::internal::gemm_pack_rhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,4,0,0,0&gt;,Eigen::internal::gebp_kernel&lt;float,float,__int64,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt;,8,4,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt; &gt;::state_kernel_</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContractionThreadPool.h</FILENAME>
      <LINE>294</LINE>
      <COLUMN>4</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;::Context&lt;Eigen::internal::gemm_pack_lhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,8,4,0,0,0&gt;,Eigen::internal::gemm_pack_rhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,4,0,0,0&gt;,Eigen::internal::gebp_kernel&lt;float,float,__int64,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt;,8,4,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt; &gt;::pad_' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;::Context&lt;Eigen::internal::gemm_pack_lhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,8,4,0,0,0&gt;,Eigen::internal::gemm_pack_rhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,4,0,0,0&gt;,Eigen::internal::gebp_kernel&lt;float,float,__int64,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt;,8,4,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt; &gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$Context@U?$gemm_pack_lhs@M_JV?$TensorContractionSubMapper@M_J$00U?$TensorEvaluator@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$01$0A@_J@3@$$CBV43@@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0A@$0A@@internal@Eigen@@$07$03$0A@$0A@$0A@@internal@Eigen@@U?$gemm_pack_rhs@M_JV?$TensorContractionSubMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0A@$0A@@internal@Eigen@@$03$0A@$0A@$0A@@23@U?$gebp_kernel@MM_JV?$blas_data_mapper@M_J$0A@$0A@$00@internal@Eigen@@$07$03$0A@$0A@@23@V?$TensorContractionInputMapper@M_J$00U?$TensorEvaluator@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$01$0A@_J@3@$$CBV43@@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0A@$0A@@23@V?$TensorContractionInputMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0A@$0A@@23@V?$blas_data_mapper@M_J$0A@$0A@$00@23@@?$TensorEvaluator@$$CBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$01$0A@_J@3@$$CBV43@@Eigen@@$$CBV?$Tensor@M$01$0A@_J@4@@Eigen@@UThreadPoolDevice@2@@Eigen@@QEAA@AEBUThreadPoolDevice@2@HAEAV?$TensorContractionInputMapper@M_J$00U?$TensorEvaluator@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$01$0A@_J@3@$$CBV43@@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0A@$0A@@internal@2@AEAV?$TensorContractionInputMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0A@$0A@@52@PEAM_J444444444444_N5@Z</DECORATED>
    <FUNCLINE>294</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;::Context&lt;Eigen::internal::gemm_pack_lhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,8,4,0,0,0&gt;,Eigen::internal::gemm_pack_rhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,4,0,0,0&gt;,Eigen::internal::gebp_kernel&lt;float,float,__int64,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt;,8,4,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt; &gt;::pad_</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContractionThreadPool.h</FILENAME>
      <LINE>294</LINE>
      <COLUMN>4</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;::Context&lt;Eigen::internal::gemm_pack_lhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,8,4,0,0,0&gt;,Eigen::internal::gemm_pack_rhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,1,0&gt;,4,0,0,0&gt;,Eigen::internal::gebp_kernel&lt;float,float,__int64,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt;,8,4,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,1,0&gt;,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt; &gt;::state_kernel_' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;::Context&lt;Eigen::internal::gemm_pack_lhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,8,4,0,0,0&gt;,Eigen::internal::gemm_pack_rhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,1,0&gt;,4,0,0,0&gt;,Eigen::internal::gebp_kernel&lt;float,float,__int64,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt;,8,4,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,1,0&gt;,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt; &gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$Context@U?$gemm_pack_lhs@M_JV?$TensorContractionSubMapper@M_J$00U?$TensorEvaluator@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$01$0A@_J@3@$$CBV43@@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0A@$0A@@internal@Eigen@@$07$03$0A@$0A@$0A@@internal@Eigen@@U?$gemm_pack_rhs@M_JV?$TensorContractionSubMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$00$0A@@internal@Eigen@@$03$0A@$0A@$0A@@23@U?$gebp_kernel@MM_JV?$blas_data_mapper@M_J$0A@$0A@$00@internal@Eigen@@$07$03$0A@$0A@@23@V?$TensorContractionInputMapper@M_J$00U?$TensorEvaluator@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$01$0A@_J@3@$$CBV43@@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0A@$0A@@23@V?$TensorContractionInputMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$00$0A@@23@V?$blas_data_mapper@M_J$0A@$0A@$00@23@@?$TensorEvaluator@$$CBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$01$0A@_J@3@$$CBV43@@Eigen@@$$CBV?$Tensor@M$01$0A@_J@4@@Eigen@@UThreadPoolDevice@2@@Eigen@@QEAA@AEBUThreadPoolDevice@2@HAEAV?$TensorContractionInputMapper@M_J$00U?$TensorEvaluator@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$01$0A@_J@3@$$CBV43@@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0A@$0A@@internal@2@AEAV?$TensorContractionInputMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$00$0A@@52@PEAM_J444444444444_N5@Z</DECORATED>
    <FUNCLINE>294</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;::Context&lt;Eigen::internal::gemm_pack_lhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,8,4,0,0,0&gt;,Eigen::internal::gemm_pack_rhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,1,0&gt;,4,0,0,0&gt;,Eigen::internal::gebp_kernel&lt;float,float,__int64,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt;,8,4,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,1,0&gt;,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt; &gt;::state_kernel_</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContractionThreadPool.h</FILENAME>
      <LINE>294</LINE>
      <COLUMN>4</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;::Context&lt;Eigen::internal::gemm_pack_lhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,8,4,0,0,0&gt;,Eigen::internal::gemm_pack_rhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,1,0&gt;,4,0,0,0&gt;,Eigen::internal::gebp_kernel&lt;float,float,__int64,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt;,8,4,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,1,0&gt;,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt; &gt;::pad_' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;::Context&lt;Eigen::internal::gemm_pack_lhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,8,4,0,0,0&gt;,Eigen::internal::gemm_pack_rhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,1,0&gt;,4,0,0,0&gt;,Eigen::internal::gebp_kernel&lt;float,float,__int64,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt;,8,4,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,1,0&gt;,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt; &gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$Context@U?$gemm_pack_lhs@M_JV?$TensorContractionSubMapper@M_J$00U?$TensorEvaluator@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$01$0A@_J@3@$$CBV43@@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0A@$0A@@internal@Eigen@@$07$03$0A@$0A@$0A@@internal@Eigen@@U?$gemm_pack_rhs@M_JV?$TensorContractionSubMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$00$0A@@internal@Eigen@@$03$0A@$0A@$0A@@23@U?$gebp_kernel@MM_JV?$blas_data_mapper@M_J$0A@$0A@$00@internal@Eigen@@$07$03$0A@$0A@@23@V?$TensorContractionInputMapper@M_J$00U?$TensorEvaluator@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$01$0A@_J@3@$$CBV43@@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0A@$0A@@23@V?$TensorContractionInputMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$00$0A@@23@V?$blas_data_mapper@M_J$0A@$0A@$00@23@@?$TensorEvaluator@$$CBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$01$0A@_J@3@$$CBV43@@Eigen@@$$CBV?$Tensor@M$01$0A@_J@4@@Eigen@@UThreadPoolDevice@2@@Eigen@@QEAA@AEBUThreadPoolDevice@2@HAEAV?$TensorContractionInputMapper@M_J$00U?$TensorEvaluator@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$01$0A@_J@3@$$CBV43@@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0A@$0A@@internal@2@AEAV?$TensorContractionInputMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$00$0A@@52@PEAM_J444444444444_N5@Z</DECORATED>
    <FUNCLINE>294</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;::Context&lt;Eigen::internal::gemm_pack_lhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,8,4,0,0,0&gt;,Eigen::internal::gemm_pack_rhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,1,0&gt;,4,0,0,0&gt;,Eigen::internal::gebp_kernel&lt;float,float,__int64,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt;,8,4,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,1,0&gt;,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt; &gt;::pad_</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContractionThreadPool.h</FILENAME>
      <LINE>294</LINE>
      <COLUMN>4</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,3,0,__int64&gt; const &gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;::Context&lt;Eigen::internal::gemm_pack_lhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,3,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,8,4,0,0,0&gt;,Eigen::internal::gemm_pack_rhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,4,0,0,0&gt;,Eigen::internal::gebp_kernel&lt;float,float,__int64,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt;,8,4,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,3,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt; &gt;::state_kernel_' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,3,0,__int64&gt; const &gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;::Context&lt;Eigen::internal::gemm_pack_lhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,3,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,8,4,0,0,0&gt;,Eigen::internal::gemm_pack_rhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,4,0,0,0&gt;,Eigen::internal::gebp_kernel&lt;float,float,__int64,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt;,8,4,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,3,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt; &gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$Context@U?$gemm_pack_lhs@M_JV?$TensorContractionSubMapper@M_J$00U?$TensorEvaluator@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$01$0A@_J@3@$$CBV?$Tensor@M$02$0A@_J@3@@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0A@$0A@@internal@Eigen@@$07$03$0A@$0A@$0A@@internal@Eigen@@U?$gemm_pack_rhs@M_JV?$TensorContractionSubMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0A@$0A@@internal@Eigen@@$03$0A@$0A@$0A@@23@U?$gebp_kernel@MM_JV?$blas_data_mapper@M_J$0A@$0A@$00@internal@Eigen@@$07$03$0A@$0A@@23@V?$TensorContractionInputMapper@M_J$00U?$TensorEvaluator@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$01$0A@_J@3@$$CBV?$Tensor@M$02$0A@_J@3@@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0A@$0A@@23@V?$TensorContractionInputMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0A@$0A@@23@V?$blas_data_mapper@M_J$0A@$0A@$00@23@@?$TensorEvaluator@$$CBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$01$0A@_J@3@$$CBV?$Tensor@M$02$0A@_J@3@@Eigen@@$$CBV?$Tensor@M$01$0A@_J@4@@Eigen@@UThreadPoolDevice@2@@Eigen@@QEAA@AEBUThreadPoolDevice@2@HAEAV?$TensorContractionInputMapper@M_J$00U?$TensorEvaluator@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$01$0A@_J@3@$$CBV?$Tensor@M$02$0A@_J@3@@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0A@$0A@@internal@2@AEAV?$TensorContractionInputMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0A@$0A@@52@PEAM_J444444444444_N5@Z</DECORATED>
    <FUNCLINE>294</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,3,0,__int64&gt; const &gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;::Context&lt;Eigen::internal::gemm_pack_lhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,3,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,8,4,0,0,0&gt;,Eigen::internal::gemm_pack_rhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,4,0,0,0&gt;,Eigen::internal::gebp_kernel&lt;float,float,__int64,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt;,8,4,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,3,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt; &gt;::state_kernel_</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContractionThreadPool.h</FILENAME>
      <LINE>294</LINE>
      <COLUMN>4</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,3,0,__int64&gt; const &gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;::Context&lt;Eigen::internal::gemm_pack_lhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,3,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,8,4,0,0,0&gt;,Eigen::internal::gemm_pack_rhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,4,0,0,0&gt;,Eigen::internal::gebp_kernel&lt;float,float,__int64,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt;,8,4,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,3,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt; &gt;::pad_' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,3,0,__int64&gt; const &gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;::Context&lt;Eigen::internal::gemm_pack_lhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,3,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,8,4,0,0,0&gt;,Eigen::internal::gemm_pack_rhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,4,0,0,0&gt;,Eigen::internal::gebp_kernel&lt;float,float,__int64,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt;,8,4,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,3,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt; &gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$Context@U?$gemm_pack_lhs@M_JV?$TensorContractionSubMapper@M_J$00U?$TensorEvaluator@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$01$0A@_J@3@$$CBV?$Tensor@M$02$0A@_J@3@@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0A@$0A@@internal@Eigen@@$07$03$0A@$0A@$0A@@internal@Eigen@@U?$gemm_pack_rhs@M_JV?$TensorContractionSubMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0A@$0A@@internal@Eigen@@$03$0A@$0A@$0A@@23@U?$gebp_kernel@MM_JV?$blas_data_mapper@M_J$0A@$0A@$00@internal@Eigen@@$07$03$0A@$0A@@23@V?$TensorContractionInputMapper@M_J$00U?$TensorEvaluator@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$01$0A@_J@3@$$CBV?$Tensor@M$02$0A@_J@3@@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0A@$0A@@23@V?$TensorContractionInputMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0A@$0A@@23@V?$blas_data_mapper@M_J$0A@$0A@$00@23@@?$TensorEvaluator@$$CBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$01$0A@_J@3@$$CBV?$Tensor@M$02$0A@_J@3@@Eigen@@$$CBV?$Tensor@M$01$0A@_J@4@@Eigen@@UThreadPoolDevice@2@@Eigen@@QEAA@AEBUThreadPoolDevice@2@HAEAV?$TensorContractionInputMapper@M_J$00U?$TensorEvaluator@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$01$0A@_J@3@$$CBV?$Tensor@M$02$0A@_J@3@@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0A@$0A@@internal@2@AEAV?$TensorContractionInputMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0A@$0A@@52@PEAM_J444444444444_N5@Z</DECORATED>
    <FUNCLINE>294</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,3,0,__int64&gt; const &gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;::Context&lt;Eigen::internal::gemm_pack_lhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,3,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,8,4,0,0,0&gt;,Eigen::internal::gemm_pack_rhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,4,0,0,0&gt;,Eigen::internal::gebp_kernel&lt;float,float,__int64,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt;,8,4,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,3,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt; &gt;::pad_</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContractionThreadPool.h</FILENAME>
      <LINE>294</LINE>
      <COLUMN>4</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,3,0,__int64&gt; const &gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;::Context&lt;Eigen::internal::gemm_pack_lhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,3,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,8,4,0,0,0&gt;,Eigen::internal::gemm_pack_rhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,1,0&gt;,4,0,0,0&gt;,Eigen::internal::gebp_kernel&lt;float,float,__int64,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt;,8,4,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,3,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,1,0&gt;,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt; &gt;::state_kernel_' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,3,0,__int64&gt; const &gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;::Context&lt;Eigen::internal::gemm_pack_lhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,3,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,8,4,0,0,0&gt;,Eigen::internal::gemm_pack_rhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,1,0&gt;,4,0,0,0&gt;,Eigen::internal::gebp_kernel&lt;float,float,__int64,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt;,8,4,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,3,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,1,0&gt;,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt; &gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$Context@U?$gemm_pack_lhs@M_JV?$TensorContractionSubMapper@M_J$00U?$TensorEvaluator@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$01$0A@_J@3@$$CBV?$Tensor@M$02$0A@_J@3@@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0A@$0A@@internal@Eigen@@$07$03$0A@$0A@$0A@@internal@Eigen@@U?$gemm_pack_rhs@M_JV?$TensorContractionSubMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$00$0A@@internal@Eigen@@$03$0A@$0A@$0A@@23@U?$gebp_kernel@MM_JV?$blas_data_mapper@M_J$0A@$0A@$00@internal@Eigen@@$07$03$0A@$0A@@23@V?$TensorContractionInputMapper@M_J$00U?$TensorEvaluator@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$01$0A@_J@3@$$CBV?$Tensor@M$02$0A@_J@3@@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0A@$0A@@23@V?$TensorContractionInputMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$00$0A@@23@V?$blas_data_mapper@M_J$0A@$0A@$00@23@@?$TensorEvaluator@$$CBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$01$0A@_J@3@$$CBV?$Tensor@M$02$0A@_J@3@@Eigen@@$$CBV?$Tensor@M$01$0A@_J@4@@Eigen@@UThreadPoolDevice@2@@Eigen@@QEAA@AEBUThreadPoolDevice@2@HAEAV?$TensorContractionInputMapper@M_J$00U?$TensorEvaluator@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$01$0A@_J@3@$$CBV?$Tensor@M$02$0A@_J@3@@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0A@$0A@@internal@2@AEAV?$TensorContractionInputMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$00$0A@@52@PEAM_J444444444444_N5@Z</DECORATED>
    <FUNCLINE>294</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,3,0,__int64&gt; const &gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;::Context&lt;Eigen::internal::gemm_pack_lhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,3,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,8,4,0,0,0&gt;,Eigen::internal::gemm_pack_rhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,1,0&gt;,4,0,0,0&gt;,Eigen::internal::gebp_kernel&lt;float,float,__int64,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt;,8,4,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,3,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,1,0&gt;,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt; &gt;::state_kernel_</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContractionThreadPool.h</FILENAME>
      <LINE>294</LINE>
      <COLUMN>4</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,3,0,__int64&gt; const &gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;::Context&lt;Eigen::internal::gemm_pack_lhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,3,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,8,4,0,0,0&gt;,Eigen::internal::gemm_pack_rhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,1,0&gt;,4,0,0,0&gt;,Eigen::internal::gebp_kernel&lt;float,float,__int64,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt;,8,4,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,3,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,1,0&gt;,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt; &gt;::pad_' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,3,0,__int64&gt; const &gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;::Context&lt;Eigen::internal::gemm_pack_lhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,3,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,8,4,0,0,0&gt;,Eigen::internal::gemm_pack_rhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,1,0&gt;,4,0,0,0&gt;,Eigen::internal::gebp_kernel&lt;float,float,__int64,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt;,8,4,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,3,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,1,0&gt;,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt; &gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$Context@U?$gemm_pack_lhs@M_JV?$TensorContractionSubMapper@M_J$00U?$TensorEvaluator@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$01$0A@_J@3@$$CBV?$Tensor@M$02$0A@_J@3@@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0A@$0A@@internal@Eigen@@$07$03$0A@$0A@$0A@@internal@Eigen@@U?$gemm_pack_rhs@M_JV?$TensorContractionSubMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$00$0A@@internal@Eigen@@$03$0A@$0A@$0A@@23@U?$gebp_kernel@MM_JV?$blas_data_mapper@M_J$0A@$0A@$00@internal@Eigen@@$07$03$0A@$0A@@23@V?$TensorContractionInputMapper@M_J$00U?$TensorEvaluator@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$01$0A@_J@3@$$CBV?$Tensor@M$02$0A@_J@3@@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0A@$0A@@23@V?$TensorContractionInputMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$00$0A@@23@V?$blas_data_mapper@M_J$0A@$0A@$00@23@@?$TensorEvaluator@$$CBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$01$0A@_J@3@$$CBV?$Tensor@M$02$0A@_J@3@@Eigen@@$$CBV?$Tensor@M$01$0A@_J@4@@Eigen@@UThreadPoolDevice@2@@Eigen@@QEAA@AEBUThreadPoolDevice@2@HAEAV?$TensorContractionInputMapper@M_J$00U?$TensorEvaluator@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$01$0A@_J@3@$$CBV?$Tensor@M$02$0A@_J@3@@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0A@$0A@@internal@2@AEAV?$TensorContractionInputMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$00$0A@@52@PEAM_J444444444444_N5@Z</DECORATED>
    <FUNCLINE>294</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,3,0,__int64&gt; const &gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;::Context&lt;Eigen::internal::gemm_pack_lhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,3,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,8,4,0,0,0&gt;,Eigen::internal::gemm_pack_rhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,1,0&gt;,4,0,0,0&gt;,Eigen::internal::gebp_kernel&lt;float,float,__int64,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt;,8,4,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,3,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,1,0&gt;,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt; &gt;::pad_</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContractionThreadPool.h</FILENAME>
      <LINE>294</LINE>
      <COLUMN>4</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,3,0,__int64&gt; const &gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;::Context&lt;Eigen::internal::gemm_pack_lhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,3,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,8,4,0,0,0&gt;,Eigen::internal::gemm_pack_rhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,4,0,0,0&gt;,Eigen::internal::gebp_kernel&lt;float,float,__int64,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt;,8,4,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,3,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt; &gt;::state_kernel_' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,3,0,__int64&gt; const &gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;::Context&lt;Eigen::internal::gemm_pack_lhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,3,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,8,4,0,0,0&gt;,Eigen::internal::gemm_pack_rhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,4,0,0,0&gt;,Eigen::internal::gebp_kernel&lt;float,float,__int64,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt;,8,4,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,3,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt; &gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$Context@U?$gemm_pack_lhs@M_JV?$TensorContractionSubMapper@M_J$00U?$TensorEvaluator@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$01$0A@_J@3@$$CBV?$Tensor@M$02$0A@_J@3@@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0A@$0A@@internal@Eigen@@$07$03$0A@$0A@$0A@@internal@Eigen@@U?$gemm_pack_rhs@M_JV?$TensorContractionSubMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0A@$0A@@internal@Eigen@@$03$0A@$0A@$0A@@23@U?$gebp_kernel@MM_JV?$blas_data_mapper@M_J$0A@$0A@$00@internal@Eigen@@$07$03$0A@$0A@@23@V?$TensorContractionInputMapper@M_J$00U?$TensorEvaluator@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$01$0A@_J@3@$$CBV?$Tensor@M$02$0A@_J@3@@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0A@$0A@@23@V?$TensorContractionInputMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0A@$0A@@23@V?$blas_data_mapper@M_J$0A@$0A@$00@23@@?$TensorEvaluator@$$CBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$01$0A@_J@3@$$CBV?$Tensor@M$02$0A@_J@3@@Eigen@@$$CBV?$Tensor@M$01$0A@_J@4@@Eigen@@UThreadPoolDevice@2@@Eigen@@QEAA@AEBUThreadPoolDevice@2@HAEAV?$TensorContractionInputMapper@M_J$00U?$TensorEvaluator@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$01$0A@_J@3@$$CBV?$Tensor@M$02$0A@_J@3@@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0A@$0A@@internal@2@AEAV?$TensorContractionInputMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0A@$0A@@52@PEAM_J444444444444_N5@Z</DECORATED>
    <FUNCLINE>294</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,3,0,__int64&gt; const &gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;::Context&lt;Eigen::internal::gemm_pack_lhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,3,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,8,4,0,0,0&gt;,Eigen::internal::gemm_pack_rhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,4,0,0,0&gt;,Eigen::internal::gebp_kernel&lt;float,float,__int64,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt;,8,4,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,3,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt; &gt;::state_kernel_</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContractionThreadPool.h</FILENAME>
      <LINE>294</LINE>
      <COLUMN>4</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,3,0,__int64&gt; const &gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;::Context&lt;Eigen::internal::gemm_pack_lhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,3,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,8,4,0,0,0&gt;,Eigen::internal::gemm_pack_rhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,4,0,0,0&gt;,Eigen::internal::gebp_kernel&lt;float,float,__int64,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt;,8,4,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,3,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt; &gt;::pad_' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,3,0,__int64&gt; const &gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;::Context&lt;Eigen::internal::gemm_pack_lhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,3,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,8,4,0,0,0&gt;,Eigen::internal::gemm_pack_rhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,4,0,0,0&gt;,Eigen::internal::gebp_kernel&lt;float,float,__int64,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt;,8,4,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,3,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt; &gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$Context@U?$gemm_pack_lhs@M_JV?$TensorContractionSubMapper@M_J$00U?$TensorEvaluator@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$01$0A@_J@3@$$CBV?$Tensor@M$02$0A@_J@3@@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0A@$0A@@internal@Eigen@@$07$03$0A@$0A@$0A@@internal@Eigen@@U?$gemm_pack_rhs@M_JV?$TensorContractionSubMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0A@$0A@@internal@Eigen@@$03$0A@$0A@$0A@@23@U?$gebp_kernel@MM_JV?$blas_data_mapper@M_J$0A@$0A@$00@internal@Eigen@@$07$03$0A@$0A@@23@V?$TensorContractionInputMapper@M_J$00U?$TensorEvaluator@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$01$0A@_J@3@$$CBV?$Tensor@M$02$0A@_J@3@@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0A@$0A@@23@V?$TensorContractionInputMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0A@$0A@@23@V?$blas_data_mapper@M_J$0A@$0A@$00@23@@?$TensorEvaluator@$$CBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$01$0A@_J@3@$$CBV?$Tensor@M$02$0A@_J@3@@Eigen@@$$CBV?$Tensor@M$01$0A@_J@4@@Eigen@@UThreadPoolDevice@2@@Eigen@@QEAA@AEBUThreadPoolDevice@2@HAEAV?$TensorContractionInputMapper@M_J$00U?$TensorEvaluator@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$01$0A@_J@3@$$CBV?$Tensor@M$02$0A@_J@3@@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0A@$0A@@internal@2@AEAV?$TensorContractionInputMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0A@$0A@@52@PEAM_J444444444444_N5@Z</DECORATED>
    <FUNCLINE>294</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,3,0,__int64&gt; const &gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;::Context&lt;Eigen::internal::gemm_pack_lhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,3,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,8,4,0,0,0&gt;,Eigen::internal::gemm_pack_rhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,4,0,0,0&gt;,Eigen::internal::gebp_kernel&lt;float,float,__int64,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt;,8,4,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,3,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt; &gt;::pad_</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContractionThreadPool.h</FILENAME>
      <LINE>294</LINE>
      <COLUMN>4</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,3,0,__int64&gt; const &gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;::Context&lt;Eigen::internal::gemm_pack_lhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,3,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,8,4,0,0,0&gt;,Eigen::internal::gemm_pack_rhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,1,0&gt;,4,0,0,0&gt;,Eigen::internal::gebp_kernel&lt;float,float,__int64,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt;,8,4,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,3,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,1,0&gt;,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt; &gt;::state_kernel_' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,3,0,__int64&gt; const &gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;::Context&lt;Eigen::internal::gemm_pack_lhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,3,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,8,4,0,0,0&gt;,Eigen::internal::gemm_pack_rhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,1,0&gt;,4,0,0,0&gt;,Eigen::internal::gebp_kernel&lt;float,float,__int64,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt;,8,4,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,3,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,1,0&gt;,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt; &gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$Context@U?$gemm_pack_lhs@M_JV?$TensorContractionSubMapper@M_J$00U?$TensorEvaluator@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$01$0A@_J@3@$$CBV?$Tensor@M$02$0A@_J@3@@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0A@$0A@@internal@Eigen@@$07$03$0A@$0A@$0A@@internal@Eigen@@U?$gemm_pack_rhs@M_JV?$TensorContractionSubMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$00$0A@@internal@Eigen@@$03$0A@$0A@$0A@@23@U?$gebp_kernel@MM_JV?$blas_data_mapper@M_J$0A@$0A@$00@internal@Eigen@@$07$03$0A@$0A@@23@V?$TensorContractionInputMapper@M_J$00U?$TensorEvaluator@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$01$0A@_J@3@$$CBV?$Tensor@M$02$0A@_J@3@@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0A@$0A@@23@V?$TensorContractionInputMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$00$0A@@23@V?$blas_data_mapper@M_J$0A@$0A@$00@23@@?$TensorEvaluator@$$CBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$01$0A@_J@3@$$CBV?$Tensor@M$02$0A@_J@3@@Eigen@@$$CBV?$Tensor@M$01$0A@_J@4@@Eigen@@UThreadPoolDevice@2@@Eigen@@QEAA@AEBUThreadPoolDevice@2@HAEAV?$TensorContractionInputMapper@M_J$00U?$TensorEvaluator@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$01$0A@_J@3@$$CBV?$Tensor@M$02$0A@_J@3@@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0A@$0A@@internal@2@AEAV?$TensorContractionInputMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$00$0A@@52@PEAM_J444444444444_N5@Z</DECORATED>
    <FUNCLINE>294</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,3,0,__int64&gt; const &gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;::Context&lt;Eigen::internal::gemm_pack_lhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,3,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,8,4,0,0,0&gt;,Eigen::internal::gemm_pack_rhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,1,0&gt;,4,0,0,0&gt;,Eigen::internal::gebp_kernel&lt;float,float,__int64,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt;,8,4,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,3,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,1,0&gt;,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt; &gt;::state_kernel_</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContractionThreadPool.h</FILENAME>
      <LINE>294</LINE>
      <COLUMN>4</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,3,0,__int64&gt; const &gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;::Context&lt;Eigen::internal::gemm_pack_lhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,3,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,8,4,0,0,0&gt;,Eigen::internal::gemm_pack_rhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,1,0&gt;,4,0,0,0&gt;,Eigen::internal::gebp_kernel&lt;float,float,__int64,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt;,8,4,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,3,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,1,0&gt;,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt; &gt;::pad_' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,3,0,__int64&gt; const &gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;::Context&lt;Eigen::internal::gemm_pack_lhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,3,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,8,4,0,0,0&gt;,Eigen::internal::gemm_pack_rhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,1,0&gt;,4,0,0,0&gt;,Eigen::internal::gebp_kernel&lt;float,float,__int64,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt;,8,4,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,3,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,1,0&gt;,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt; &gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$Context@U?$gemm_pack_lhs@M_JV?$TensorContractionSubMapper@M_J$00U?$TensorEvaluator@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$01$0A@_J@3@$$CBV?$Tensor@M$02$0A@_J@3@@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0A@$0A@@internal@Eigen@@$07$03$0A@$0A@$0A@@internal@Eigen@@U?$gemm_pack_rhs@M_JV?$TensorContractionSubMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$00$0A@@internal@Eigen@@$03$0A@$0A@$0A@@23@U?$gebp_kernel@MM_JV?$blas_data_mapper@M_J$0A@$0A@$00@internal@Eigen@@$07$03$0A@$0A@@23@V?$TensorContractionInputMapper@M_J$00U?$TensorEvaluator@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$01$0A@_J@3@$$CBV?$Tensor@M$02$0A@_J@3@@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0A@$0A@@23@V?$TensorContractionInputMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$00$0A@@23@V?$blas_data_mapper@M_J$0A@$0A@$00@23@@?$TensorEvaluator@$$CBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$01$0A@_J@3@$$CBV?$Tensor@M$02$0A@_J@3@@Eigen@@$$CBV?$Tensor@M$01$0A@_J@4@@Eigen@@UThreadPoolDevice@2@@Eigen@@QEAA@AEBUThreadPoolDevice@2@HAEAV?$TensorContractionInputMapper@M_J$00U?$TensorEvaluator@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$01$0A@_J@3@$$CBV?$Tensor@M$02$0A@_J@3@@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0A@$0A@@internal@2@AEAV?$TensorContractionInputMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$00$0A@@52@PEAM_J444444444444_N5@Z</DECORATED>
    <FUNCLINE>294</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,3,0,__int64&gt; const &gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;::Context&lt;Eigen::internal::gemm_pack_lhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,3,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,8,4,0,0,0&gt;,Eigen::internal::gemm_pack_rhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,1,0&gt;,4,0,0,0&gt;,Eigen::internal::gebp_kernel&lt;float,float,__int64,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt;,8,4,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,3,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,1,0&gt;,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt; &gt;::pad_</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContractionThreadPool.h</FILENAME>
      <LINE>294</LINE>
      <COLUMN>4</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,3,0,__int64&gt; const &gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;::Context&lt;Eigen::internal::gemm_pack_lhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,3,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,8,4,0,0,0&gt;,Eigen::internal::gemm_pack_rhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,4,0,0,0&gt;,Eigen::internal::gebp_kernel&lt;float,float,__int64,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt;,8,4,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,3,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt; &gt;::state_kernel_' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,3,0,__int64&gt; const &gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;::Context&lt;Eigen::internal::gemm_pack_lhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,3,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,8,4,0,0,0&gt;,Eigen::internal::gemm_pack_rhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,4,0,0,0&gt;,Eigen::internal::gebp_kernel&lt;float,float,__int64,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt;,8,4,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,3,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt; &gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$Context@U?$gemm_pack_lhs@M_JV?$TensorContractionSubMapper@M_J$00U?$TensorEvaluator@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$01$0A@_J@3@$$CBV?$Tensor@M$02$0A@_J@3@@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0A@$0A@@internal@Eigen@@$07$03$0A@$0A@$0A@@internal@Eigen@@U?$gemm_pack_rhs@M_JV?$TensorContractionSubMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0A@$0A@@internal@Eigen@@$03$0A@$0A@$0A@@23@U?$gebp_kernel@MM_JV?$blas_data_mapper@M_J$0A@$0A@$00@internal@Eigen@@$07$03$0A@$0A@@23@V?$TensorContractionInputMapper@M_J$00U?$TensorEvaluator@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$01$0A@_J@3@$$CBV?$Tensor@M$02$0A@_J@3@@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0A@$0A@@23@V?$TensorContractionInputMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0A@$0A@@23@V?$blas_data_mapper@M_J$0A@$0A@$00@23@@?$TensorEvaluator@$$CBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$01$0A@_J@3@$$CBV?$Tensor@M$02$0A@_J@3@@Eigen@@$$CBV?$Tensor@M$01$0A@_J@4@@Eigen@@UThreadPoolDevice@2@@Eigen@@QEAA@AEBUThreadPoolDevice@2@HAEAV?$TensorContractionInputMapper@M_J$00U?$TensorEvaluator@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$01$0A@_J@3@$$CBV?$Tensor@M$02$0A@_J@3@@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0A@$0A@@internal@2@AEAV?$TensorContractionInputMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0A@$0A@@52@PEAM_J444444444444_N5@Z</DECORATED>
    <FUNCLINE>294</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,3,0,__int64&gt; const &gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;::Context&lt;Eigen::internal::gemm_pack_lhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,3,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,8,4,0,0,0&gt;,Eigen::internal::gemm_pack_rhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,4,0,0,0&gt;,Eigen::internal::gebp_kernel&lt;float,float,__int64,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt;,8,4,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,3,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt; &gt;::state_kernel_</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContractionThreadPool.h</FILENAME>
      <LINE>294</LINE>
      <COLUMN>4</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,3,0,__int64&gt; const &gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;::Context&lt;Eigen::internal::gemm_pack_lhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,3,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,8,4,0,0,0&gt;,Eigen::internal::gemm_pack_rhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,4,0,0,0&gt;,Eigen::internal::gebp_kernel&lt;float,float,__int64,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt;,8,4,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,3,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt; &gt;::pad_' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,3,0,__int64&gt; const &gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;::Context&lt;Eigen::internal::gemm_pack_lhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,3,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,8,4,0,0,0&gt;,Eigen::internal::gemm_pack_rhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,4,0,0,0&gt;,Eigen::internal::gebp_kernel&lt;float,float,__int64,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt;,8,4,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,3,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt; &gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$Context@U?$gemm_pack_lhs@M_JV?$TensorContractionSubMapper@M_J$00U?$TensorEvaluator@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$01$0A@_J@3@$$CBV?$Tensor@M$02$0A@_J@3@@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0A@$0A@@internal@Eigen@@$07$03$0A@$0A@$0A@@internal@Eigen@@U?$gemm_pack_rhs@M_JV?$TensorContractionSubMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0A@$0A@@internal@Eigen@@$03$0A@$0A@$0A@@23@U?$gebp_kernel@MM_JV?$blas_data_mapper@M_J$0A@$0A@$00@internal@Eigen@@$07$03$0A@$0A@@23@V?$TensorContractionInputMapper@M_J$00U?$TensorEvaluator@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$01$0A@_J@3@$$CBV?$Tensor@M$02$0A@_J@3@@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0A@$0A@@23@V?$TensorContractionInputMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0A@$0A@@23@V?$blas_data_mapper@M_J$0A@$0A@$00@23@@?$TensorEvaluator@$$CBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$01$0A@_J@3@$$CBV?$Tensor@M$02$0A@_J@3@@Eigen@@$$CBV?$Tensor@M$01$0A@_J@4@@Eigen@@UThreadPoolDevice@2@@Eigen@@QEAA@AEBUThreadPoolDevice@2@HAEAV?$TensorContractionInputMapper@M_J$00U?$TensorEvaluator@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$01$0A@_J@3@$$CBV?$Tensor@M$02$0A@_J@3@@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0A@$0A@@internal@2@AEAV?$TensorContractionInputMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0A@$0A@@52@PEAM_J444444444444_N5@Z</DECORATED>
    <FUNCLINE>294</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,3,0,__int64&gt; const &gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;::Context&lt;Eigen::internal::gemm_pack_lhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,3,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,8,4,0,0,0&gt;,Eigen::internal::gemm_pack_rhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,4,0,0,0&gt;,Eigen::internal::gebp_kernel&lt;float,float,__int64,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt;,8,4,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,3,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt; &gt;::pad_</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContractionThreadPool.h</FILENAME>
      <LINE>294</LINE>
      <COLUMN>4</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,3,0,__int64&gt; const &gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;::Context&lt;Eigen::internal::gemm_pack_lhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,3,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,8,4,0,0,0&gt;,Eigen::internal::gemm_pack_rhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,1,0&gt;,4,0,0,0&gt;,Eigen::internal::gebp_kernel&lt;float,float,__int64,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt;,8,4,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,3,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,1,0&gt;,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt; &gt;::state_kernel_' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,3,0,__int64&gt; const &gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;::Context&lt;Eigen::internal::gemm_pack_lhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,3,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,8,4,0,0,0&gt;,Eigen::internal::gemm_pack_rhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,1,0&gt;,4,0,0,0&gt;,Eigen::internal::gebp_kernel&lt;float,float,__int64,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt;,8,4,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,3,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,1,0&gt;,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt; &gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$Context@U?$gemm_pack_lhs@M_JV?$TensorContractionSubMapper@M_J$00U?$TensorEvaluator@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$01$0A@_J@3@$$CBV?$Tensor@M$02$0A@_J@3@@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0A@$0A@@internal@Eigen@@$07$03$0A@$0A@$0A@@internal@Eigen@@U?$gemm_pack_rhs@M_JV?$TensorContractionSubMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$00$0A@@internal@Eigen@@$03$0A@$0A@$0A@@23@U?$gebp_kernel@MM_JV?$blas_data_mapper@M_J$0A@$0A@$00@internal@Eigen@@$07$03$0A@$0A@@23@V?$TensorContractionInputMapper@M_J$00U?$TensorEvaluator@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$01$0A@_J@3@$$CBV?$Tensor@M$02$0A@_J@3@@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0A@$0A@@23@V?$TensorContractionInputMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$00$0A@@23@V?$blas_data_mapper@M_J$0A@$0A@$00@23@@?$TensorEvaluator@$$CBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$01$0A@_J@3@$$CBV?$Tensor@M$02$0A@_J@3@@Eigen@@$$CBV?$Tensor@M$01$0A@_J@4@@Eigen@@UThreadPoolDevice@2@@Eigen@@QEAA@AEBUThreadPoolDevice@2@HAEAV?$TensorContractionInputMapper@M_J$00U?$TensorEvaluator@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$01$0A@_J@3@$$CBV?$Tensor@M$02$0A@_J@3@@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0A@$0A@@internal@2@AEAV?$TensorContractionInputMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$00$0A@@52@PEAM_J444444444444_N5@Z</DECORATED>
    <FUNCLINE>294</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,3,0,__int64&gt; const &gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;::Context&lt;Eigen::internal::gemm_pack_lhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,3,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,8,4,0,0,0&gt;,Eigen::internal::gemm_pack_rhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,1,0&gt;,4,0,0,0&gt;,Eigen::internal::gebp_kernel&lt;float,float,__int64,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt;,8,4,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,3,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,1,0&gt;,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt; &gt;::state_kernel_</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContractionThreadPool.h</FILENAME>
      <LINE>294</LINE>
      <COLUMN>4</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,3,0,__int64&gt; const &gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;::Context&lt;Eigen::internal::gemm_pack_lhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,3,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,8,4,0,0,0&gt;,Eigen::internal::gemm_pack_rhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,1,0&gt;,4,0,0,0&gt;,Eigen::internal::gebp_kernel&lt;float,float,__int64,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt;,8,4,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,3,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,1,0&gt;,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt; &gt;::pad_' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,3,0,__int64&gt; const &gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;::Context&lt;Eigen::internal::gemm_pack_lhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,3,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,8,4,0,0,0&gt;,Eigen::internal::gemm_pack_rhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,1,0&gt;,4,0,0,0&gt;,Eigen::internal::gebp_kernel&lt;float,float,__int64,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt;,8,4,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,3,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,1,0&gt;,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt; &gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$Context@U?$gemm_pack_lhs@M_JV?$TensorContractionSubMapper@M_J$00U?$TensorEvaluator@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$01$0A@_J@3@$$CBV?$Tensor@M$02$0A@_J@3@@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0A@$0A@@internal@Eigen@@$07$03$0A@$0A@$0A@@internal@Eigen@@U?$gemm_pack_rhs@M_JV?$TensorContractionSubMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$00$0A@@internal@Eigen@@$03$0A@$0A@$0A@@23@U?$gebp_kernel@MM_JV?$blas_data_mapper@M_J$0A@$0A@$00@internal@Eigen@@$07$03$0A@$0A@@23@V?$TensorContractionInputMapper@M_J$00U?$TensorEvaluator@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$01$0A@_J@3@$$CBV?$Tensor@M$02$0A@_J@3@@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0A@$0A@@23@V?$TensorContractionInputMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$00$0A@@23@V?$blas_data_mapper@M_J$0A@$0A@$00@23@@?$TensorEvaluator@$$CBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$01$0A@_J@3@$$CBV?$Tensor@M$02$0A@_J@3@@Eigen@@$$CBV?$Tensor@M$01$0A@_J@4@@Eigen@@UThreadPoolDevice@2@@Eigen@@QEAA@AEBUThreadPoolDevice@2@HAEAV?$TensorContractionInputMapper@M_J$00U?$TensorEvaluator@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$01$0A@_J@3@$$CBV?$Tensor@M$02$0A@_J@3@@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0A@$0A@@internal@2@AEAV?$TensorContractionInputMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$00$0A@@52@PEAM_J444444444444_N5@Z</DECORATED>
    <FUNCLINE>294</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,3,0,__int64&gt; const &gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;::Context&lt;Eigen::internal::gemm_pack_lhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,3,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,8,4,0,0,0&gt;,Eigen::internal::gemm_pack_rhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,1,0&gt;,4,0,0,0&gt;,Eigen::internal::gebp_kernel&lt;float,float,__int64,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt;,8,4,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,3,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,1,0&gt;,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt; &gt;::pad_</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContractionThreadPool.h</FILENAME>
      <LINE>294</LINE>
      <COLUMN>4</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,3,0,__int64&gt; const &gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;::Context&lt;Eigen::internal::gemm_pack_lhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,3,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,8,4,0,0,0&gt;,Eigen::internal::gemm_pack_rhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,4,0,0,0&gt;,Eigen::internal::gebp_kernel&lt;float,float,__int64,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt;,8,4,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,3,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt; &gt;::state_kernel_' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,3,0,__int64&gt; const &gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;::Context&lt;Eigen::internal::gemm_pack_lhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,3,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,8,4,0,0,0&gt;,Eigen::internal::gemm_pack_rhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,4,0,0,0&gt;,Eigen::internal::gebp_kernel&lt;float,float,__int64,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt;,8,4,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,3,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt; &gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$Context@U?$gemm_pack_lhs@M_JV?$TensorContractionSubMapper@M_J$00U?$TensorEvaluator@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$01$0A@_J@3@$$CBV?$Tensor@M$02$0A@_J@3@@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0A@$0A@@internal@Eigen@@$07$03$0A@$0A@$0A@@internal@Eigen@@U?$gemm_pack_rhs@M_JV?$TensorContractionSubMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0A@$0A@@internal@Eigen@@$03$0A@$0A@$0A@@23@U?$gebp_kernel@MM_JV?$blas_data_mapper@M_J$0A@$0A@$00@internal@Eigen@@$07$03$0A@$0A@@23@V?$TensorContractionInputMapper@M_J$00U?$TensorEvaluator@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$01$0A@_J@3@$$CBV?$Tensor@M$02$0A@_J@3@@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0A@$0A@@23@V?$TensorContractionInputMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0A@$0A@@23@V?$blas_data_mapper@M_J$0A@$0A@$00@23@@?$TensorEvaluator@$$CBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$01$0A@_J@3@$$CBV?$Tensor@M$02$0A@_J@3@@Eigen@@$$CBV?$Tensor@M$01$0A@_J@4@@Eigen@@UThreadPoolDevice@2@@Eigen@@QEAA@AEBUThreadPoolDevice@2@HAEAV?$TensorContractionInputMapper@M_J$00U?$TensorEvaluator@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$01$0A@_J@3@$$CBV?$Tensor@M$02$0A@_J@3@@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0A@$0A@@internal@2@AEAV?$TensorContractionInputMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0A@$0A@@52@PEAM_J444444444444_N5@Z</DECORATED>
    <FUNCLINE>294</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,3,0,__int64&gt; const &gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;::Context&lt;Eigen::internal::gemm_pack_lhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,3,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,8,4,0,0,0&gt;,Eigen::internal::gemm_pack_rhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,4,0,0,0&gt;,Eigen::internal::gebp_kernel&lt;float,float,__int64,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt;,8,4,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,3,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt; &gt;::state_kernel_</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContractionThreadPool.h</FILENAME>
      <LINE>294</LINE>
      <COLUMN>4</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,3,0,__int64&gt; const &gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;::Context&lt;Eigen::internal::gemm_pack_lhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,3,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,8,4,0,0,0&gt;,Eigen::internal::gemm_pack_rhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,4,0,0,0&gt;,Eigen::internal::gebp_kernel&lt;float,float,__int64,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt;,8,4,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,3,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt; &gt;::pad_' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,3,0,__int64&gt; const &gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;::Context&lt;Eigen::internal::gemm_pack_lhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,3,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,8,4,0,0,0&gt;,Eigen::internal::gemm_pack_rhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,4,0,0,0&gt;,Eigen::internal::gebp_kernel&lt;float,float,__int64,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt;,8,4,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,3,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt; &gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$Context@U?$gemm_pack_lhs@M_JV?$TensorContractionSubMapper@M_J$00U?$TensorEvaluator@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$01$0A@_J@3@$$CBV?$Tensor@M$02$0A@_J@3@@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0A@$0A@@internal@Eigen@@$07$03$0A@$0A@$0A@@internal@Eigen@@U?$gemm_pack_rhs@M_JV?$TensorContractionSubMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0A@$0A@@internal@Eigen@@$03$0A@$0A@$0A@@23@U?$gebp_kernel@MM_JV?$blas_data_mapper@M_J$0A@$0A@$00@internal@Eigen@@$07$03$0A@$0A@@23@V?$TensorContractionInputMapper@M_J$00U?$TensorEvaluator@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$01$0A@_J@3@$$CBV?$Tensor@M$02$0A@_J@3@@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0A@$0A@@23@V?$TensorContractionInputMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0A@$0A@@23@V?$blas_data_mapper@M_J$0A@$0A@$00@23@@?$TensorEvaluator@$$CBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$01$0A@_J@3@$$CBV?$Tensor@M$02$0A@_J@3@@Eigen@@$$CBV?$Tensor@M$01$0A@_J@4@@Eigen@@UThreadPoolDevice@2@@Eigen@@QEAA@AEBUThreadPoolDevice@2@HAEAV?$TensorContractionInputMapper@M_J$00U?$TensorEvaluator@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$01$0A@_J@3@$$CBV?$Tensor@M$02$0A@_J@3@@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0A@$0A@@internal@2@AEAV?$TensorContractionInputMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0A@$0A@@52@PEAM_J444444444444_N5@Z</DECORATED>
    <FUNCLINE>294</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,3,0,__int64&gt; const &gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;::Context&lt;Eigen::internal::gemm_pack_lhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,3,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,8,4,0,0,0&gt;,Eigen::internal::gemm_pack_rhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,4,0,0,0&gt;,Eigen::internal::gebp_kernel&lt;float,float,__int64,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt;,8,4,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,3,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt; &gt;::pad_</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContractionThreadPool.h</FILENAME>
      <LINE>294</LINE>
      <COLUMN>4</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,3,0,__int64&gt; const &gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;::Context&lt;Eigen::internal::gemm_pack_lhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,3,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,8,4,0,0,0&gt;,Eigen::internal::gemm_pack_rhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,1,0&gt;,4,0,0,0&gt;,Eigen::internal::gebp_kernel&lt;float,float,__int64,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt;,8,4,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,3,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,1,0&gt;,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt; &gt;::state_kernel_' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,3,0,__int64&gt; const &gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;::Context&lt;Eigen::internal::gemm_pack_lhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,3,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,8,4,0,0,0&gt;,Eigen::internal::gemm_pack_rhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,1,0&gt;,4,0,0,0&gt;,Eigen::internal::gebp_kernel&lt;float,float,__int64,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt;,8,4,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,3,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,1,0&gt;,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt; &gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$Context@U?$gemm_pack_lhs@M_JV?$TensorContractionSubMapper@M_J$00U?$TensorEvaluator@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$01$0A@_J@3@$$CBV?$Tensor@M$02$0A@_J@3@@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0A@$0A@@internal@Eigen@@$07$03$0A@$0A@$0A@@internal@Eigen@@U?$gemm_pack_rhs@M_JV?$TensorContractionSubMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$00$0A@@internal@Eigen@@$03$0A@$0A@$0A@@23@U?$gebp_kernel@MM_JV?$blas_data_mapper@M_J$0A@$0A@$00@internal@Eigen@@$07$03$0A@$0A@@23@V?$TensorContractionInputMapper@M_J$00U?$TensorEvaluator@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$01$0A@_J@3@$$CBV?$Tensor@M$02$0A@_J@3@@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0A@$0A@@23@V?$TensorContractionInputMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$00$0A@@23@V?$blas_data_mapper@M_J$0A@$0A@$00@23@@?$TensorEvaluator@$$CBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$01$0A@_J@3@$$CBV?$Tensor@M$02$0A@_J@3@@Eigen@@$$CBV?$Tensor@M$01$0A@_J@4@@Eigen@@UThreadPoolDevice@2@@Eigen@@QEAA@AEBUThreadPoolDevice@2@HAEAV?$TensorContractionInputMapper@M_J$00U?$TensorEvaluator@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$01$0A@_J@3@$$CBV?$Tensor@M$02$0A@_J@3@@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0A@$0A@@internal@2@AEAV?$TensorContractionInputMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$00$0A@@52@PEAM_J444444444444_N5@Z</DECORATED>
    <FUNCLINE>294</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,3,0,__int64&gt; const &gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;::Context&lt;Eigen::internal::gemm_pack_lhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,3,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,8,4,0,0,0&gt;,Eigen::internal::gemm_pack_rhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,1,0&gt;,4,0,0,0&gt;,Eigen::internal::gebp_kernel&lt;float,float,__int64,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt;,8,4,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,3,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,1,0&gt;,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt; &gt;::state_kernel_</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContractionThreadPool.h</FILENAME>
      <LINE>294</LINE>
      <COLUMN>4</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,3,0,__int64&gt; const &gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;::Context&lt;Eigen::internal::gemm_pack_lhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,3,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,8,4,0,0,0&gt;,Eigen::internal::gemm_pack_rhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,1,0&gt;,4,0,0,0&gt;,Eigen::internal::gebp_kernel&lt;float,float,__int64,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt;,8,4,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,3,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,1,0&gt;,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt; &gt;::pad_' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,3,0,__int64&gt; const &gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;::Context&lt;Eigen::internal::gemm_pack_lhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,3,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,8,4,0,0,0&gt;,Eigen::internal::gemm_pack_rhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,1,0&gt;,4,0,0,0&gt;,Eigen::internal::gebp_kernel&lt;float,float,__int64,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt;,8,4,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,3,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,1,0&gt;,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt; &gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$Context@U?$gemm_pack_lhs@M_JV?$TensorContractionSubMapper@M_J$00U?$TensorEvaluator@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$01$0A@_J@3@$$CBV?$Tensor@M$02$0A@_J@3@@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0A@$0A@@internal@Eigen@@$07$03$0A@$0A@$0A@@internal@Eigen@@U?$gemm_pack_rhs@M_JV?$TensorContractionSubMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$00$0A@@internal@Eigen@@$03$0A@$0A@$0A@@23@U?$gebp_kernel@MM_JV?$blas_data_mapper@M_J$0A@$0A@$00@internal@Eigen@@$07$03$0A@$0A@@23@V?$TensorContractionInputMapper@M_J$00U?$TensorEvaluator@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$01$0A@_J@3@$$CBV?$Tensor@M$02$0A@_J@3@@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0A@$0A@@23@V?$TensorContractionInputMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$00$0A@@23@V?$blas_data_mapper@M_J$0A@$0A@$00@23@@?$TensorEvaluator@$$CBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$01$0A@_J@3@$$CBV?$Tensor@M$02$0A@_J@3@@Eigen@@$$CBV?$Tensor@M$01$0A@_J@4@@Eigen@@UThreadPoolDevice@2@@Eigen@@QEAA@AEBUThreadPoolDevice@2@HAEAV?$TensorContractionInputMapper@M_J$00U?$TensorEvaluator@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$01$0A@_J@3@$$CBV?$Tensor@M$02$0A@_J@3@@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0A@$0A@@internal@2@AEAV?$TensorContractionInputMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$00$0A@@52@PEAM_J444444444444_N5@Z</DECORATED>
    <FUNCLINE>294</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,3,0,__int64&gt; const &gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;::Context&lt;Eigen::internal::gemm_pack_lhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,3,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,8,4,0,0,0&gt;,Eigen::internal::gemm_pack_rhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,1,0&gt;,4,0,0,0&gt;,Eigen::internal::gebp_kernel&lt;float,float,__int64,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt;,8,4,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,3,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,1,0&gt;,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt; &gt;::pad_</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContractionThreadPool.h</FILENAME>
      <LINE>294</LINE>
      <COLUMN>4</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;::Context&lt;Eigen::internal::gemm_pack_lhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,8,4,0,0,0&gt;,Eigen::internal::gemm_pack_rhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,4,0,0,0&gt;,Eigen::internal::gebp_kernel&lt;float,float,__int64,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt;,8,4,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt; &gt;::state_kernel_' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;::Context&lt;Eigen::internal::gemm_pack_lhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,8,4,0,0,0&gt;,Eigen::internal::gemm_pack_rhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,4,0,0,0&gt;,Eigen::internal::gebp_kernel&lt;float,float,__int64,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt;,8,4,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt; &gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$Context@U?$gemm_pack_lhs@M_JV?$TensorContractionSubMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0A@$0A@@internal@Eigen@@$07$03$0A@$0A@$0A@@internal@Eigen@@U?$gemm_pack_rhs@M_JV?$TensorContractionSubMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0A@$0A@@internal@Eigen@@$03$0A@$0A@$0A@@23@U?$gebp_kernel@MM_JV?$blas_data_mapper@M_J$0A@$0A@$00@internal@Eigen@@$07$03$0A@$0A@@23@V?$TensorContractionInputMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0A@$0A@@23@V?$TensorContractionInputMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0A@$0A@@23@V?$blas_data_mapper@M_J$0A@$0A@$00@23@@?$TensorEvaluator@$$CBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$01$0A@_J@Eigen@@$$CBV34@@Eigen@@UThreadPoolDevice@2@@Eigen@@QEAA@AEBUThreadPoolDevice@2@HAEAV?$TensorContractionInputMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0A@$0A@@internal@2@AEAV?$TensorContractionInputMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0A@$0A@@52@PEAM_J444444444444_N5@Z</DECORATED>
    <FUNCLINE>294</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;::Context&lt;Eigen::internal::gemm_pack_lhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,8,4,0,0,0&gt;,Eigen::internal::gemm_pack_rhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,4,0,0,0&gt;,Eigen::internal::gebp_kernel&lt;float,float,__int64,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt;,8,4,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt; &gt;::state_kernel_</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContractionThreadPool.h</FILENAME>
      <LINE>294</LINE>
      <COLUMN>4</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;::Context&lt;Eigen::internal::gemm_pack_lhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,8,4,0,0,0&gt;,Eigen::internal::gemm_pack_rhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,4,0,0,0&gt;,Eigen::internal::gebp_kernel&lt;float,float,__int64,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt;,8,4,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt; &gt;::pad_' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;::Context&lt;Eigen::internal::gemm_pack_lhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,8,4,0,0,0&gt;,Eigen::internal::gemm_pack_rhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,4,0,0,0&gt;,Eigen::internal::gebp_kernel&lt;float,float,__int64,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt;,8,4,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt; &gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$Context@U?$gemm_pack_lhs@M_JV?$TensorContractionSubMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0A@$0A@@internal@Eigen@@$07$03$0A@$0A@$0A@@internal@Eigen@@U?$gemm_pack_rhs@M_JV?$TensorContractionSubMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0A@$0A@@internal@Eigen@@$03$0A@$0A@$0A@@23@U?$gebp_kernel@MM_JV?$blas_data_mapper@M_J$0A@$0A@$00@internal@Eigen@@$07$03$0A@$0A@@23@V?$TensorContractionInputMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0A@$0A@@23@V?$TensorContractionInputMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0A@$0A@@23@V?$blas_data_mapper@M_J$0A@$0A@$00@23@@?$TensorEvaluator@$$CBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$01$0A@_J@Eigen@@$$CBV34@@Eigen@@UThreadPoolDevice@2@@Eigen@@QEAA@AEBUThreadPoolDevice@2@HAEAV?$TensorContractionInputMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0A@$0A@@internal@2@AEAV?$TensorContractionInputMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0A@$0A@@52@PEAM_J444444444444_N5@Z</DECORATED>
    <FUNCLINE>294</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;::Context&lt;Eigen::internal::gemm_pack_lhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,8,4,0,0,0&gt;,Eigen::internal::gemm_pack_rhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,4,0,0,0&gt;,Eigen::internal::gebp_kernel&lt;float,float,__int64,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt;,8,4,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt; &gt;::pad_</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContractionThreadPool.h</FILENAME>
      <LINE>294</LINE>
      <COLUMN>4</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;::Context&lt;Eigen::internal::gemm_pack_lhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,8,4,0,0,0&gt;,Eigen::internal::gemm_pack_rhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,1,0&gt;,4,0,0,0&gt;,Eigen::internal::gebp_kernel&lt;float,float,__int64,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt;,8,4,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,1,0&gt;,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt; &gt;::state_kernel_' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;::Context&lt;Eigen::internal::gemm_pack_lhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,8,4,0,0,0&gt;,Eigen::internal::gemm_pack_rhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,1,0&gt;,4,0,0,0&gt;,Eigen::internal::gebp_kernel&lt;float,float,__int64,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt;,8,4,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,1,0&gt;,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt; &gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$Context@U?$gemm_pack_lhs@M_JV?$TensorContractionSubMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0A@$0A@@internal@Eigen@@$07$03$0A@$0A@$0A@@internal@Eigen@@U?$gemm_pack_rhs@M_JV?$TensorContractionSubMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$00$0A@@internal@Eigen@@$03$0A@$0A@$0A@@23@U?$gebp_kernel@MM_JV?$blas_data_mapper@M_J$0A@$0A@$00@internal@Eigen@@$07$03$0A@$0A@@23@V?$TensorContractionInputMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0A@$0A@@23@V?$TensorContractionInputMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$00$0A@@23@V?$blas_data_mapper@M_J$0A@$0A@$00@23@@?$TensorEvaluator@$$CBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$01$0A@_J@Eigen@@$$CBV34@@Eigen@@UThreadPoolDevice@2@@Eigen@@QEAA@AEBUThreadPoolDevice@2@HAEAV?$TensorContractionInputMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0A@$0A@@internal@2@AEAV?$TensorContractionInputMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$00$0A@@52@PEAM_J444444444444_N5@Z</DECORATED>
    <FUNCLINE>294</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;::Context&lt;Eigen::internal::gemm_pack_lhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,8,4,0,0,0&gt;,Eigen::internal::gemm_pack_rhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,1,0&gt;,4,0,0,0&gt;,Eigen::internal::gebp_kernel&lt;float,float,__int64,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt;,8,4,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,1,0&gt;,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt; &gt;::state_kernel_</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContractionThreadPool.h</FILENAME>
      <LINE>294</LINE>
      <COLUMN>4</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;::Context&lt;Eigen::internal::gemm_pack_lhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,8,4,0,0,0&gt;,Eigen::internal::gemm_pack_rhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,1,0&gt;,4,0,0,0&gt;,Eigen::internal::gebp_kernel&lt;float,float,__int64,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt;,8,4,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,1,0&gt;,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt; &gt;::pad_' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;::Context&lt;Eigen::internal::gemm_pack_lhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,8,4,0,0,0&gt;,Eigen::internal::gemm_pack_rhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,1,0&gt;,4,0,0,0&gt;,Eigen::internal::gebp_kernel&lt;float,float,__int64,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt;,8,4,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,1,0&gt;,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt; &gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$Context@U?$gemm_pack_lhs@M_JV?$TensorContractionSubMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0A@$0A@@internal@Eigen@@$07$03$0A@$0A@$0A@@internal@Eigen@@U?$gemm_pack_rhs@M_JV?$TensorContractionSubMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$00$0A@@internal@Eigen@@$03$0A@$0A@$0A@@23@U?$gebp_kernel@MM_JV?$blas_data_mapper@M_J$0A@$0A@$00@internal@Eigen@@$07$03$0A@$0A@@23@V?$TensorContractionInputMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0A@$0A@@23@V?$TensorContractionInputMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$00$0A@@23@V?$blas_data_mapper@M_J$0A@$0A@$00@23@@?$TensorEvaluator@$$CBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$01$0A@_J@Eigen@@$$CBV34@@Eigen@@UThreadPoolDevice@2@@Eigen@@QEAA@AEBUThreadPoolDevice@2@HAEAV?$TensorContractionInputMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0A@$0A@@internal@2@AEAV?$TensorContractionInputMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$00$0A@@52@PEAM_J444444444444_N5@Z</DECORATED>
    <FUNCLINE>294</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;::Context&lt;Eigen::internal::gemm_pack_lhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,8,4,0,0,0&gt;,Eigen::internal::gemm_pack_rhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,1,0&gt;,4,0,0,0&gt;,Eigen::internal::gebp_kernel&lt;float,float,__int64,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt;,8,4,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,1,0&gt;,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt; &gt;::pad_</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContractionThreadPool.h</FILENAME>
      <LINE>294</LINE>
      <COLUMN>4</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;::Context&lt;Eigen::internal::gemm_pack_lhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,8,4,0,0,0&gt;,Eigen::internal::gemm_pack_rhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,4,0,0,0&gt;,Eigen::internal::gebp_kernel&lt;float,float,__int64,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt;,8,4,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt; &gt;::pad_' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;::Context&lt;Eigen::internal::gemm_pack_lhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,8,4,0,0,0&gt;,Eigen::internal::gemm_pack_rhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,4,0,0,0&gt;,Eigen::internal::gebp_kernel&lt;float,float,__int64,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt;,8,4,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt; &gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$Context@U?$gemm_pack_lhs@M_JV?$TensorContractionSubMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0A@$0A@@internal@Eigen@@$07$03$0A@$0A@$0A@@internal@Eigen@@U?$gemm_pack_rhs@M_JV?$TensorContractionSubMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0A@$0A@@internal@Eigen@@$03$0A@$0A@$0A@@23@U?$gebp_kernel@MM_JV?$blas_data_mapper@M_J$0A@$0A@$00@internal@Eigen@@$07$03$0A@$0A@@23@V?$TensorContractionInputMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0A@$0A@@23@V?$TensorContractionInputMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0A@$0A@@23@V?$blas_data_mapper@M_J$0A@$0A@$00@23@@?$TensorEvaluator@$$CBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$01$0A@_J@Eigen@@$$CBV34@@Eigen@@UThreadPoolDevice@2@@Eigen@@QEAA@AEBUThreadPoolDevice@2@HAEAV?$TensorContractionInputMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0A@$0A@@internal@2@AEAV?$TensorContractionInputMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0A@$0A@@52@PEAM_J444444444444_N5@Z</DECORATED>
    <FUNCLINE>294</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;::Context&lt;Eigen::internal::gemm_pack_lhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,8,4,0,0,0&gt;,Eigen::internal::gemm_pack_rhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,4,0,0,0&gt;,Eigen::internal::gebp_kernel&lt;float,float,__int64,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt;,8,4,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt; &gt;::pad_</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContractionThreadPool.h</FILENAME>
      <LINE>294</LINE>
      <COLUMN>4</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;::Context&lt;Eigen::internal::gemm_pack_lhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,8,4,0,0,0&gt;,Eigen::internal::gemm_pack_rhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,4,0,0,0&gt;,Eigen::internal::gebp_kernel&lt;float,float,__int64,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt;,8,4,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt; &gt;::state_kernel_' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;::Context&lt;Eigen::internal::gemm_pack_lhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,8,4,0,0,0&gt;,Eigen::internal::gemm_pack_rhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,4,0,0,0&gt;,Eigen::internal::gebp_kernel&lt;float,float,__int64,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt;,8,4,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt; &gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$Context@U?$gemm_pack_lhs@M_JV?$TensorContractionSubMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0A@$0A@@internal@Eigen@@$07$03$0A@$0A@$0A@@internal@Eigen@@U?$gemm_pack_rhs@M_JV?$TensorContractionSubMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0A@$0A@@internal@Eigen@@$03$0A@$0A@$0A@@23@U?$gebp_kernel@MM_JV?$blas_data_mapper@M_J$0A@$0A@$00@internal@Eigen@@$07$03$0A@$0A@@23@V?$TensorContractionInputMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0A@$0A@@23@V?$TensorContractionInputMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0A@$0A@@23@V?$blas_data_mapper@M_J$0A@$0A@$00@23@@?$TensorEvaluator@$$CBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$01$0A@_J@Eigen@@$$CBV34@@Eigen@@UThreadPoolDevice@2@@Eigen@@QEAA@AEBUThreadPoolDevice@2@HAEAV?$TensorContractionInputMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0A@$0A@@internal@2@AEAV?$TensorContractionInputMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0A@$0A@@52@PEAM_J444444444444_N5@Z</DECORATED>
    <FUNCLINE>294</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;::Context&lt;Eigen::internal::gemm_pack_lhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,8,4,0,0,0&gt;,Eigen::internal::gemm_pack_rhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,4,0,0,0&gt;,Eigen::internal::gebp_kernel&lt;float,float,__int64,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt;,8,4,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt; &gt;::state_kernel_</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContractionThreadPool.h</FILENAME>
      <LINE>294</LINE>
      <COLUMN>4</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;::Context&lt;Eigen::internal::gemm_pack_lhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,8,4,0,0,0&gt;,Eigen::internal::gemm_pack_rhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,1,0&gt;,4,0,0,0&gt;,Eigen::internal::gebp_kernel&lt;float,float,__int64,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt;,8,4,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,1,0&gt;,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt; &gt;::state_kernel_' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;::Context&lt;Eigen::internal::gemm_pack_lhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,8,4,0,0,0&gt;,Eigen::internal::gemm_pack_rhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,1,0&gt;,4,0,0,0&gt;,Eigen::internal::gebp_kernel&lt;float,float,__int64,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt;,8,4,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,1,0&gt;,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt; &gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$Context@U?$gemm_pack_lhs@M_JV?$TensorContractionSubMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0A@$0A@@internal@Eigen@@$07$03$0A@$0A@$0A@@internal@Eigen@@U?$gemm_pack_rhs@M_JV?$TensorContractionSubMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$00$0A@@internal@Eigen@@$03$0A@$0A@$0A@@23@U?$gebp_kernel@MM_JV?$blas_data_mapper@M_J$0A@$0A@$00@internal@Eigen@@$07$03$0A@$0A@@23@V?$TensorContractionInputMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0A@$0A@@23@V?$TensorContractionInputMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$00$0A@@23@V?$blas_data_mapper@M_J$0A@$0A@$00@23@@?$TensorEvaluator@$$CBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$01$0A@_J@Eigen@@$$CBV34@@Eigen@@UThreadPoolDevice@2@@Eigen@@QEAA@AEBUThreadPoolDevice@2@HAEAV?$TensorContractionInputMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0A@$0A@@internal@2@AEAV?$TensorContractionInputMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$00$0A@@52@PEAM_J444444444444_N5@Z</DECORATED>
    <FUNCLINE>294</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;::Context&lt;Eigen::internal::gemm_pack_lhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,8,4,0,0,0&gt;,Eigen::internal::gemm_pack_rhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,1,0&gt;,4,0,0,0&gt;,Eigen::internal::gebp_kernel&lt;float,float,__int64,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt;,8,4,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,1,0&gt;,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt; &gt;::state_kernel_</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContractionThreadPool.h</FILENAME>
      <LINE>294</LINE>
      <COLUMN>4</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;::Context&lt;Eigen::internal::gemm_pack_lhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,8,4,0,0,0&gt;,Eigen::internal::gemm_pack_rhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,1,0&gt;,4,0,0,0&gt;,Eigen::internal::gebp_kernel&lt;float,float,__int64,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt;,8,4,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,1,0&gt;,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt; &gt;::pad_' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;::Context&lt;Eigen::internal::gemm_pack_lhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,8,4,0,0,0&gt;,Eigen::internal::gemm_pack_rhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,1,0&gt;,4,0,0,0&gt;,Eigen::internal::gebp_kernel&lt;float,float,__int64,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt;,8,4,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,1,0&gt;,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt; &gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$Context@U?$gemm_pack_lhs@M_JV?$TensorContractionSubMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0A@$0A@@internal@Eigen@@$07$03$0A@$0A@$0A@@internal@Eigen@@U?$gemm_pack_rhs@M_JV?$TensorContractionSubMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$00$0A@@internal@Eigen@@$03$0A@$0A@$0A@@23@U?$gebp_kernel@MM_JV?$blas_data_mapper@M_J$0A@$0A@$00@internal@Eigen@@$07$03$0A@$0A@@23@V?$TensorContractionInputMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0A@$0A@@23@V?$TensorContractionInputMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$00$0A@@23@V?$blas_data_mapper@M_J$0A@$0A@$00@23@@?$TensorEvaluator@$$CBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$01$0A@_J@Eigen@@$$CBV34@@Eigen@@UThreadPoolDevice@2@@Eigen@@QEAA@AEBUThreadPoolDevice@2@HAEAV?$TensorContractionInputMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0A@$0A@@internal@2@AEAV?$TensorContractionInputMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$00$0A@@52@PEAM_J444444444444_N5@Z</DECORATED>
    <FUNCLINE>294</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;::Context&lt;Eigen::internal::gemm_pack_lhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,8,4,0,0,0&gt;,Eigen::internal::gemm_pack_rhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,1,0&gt;,4,0,0,0&gt;,Eigen::internal::gebp_kernel&lt;float,float,__int64,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt;,8,4,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,1,0&gt;,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt; &gt;::pad_</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContractionThreadPool.h</FILENAME>
      <LINE>294</LINE>
      <COLUMN>4</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;::Context&lt;Eigen::internal::gemm_pack_lhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,8,4,0,0,0&gt;,Eigen::internal::gemm_pack_rhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,4,0,0,0&gt;,Eigen::internal::gebp_kernel&lt;float,float,__int64,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt;,8,4,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt; &gt;::state_kernel_' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;::Context&lt;Eigen::internal::gemm_pack_lhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,8,4,0,0,0&gt;,Eigen::internal::gemm_pack_rhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,4,0,0,0&gt;,Eigen::internal::gebp_kernel&lt;float,float,__int64,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt;,8,4,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt; &gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$Context@U?$gemm_pack_lhs@M_JV?$TensorContractionSubMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0A@$0A@@internal@Eigen@@$07$03$0A@$0A@$0A@@internal@Eigen@@U?$gemm_pack_rhs@M_JV?$TensorContractionSubMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0A@$0A@@internal@Eigen@@$03$0A@$0A@$0A@@23@U?$gebp_kernel@MM_JV?$blas_data_mapper@M_J$0A@$0A@$00@internal@Eigen@@$07$03$0A@$0A@@23@V?$TensorContractionInputMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0A@$0A@@23@V?$TensorContractionInputMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0A@$0A@@23@V?$blas_data_mapper@M_J$0A@$0A@$00@23@@?$TensorEvaluator@$$CBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$01$0A@_J@Eigen@@$$CBV34@@Eigen@@UThreadPoolDevice@2@@Eigen@@QEAA@AEBUThreadPoolDevice@2@HAEAV?$TensorContractionInputMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0A@$0A@@internal@2@AEAV?$TensorContractionInputMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0A@$0A@@52@PEAM_J444444444444_N5@Z</DECORATED>
    <FUNCLINE>294</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;::Context&lt;Eigen::internal::gemm_pack_lhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,8,4,0,0,0&gt;,Eigen::internal::gemm_pack_rhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,4,0,0,0&gt;,Eigen::internal::gebp_kernel&lt;float,float,__int64,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt;,8,4,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt; &gt;::state_kernel_</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContractionThreadPool.h</FILENAME>
      <LINE>294</LINE>
      <COLUMN>4</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;::Context&lt;Eigen::internal::gemm_pack_lhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,8,4,0,0,0&gt;,Eigen::internal::gemm_pack_rhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,4,0,0,0&gt;,Eigen::internal::gebp_kernel&lt;float,float,__int64,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt;,8,4,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt; &gt;::pad_' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;::Context&lt;Eigen::internal::gemm_pack_lhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,8,4,0,0,0&gt;,Eigen::internal::gemm_pack_rhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,4,0,0,0&gt;,Eigen::internal::gebp_kernel&lt;float,float,__int64,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt;,8,4,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt; &gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$Context@U?$gemm_pack_lhs@M_JV?$TensorContractionSubMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0A@$0A@@internal@Eigen@@$07$03$0A@$0A@$0A@@internal@Eigen@@U?$gemm_pack_rhs@M_JV?$TensorContractionSubMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0A@$0A@@internal@Eigen@@$03$0A@$0A@$0A@@23@U?$gebp_kernel@MM_JV?$blas_data_mapper@M_J$0A@$0A@$00@internal@Eigen@@$07$03$0A@$0A@@23@V?$TensorContractionInputMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0A@$0A@@23@V?$TensorContractionInputMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0A@$0A@@23@V?$blas_data_mapper@M_J$0A@$0A@$00@23@@?$TensorEvaluator@$$CBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$01$0A@_J@Eigen@@$$CBV34@@Eigen@@UThreadPoolDevice@2@@Eigen@@QEAA@AEBUThreadPoolDevice@2@HAEAV?$TensorContractionInputMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0A@$0A@@internal@2@AEAV?$TensorContractionInputMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0A@$0A@@52@PEAM_J444444444444_N5@Z</DECORATED>
    <FUNCLINE>294</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;::Context&lt;Eigen::internal::gemm_pack_lhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,8,4,0,0,0&gt;,Eigen::internal::gemm_pack_rhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,4,0,0,0&gt;,Eigen::internal::gebp_kernel&lt;float,float,__int64,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt;,8,4,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt; &gt;::pad_</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContractionThreadPool.h</FILENAME>
      <LINE>294</LINE>
      <COLUMN>4</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;::Context&lt;Eigen::internal::gemm_pack_lhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,8,4,0,0,0&gt;,Eigen::internal::gemm_pack_rhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,1,0&gt;,4,0,0,0&gt;,Eigen::internal::gebp_kernel&lt;float,float,__int64,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt;,8,4,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,1,0&gt;,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt; &gt;::state_kernel_' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;::Context&lt;Eigen::internal::gemm_pack_lhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,8,4,0,0,0&gt;,Eigen::internal::gemm_pack_rhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,1,0&gt;,4,0,0,0&gt;,Eigen::internal::gebp_kernel&lt;float,float,__int64,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt;,8,4,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,1,0&gt;,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt; &gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$Context@U?$gemm_pack_lhs@M_JV?$TensorContractionSubMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0A@$0A@@internal@Eigen@@$07$03$0A@$0A@$0A@@internal@Eigen@@U?$gemm_pack_rhs@M_JV?$TensorContractionSubMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$00$0A@@internal@Eigen@@$03$0A@$0A@$0A@@23@U?$gebp_kernel@MM_JV?$blas_data_mapper@M_J$0A@$0A@$00@internal@Eigen@@$07$03$0A@$0A@@23@V?$TensorContractionInputMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0A@$0A@@23@V?$TensorContractionInputMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$00$0A@@23@V?$blas_data_mapper@M_J$0A@$0A@$00@23@@?$TensorEvaluator@$$CBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$01$0A@_J@Eigen@@$$CBV34@@Eigen@@UThreadPoolDevice@2@@Eigen@@QEAA@AEBUThreadPoolDevice@2@HAEAV?$TensorContractionInputMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0A@$0A@@internal@2@AEAV?$TensorContractionInputMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$00$0A@@52@PEAM_J444444444444_N5@Z</DECORATED>
    <FUNCLINE>294</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;::Context&lt;Eigen::internal::gemm_pack_lhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,8,4,0,0,0&gt;,Eigen::internal::gemm_pack_rhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,1,0&gt;,4,0,0,0&gt;,Eigen::internal::gebp_kernel&lt;float,float,__int64,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt;,8,4,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,1,0&gt;,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt; &gt;::state_kernel_</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContractionThreadPool.h</FILENAME>
      <LINE>294</LINE>
      <COLUMN>4</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;::Context&lt;Eigen::internal::gemm_pack_lhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,8,4,0,0,0&gt;,Eigen::internal::gemm_pack_rhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,1,0&gt;,4,0,0,0&gt;,Eigen::internal::gebp_kernel&lt;float,float,__int64,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt;,8,4,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,1,0&gt;,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt; &gt;::pad_' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;::Context&lt;Eigen::internal::gemm_pack_lhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,8,4,0,0,0&gt;,Eigen::internal::gemm_pack_rhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,1,0&gt;,4,0,0,0&gt;,Eigen::internal::gebp_kernel&lt;float,float,__int64,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt;,8,4,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,1,0&gt;,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt; &gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$Context@U?$gemm_pack_lhs@M_JV?$TensorContractionSubMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0A@$0A@@internal@Eigen@@$07$03$0A@$0A@$0A@@internal@Eigen@@U?$gemm_pack_rhs@M_JV?$TensorContractionSubMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$00$0A@@internal@Eigen@@$03$0A@$0A@$0A@@23@U?$gebp_kernel@MM_JV?$blas_data_mapper@M_J$0A@$0A@$00@internal@Eigen@@$07$03$0A@$0A@@23@V?$TensorContractionInputMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0A@$0A@@23@V?$TensorContractionInputMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$00$0A@@23@V?$blas_data_mapper@M_J$0A@$0A@$00@23@@?$TensorEvaluator@$$CBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$01$0A@_J@Eigen@@$$CBV34@@Eigen@@UThreadPoolDevice@2@@Eigen@@QEAA@AEBUThreadPoolDevice@2@HAEAV?$TensorContractionInputMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0A@$0A@@internal@2@AEAV?$TensorContractionInputMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$00$0A@@52@PEAM_J444444444444_N5@Z</DECORATED>
    <FUNCLINE>294</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;::Context&lt;Eigen::internal::gemm_pack_lhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,8,4,0,0,0&gt;,Eigen::internal::gemm_pack_rhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,1,0&gt;,4,0,0,0&gt;,Eigen::internal::gebp_kernel&lt;float,float,__int64,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt;,8,4,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,1,0&gt;,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt; &gt;::pad_</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContractionThreadPool.h</FILENAME>
      <LINE>294</LINE>
      <COLUMN>4</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;::Context&lt;Eigen::internal::gemm_pack_lhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,8,4,0,0,0&gt;,Eigen::internal::gemm_pack_rhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,4,0,0,0&gt;,Eigen::internal::gebp_kernel&lt;float,float,__int64,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt;,8,4,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt; &gt;::state_kernel_' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;::Context&lt;Eigen::internal::gemm_pack_lhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,8,4,0,0,0&gt;,Eigen::internal::gemm_pack_rhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,4,0,0,0&gt;,Eigen::internal::gebp_kernel&lt;float,float,__int64,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt;,8,4,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt; &gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$Context@U?$gemm_pack_lhs@M_JV?$TensorContractionSubMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0A@$0A@@internal@Eigen@@$07$03$0A@$0A@$0A@@internal@Eigen@@U?$gemm_pack_rhs@M_JV?$TensorContractionSubMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0A@$0A@@internal@Eigen@@$03$0A@$0A@$0A@@23@U?$gebp_kernel@MM_JV?$blas_data_mapper@M_J$0A@$0A@$00@internal@Eigen@@$07$03$0A@$0A@@23@V?$TensorContractionInputMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0A@$0A@@23@V?$TensorContractionInputMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0A@$0A@@23@V?$blas_data_mapper@M_J$0A@$0A@$00@23@@?$TensorEvaluator@$$CBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$01$0A@_J@Eigen@@$$CBV34@@Eigen@@UThreadPoolDevice@2@@Eigen@@QEAA@AEBUThreadPoolDevice@2@HAEAV?$TensorContractionInputMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0A@$0A@@internal@2@AEAV?$TensorContractionInputMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0A@$0A@@52@PEAM_J444444444444_N5@Z</DECORATED>
    <FUNCLINE>294</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;::Context&lt;Eigen::internal::gemm_pack_lhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,8,4,0,0,0&gt;,Eigen::internal::gemm_pack_rhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,4,0,0,0&gt;,Eigen::internal::gebp_kernel&lt;float,float,__int64,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt;,8,4,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt; &gt;::state_kernel_</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContractionThreadPool.h</FILENAME>
      <LINE>294</LINE>
      <COLUMN>4</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;::Context&lt;Eigen::internal::gemm_pack_lhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,8,4,0,0,0&gt;,Eigen::internal::gemm_pack_rhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,4,0,0,0&gt;,Eigen::internal::gebp_kernel&lt;float,float,__int64,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt;,8,4,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt; &gt;::pad_' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;::Context&lt;Eigen::internal::gemm_pack_lhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,8,4,0,0,0&gt;,Eigen::internal::gemm_pack_rhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,4,0,0,0&gt;,Eigen::internal::gebp_kernel&lt;float,float,__int64,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt;,8,4,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt; &gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$Context@U?$gemm_pack_lhs@M_JV?$TensorContractionSubMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0A@$0A@@internal@Eigen@@$07$03$0A@$0A@$0A@@internal@Eigen@@U?$gemm_pack_rhs@M_JV?$TensorContractionSubMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0A@$0A@@internal@Eigen@@$03$0A@$0A@$0A@@23@U?$gebp_kernel@MM_JV?$blas_data_mapper@M_J$0A@$0A@$00@internal@Eigen@@$07$03$0A@$0A@@23@V?$TensorContractionInputMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0A@$0A@@23@V?$TensorContractionInputMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0A@$0A@@23@V?$blas_data_mapper@M_J$0A@$0A@$00@23@@?$TensorEvaluator@$$CBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$01$0A@_J@Eigen@@$$CBV34@@Eigen@@UThreadPoolDevice@2@@Eigen@@QEAA@AEBUThreadPoolDevice@2@HAEAV?$TensorContractionInputMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0A@$0A@@internal@2@AEAV?$TensorContractionInputMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0A@$0A@@52@PEAM_J444444444444_N5@Z</DECORATED>
    <FUNCLINE>294</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;::Context&lt;Eigen::internal::gemm_pack_lhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,8,4,0,0,0&gt;,Eigen::internal::gemm_pack_rhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,4,0,0,0&gt;,Eigen::internal::gebp_kernel&lt;float,float,__int64,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt;,8,4,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt; &gt;::pad_</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContractionThreadPool.h</FILENAME>
      <LINE>294</LINE>
      <COLUMN>4</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;::Context&lt;Eigen::internal::gemm_pack_lhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,8,4,0,0,0&gt;,Eigen::internal::gemm_pack_rhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,1,0&gt;,4,0,0,0&gt;,Eigen::internal::gebp_kernel&lt;float,float,__int64,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt;,8,4,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,1,0&gt;,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt; &gt;::state_kernel_' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;::Context&lt;Eigen::internal::gemm_pack_lhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,8,4,0,0,0&gt;,Eigen::internal::gemm_pack_rhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,1,0&gt;,4,0,0,0&gt;,Eigen::internal::gebp_kernel&lt;float,float,__int64,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt;,8,4,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,1,0&gt;,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt; &gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$Context@U?$gemm_pack_lhs@M_JV?$TensorContractionSubMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0A@$0A@@internal@Eigen@@$07$03$0A@$0A@$0A@@internal@Eigen@@U?$gemm_pack_rhs@M_JV?$TensorContractionSubMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$00$0A@@internal@Eigen@@$03$0A@$0A@$0A@@23@U?$gebp_kernel@MM_JV?$blas_data_mapper@M_J$0A@$0A@$00@internal@Eigen@@$07$03$0A@$0A@@23@V?$TensorContractionInputMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0A@$0A@@23@V?$TensorContractionInputMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$00$0A@@23@V?$blas_data_mapper@M_J$0A@$0A@$00@23@@?$TensorEvaluator@$$CBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$01$0A@_J@Eigen@@$$CBV34@@Eigen@@UThreadPoolDevice@2@@Eigen@@QEAA@AEBUThreadPoolDevice@2@HAEAV?$TensorContractionInputMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0A@$0A@@internal@2@AEAV?$TensorContractionInputMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$00$0A@@52@PEAM_J444444444444_N5@Z</DECORATED>
    <FUNCLINE>294</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;::Context&lt;Eigen::internal::gemm_pack_lhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,8,4,0,0,0&gt;,Eigen::internal::gemm_pack_rhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,1,0&gt;,4,0,0,0&gt;,Eigen::internal::gebp_kernel&lt;float,float,__int64,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt;,8,4,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,1,0&gt;,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt; &gt;::state_kernel_</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContractionThreadPool.h</FILENAME>
      <LINE>294</LINE>
      <COLUMN>4</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;::Context&lt;Eigen::internal::gemm_pack_lhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,8,4,0,0,0&gt;,Eigen::internal::gemm_pack_rhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,1,0&gt;,4,0,0,0&gt;,Eigen::internal::gebp_kernel&lt;float,float,__int64,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt;,8,4,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,1,0&gt;,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt; &gt;::pad_' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;::Context&lt;Eigen::internal::gemm_pack_lhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,8,4,0,0,0&gt;,Eigen::internal::gemm_pack_rhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,1,0&gt;,4,0,0,0&gt;,Eigen::internal::gebp_kernel&lt;float,float,__int64,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt;,8,4,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,1,0&gt;,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt; &gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$Context@U?$gemm_pack_lhs@M_JV?$TensorContractionSubMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0A@$0A@@internal@Eigen@@$07$03$0A@$0A@$0A@@internal@Eigen@@U?$gemm_pack_rhs@M_JV?$TensorContractionSubMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$00$0A@@internal@Eigen@@$03$0A@$0A@$0A@@23@U?$gebp_kernel@MM_JV?$blas_data_mapper@M_J$0A@$0A@$00@internal@Eigen@@$07$03$0A@$0A@@23@V?$TensorContractionInputMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0A@$0A@@23@V?$TensorContractionInputMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$00$0A@@23@V?$blas_data_mapper@M_J$0A@$0A@$00@23@@?$TensorEvaluator@$$CBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$01$0A@_J@Eigen@@$$CBV34@@Eigen@@UThreadPoolDevice@2@@Eigen@@QEAA@AEBUThreadPoolDevice@2@HAEAV?$TensorContractionInputMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0A@$0A@@internal@2@AEAV?$TensorContractionInputMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$00$0A@@52@PEAM_J444444444444_N5@Z</DECORATED>
    <FUNCLINE>294</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;::Context&lt;Eigen::internal::gemm_pack_lhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,8,4,0,0,0&gt;,Eigen::internal::gemm_pack_rhs&lt;float,__int64,Eigen::internal::TensorContractionSubMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,1,0&gt;,4,0,0,0&gt;,Eigen::internal::gebp_kernel&lt;float,float,__int64,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt;,8,4,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,1,0&gt;,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt; &gt;::pad_</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContractionThreadPool.h</FILENAME>
      <LINE>713</LINE>
      <COLUMN>65</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;::checkGrain</FUNCTION>
    <DECORATED>?checkGrain@?$TensorEvaluator@$$CBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$01$0A@_J@Eigen@@$$CBV34@@Eigen@@UThreadPoolDevice@2@@Eigen@@QEBAH_J00000000H_N@Z</DECORATED>
    <FUNCLINE>691</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContractionThreadPool.h</FILENAME>
      <LINE>716</LINE>
      <COLUMN>65</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;::checkGrain</FUNCTION>
    <DECORATED>?checkGrain@?$TensorEvaluator@$$CBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$01$0A@_J@Eigen@@$$CBV34@@Eigen@@UThreadPoolDevice@2@@Eigen@@QEBAH_J00000000H_N@Z</DECORATED>
    <FUNCLINE>691</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContractionThreadPool.h</FILENAME>
      <LINE>713</LINE>
      <COLUMN>65</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,3,0,__int64&gt; const &gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;::checkGrain</FUNCTION>
    <DECORATED>?checkGrain@?$TensorEvaluator@$$CBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$01$0A@_J@3@$$CBV?$Tensor@M$02$0A@_J@3@@Eigen@@$$CBV?$Tensor@M$01$0A@_J@4@@Eigen@@UThreadPoolDevice@2@@Eigen@@QEBAH_J00000000H_N@Z</DECORATED>
    <FUNCLINE>691</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContractionThreadPool.h</FILENAME>
      <LINE>716</LINE>
      <COLUMN>65</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,3,0,__int64&gt; const &gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;::checkGrain</FUNCTION>
    <DECORATED>?checkGrain@?$TensorEvaluator@$$CBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$01$0A@_J@3@$$CBV?$Tensor@M$02$0A@_J@3@@Eigen@@$$CBV?$Tensor@M$01$0A@_J@4@@Eigen@@UThreadPoolDevice@2@@Eigen@@QEBAH_J00000000H_N@Z</DECORATED>
    <FUNCLINE>691</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContractionThreadPool.h</FILENAME>
      <LINE>713</LINE>
      <COLUMN>65</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;::checkGrain</FUNCTION>
    <DECORATED>?checkGrain@?$TensorEvaluator@$$CBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$01$0A@_J@3@$$CBV43@@Eigen@@$$CBV?$Tensor@M$01$0A@_J@4@@Eigen@@UThreadPoolDevice@2@@Eigen@@QEBAH_J00000000H_N@Z</DECORATED>
    <FUNCLINE>691</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContractionThreadPool.h</FILENAME>
      <LINE>716</LINE>
      <COLUMN>65</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;::checkGrain</FUNCTION>
    <DECORATED>?checkGrain@?$TensorEvaluator@$$CBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$01$0A@_J@3@$$CBV43@@Eigen@@$$CBV?$Tensor@M$01$0A@_J@4@@Eigen@@UThreadPoolDevice@2@@Eigen@@QEBAH_J00000000H_N@Z</DECORATED>
    <FUNCLINE>691</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContractionThreadPool.h</FILENAME>
      <LINE>713</LINE>
      <COLUMN>65</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;::checkGrain</FUNCTION>
    <DECORATED>?checkGrain@?$TensorEvaluator@$$CBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$00$0A@_J@Eigen@@$$CBV?$Tensor@M$01$0A@_J@4@@Eigen@@UThreadPoolDevice@2@@Eigen@@QEBAH_J00000000H_N@Z</DECORATED>
    <FUNCLINE>691</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContractionThreadPool.h</FILENAME>
      <LINE>716</LINE>
      <COLUMN>65</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '*' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '*' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;::checkGrain</FUNCTION>
    <DECORATED>?checkGrain@?$TensorEvaluator@$$CBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$00$0A@_J@Eigen@@$$CBV?$Tensor@M$01$0A@_J@4@@Eigen@@UThreadPoolDevice@2@@Eigen@@QEBAH_J00000000H_N@Z</DECORATED>
    <FUNCLINE>691</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContraction.h</FILENAME>
      <LINE>218</LINE>
      <COLUMN>4</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>Ill-defined for-loop:  initial condition does not satisfy test.  Loop body not executed.</DESCRIPTION>
    <FUNCTION>Eigen::TensorContractionEvaluatorBase&lt;Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::DefaultDevice&gt; &gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorContractionEvaluatorBase@U?$TensorEvaluator@$$CBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$01$0A@_J@Eigen@@$$CBV?$Tensor@M$00$0A@_J@4@@Eigen@@UDefaultDevice@2@@Eigen@@@Eigen@@QEAA@AEBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$01$0A@_J@Eigen@@$$CBV?$Tensor@M$00$0A@_J@4@@1@AEBUDefaultDevice@1@@Z</DECORATED>
    <FUNCLINE>152</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContraction.h</FILENAME>
      <LINE>249</LINE>
      <COLUMN>30</COLUMN>
    </SFA>
    <DEFECTCODE>28020</DEFECTCODE>
    <DESCRIPTION>The expression '0&lt;=_Param_(1)&amp;&amp;_Param_(1)&lt;=1-1' is not true at this call.</DESCRIPTION>
    <FUNCTION>Eigen::TensorContractionEvaluatorBase&lt;Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::DefaultDevice&gt; &gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorContractionEvaluatorBase@U?$TensorEvaluator@$$CBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$01$0A@_J@Eigen@@$$CBV?$Tensor@M$00$0A@_J@4@@Eigen@@UDefaultDevice@2@@Eigen@@@Eigen@@QEAA@AEBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$01$0A@_J@Eigen@@$$CBV?$Tensor@M$00$0A@_J@4@@1@AEBUDefaultDevice@1@@Z</DECORATED>
    <FUNCLINE>152</FUNCLINE>
    <PATH>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>159</LINE>
        <COLUMN>23</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>154</LINE>
        <COLUMN>16</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>156</LINE>
        <COLUMN>15</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>158</LINE>
        <COLUMN>16</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>159</LINE>
        <COLUMN>16</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>165</LINE>
        <COLUMN>2</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>166</LINE>
        <COLUMN>2</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>167</LINE>
        <COLUMN>2</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>168</LINE>
        <COLUMN>33</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>170</LINE>
        <COLUMN>15</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>170</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>171</LINE>
        <COLUMN>26</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>170</LINE>
        <COLUMN>0</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>170</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>171</LINE>
        <COLUMN>26</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>170</LINE>
        <COLUMN>0</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>170</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>173</LINE>
        <COLUMN>15</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>173</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>174</LINE>
        <COLUMN>27</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>173</LINE>
        <COLUMN>0</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>173</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>177</LINE>
        <COLUMN>15</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>177</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>178</LINE>
        <COLUMN>33</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>179</LINE>
        <COLUMN>34</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>177</LINE>
        <COLUMN>0</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>177</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>199</LINE>
        <COLUMN>13</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>199</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>200</LINE>
        <COLUMN>15</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>200</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>199</LINE>
        <COLUMN>0</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>199</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>210</LINE>
        <COLUMN>2</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>211</LINE>
        <COLUMN>19</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>212</LINE>
        <COLUMN>13</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>212</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>213</LINE>
        <COLUMN>23</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>212</LINE>
        <COLUMN>12</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>212</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>216</LINE>
        <COLUMN>2</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>217</LINE>
        <COLUMN>19</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>218</LINE>
        <COLUMN>13</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>218</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>222</LINE>
        <COLUMN>27</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>223</LINE>
        <COLUMN>27</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>224</LINE>
        <COLUMN>27</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>226</LINE>
        <COLUMN>13</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>227</LINE>
        <COLUMN>13</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>228</LINE>
        <COLUMN>13</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>234</LINE>
        <COLUMN>31</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>235</LINE>
        <COLUMN>8</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>236</LINE>
        <COLUMN>17</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>238</LINE>
        <COLUMN>13</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>238</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>240</LINE>
        <COLUMN>11</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>241</LINE>
        <COLUMN>15</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>241</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>242</LINE>
        <COLUMN>37</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>241</LINE>
        <COLUMN>0</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>241</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>247</LINE>
        <COLUMN>10</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>249</LINE>
        <COLUMN>30</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>250</LINE>
        <COLUMN>50</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>251</LINE>
        <COLUMN>20</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>254</LINE>
        <COLUMN>29</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>258</LINE>
        <COLUMN>19</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>260</LINE>
        <COLUMN>15</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>261</LINE>
        <COLUMN>22</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>238</LINE>
        <COLUMN>0</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>238</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>240</LINE>
        <COLUMN>11</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>241</LINE>
        <COLUMN>15</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>241</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>242</LINE>
        <COLUMN>37</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>241</LINE>
        <COLUMN>0</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>241</LINE>
        <COLUMN>1</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>247</LINE>
        <COLUMN>10</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>d:\opennn\eigen\unsupported\eigen\cxx11\src\tensor\</FILEPATH>
        <FILENAME>tensorcontraction.h</FILENAME>
        <LINE>249</LINE>
        <COLUMN>30</COLUMN>
      </SFA>
    </PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContraction.h</FILENAME>
      <LINE>152</LINE>
      <COLUMN>20</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'Eigen::TensorContractionEvaluatorBase&lt;Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::DefaultDevice&gt; &gt;::m_left_contracting_strides' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>Eigen::TensorContractionEvaluatorBase&lt;Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::DefaultDevice&gt; &gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorContractionEvaluatorBase@U?$TensorEvaluator@$$CBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$01$0A@_J@Eigen@@$$CBV?$Tensor@M$00$0A@_J@4@@Eigen@@UDefaultDevice@2@@Eigen@@@Eigen@@QEAA@AEBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$01$0A@_J@Eigen@@$$CBV?$Tensor@M$00$0A@_J@4@@1@AEBUDefaultDevice@1@@Z</DECORATED>
    <FUNCLINE>152</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>Eigen::TensorContractionEvaluatorBase&lt;Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::DefaultDevice&gt; &gt;::m_left_contracting_strides</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContraction.h</FILENAME>
      <LINE>152</LINE>
      <COLUMN>20</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'Eigen::TensorContractionEvaluatorBase&lt;Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::DefaultDevice&gt; &gt;::m_right_contracting_strides' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>Eigen::TensorContractionEvaluatorBase&lt;Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::DefaultDevice&gt; &gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorContractionEvaluatorBase@U?$TensorEvaluator@$$CBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$01$0A@_J@Eigen@@$$CBV?$Tensor@M$00$0A@_J@4@@Eigen@@UDefaultDevice@2@@Eigen@@@Eigen@@QEAA@AEBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$01$0A@_J@Eigen@@$$CBV?$Tensor@M$00$0A@_J@4@@1@AEBUDefaultDevice@1@@Z</DECORATED>
    <FUNCLINE>152</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>Eigen::TensorContractionEvaluatorBase&lt;Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::DefaultDevice&gt; &gt;::m_right_contracting_strides</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContraction.h</FILENAME>
      <LINE>152</LINE>
      <COLUMN>20</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'Eigen::TensorContractionEvaluatorBase&lt;Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::DefaultDevice&gt; &gt;::m_left_nocontract_strides' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>Eigen::TensorContractionEvaluatorBase&lt;Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::DefaultDevice&gt; &gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorContractionEvaluatorBase@U?$TensorEvaluator@$$CBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$01$0A@_J@Eigen@@$$CBV?$Tensor@M$00$0A@_J@4@@Eigen@@UDefaultDevice@2@@Eigen@@@Eigen@@QEAA@AEBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$01$0A@_J@Eigen@@$$CBV?$Tensor@M$00$0A@_J@4@@1@AEBUDefaultDevice@1@@Z</DECORATED>
    <FUNCLINE>152</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>Eigen::TensorContractionEvaluatorBase&lt;Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::DefaultDevice&gt; &gt;::m_left_nocontract_strides</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContraction.h</FILENAME>
      <LINE>152</LINE>
      <COLUMN>20</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'Eigen::TensorContractionEvaluatorBase&lt;Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::DefaultDevice&gt; &gt;::m_right_nocontract_strides' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>Eigen::TensorContractionEvaluatorBase&lt;Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::DefaultDevice&gt; &gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorContractionEvaluatorBase@U?$TensorEvaluator@$$CBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$01$0A@_J@Eigen@@$$CBV?$Tensor@M$00$0A@_J@4@@Eigen@@UDefaultDevice@2@@Eigen@@@Eigen@@QEAA@AEBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$01$0A@_J@Eigen@@$$CBV?$Tensor@M$00$0A@_J@4@@1@AEBUDefaultDevice@1@@Z</DECORATED>
    <FUNCLINE>152</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>Eigen::TensorContractionEvaluatorBase&lt;Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::DefaultDevice&gt; &gt;::m_right_nocontract_strides</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContraction.h</FILENAME>
      <LINE>184</LINE>
      <COLUMN>62</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorContractionEvaluatorBase&lt;Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::DefaultDevice&gt; &gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorContractionEvaluatorBase@U?$TensorEvaluator@$$CBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$01$0A@_J@Eigen@@$$CBV?$Tensor@M$00$0A@_J@4@@Eigen@@UDefaultDevice@2@@Eigen@@@Eigen@@QEAA@AEBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$01$0A@_J@Eigen@@$$CBV?$Tensor@M$00$0A@_J@4@@1@AEBUDefaultDevice@1@@Z</DECORATED>
    <FUNCLINE>152</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContraction.h</FILENAME>
      <LINE>184</LINE>
      <COLUMN>58</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorContractionEvaluatorBase&lt;Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::DefaultDevice&gt; &gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorContractionEvaluatorBase@U?$TensorEvaluator@$$CBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$01$0A@_J@Eigen@@$$CBV?$Tensor@M$00$0A@_J@4@@Eigen@@UDefaultDevice@2@@Eigen@@@Eigen@@QEAA@AEBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$01$0A@_J@Eigen@@$$CBV?$Tensor@M$00$0A@_J@4@@1@AEBUDefaultDevice@1@@Z</DECORATED>
    <FUNCLINE>152</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContraction.h</FILENAME>
      <LINE>187</LINE>
      <COLUMN>64</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorContractionEvaluatorBase&lt;Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::DefaultDevice&gt; &gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorContractionEvaluatorBase@U?$TensorEvaluator@$$CBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$01$0A@_J@Eigen@@$$CBV?$Tensor@M$00$0A@_J@4@@Eigen@@UDefaultDevice@2@@Eigen@@@Eigen@@QEAA@AEBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$01$0A@_J@Eigen@@$$CBV?$Tensor@M$00$0A@_J@4@@1@AEBUDefaultDevice@1@@Z</DECORATED>
    <FUNCLINE>152</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContraction.h</FILENAME>
      <LINE>187</LINE>
      <COLUMN>60</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorContractionEvaluatorBase&lt;Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::DefaultDevice&gt; &gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorContractionEvaluatorBase@U?$TensorEvaluator@$$CBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$01$0A@_J@Eigen@@$$CBV?$Tensor@M$00$0A@_J@4@@Eigen@@UDefaultDevice@2@@Eigen@@@Eigen@@QEAA@AEBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$01$0A@_J@Eigen@@$$CBV?$Tensor@M$00$0A@_J@4@@1@AEBUDefaultDevice@1@@Z</DECORATED>
    <FUNCLINE>152</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContraction.h</FILENAME>
      <LINE>192</LINE>
      <COLUMN>77</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorContractionEvaluatorBase&lt;Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::DefaultDevice&gt; &gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorContractionEvaluatorBase@U?$TensorEvaluator@$$CBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$01$0A@_J@Eigen@@$$CBV?$Tensor@M$00$0A@_J@4@@Eigen@@UDefaultDevice@2@@Eigen@@@Eigen@@QEAA@AEBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$01$0A@_J@Eigen@@$$CBV?$Tensor@M$00$0A@_J@4@@1@AEBUDefaultDevice@1@@Z</DECORATED>
    <FUNCLINE>152</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContraction.h</FILENAME>
      <LINE>193</LINE>
      <COLUMN>78</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorContractionEvaluatorBase&lt;Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::DefaultDevice&gt; &gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorContractionEvaluatorBase@U?$TensorEvaluator@$$CBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$01$0A@_J@Eigen@@$$CBV?$Tensor@M$00$0A@_J@4@@Eigen@@UDefaultDevice@2@@Eigen@@@Eigen@@QEAA@AEBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$01$0A@_J@Eigen@@$$CBV?$Tensor@M$00$0A@_J@4@@1@AEBUDefaultDevice@1@@Z</DECORATED>
    <FUNCLINE>152</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContraction.h</FILENAME>
      <LINE>213</LINE>
      <COLUMN>19</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorContractionEvaluatorBase&lt;Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::DefaultDevice&gt; &gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorContractionEvaluatorBase@U?$TensorEvaluator@$$CBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$01$0A@_J@Eigen@@$$CBV?$Tensor@M$00$0A@_J@4@@Eigen@@UDefaultDevice@2@@Eigen@@@Eigen@@QEAA@AEBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$01$0A@_J@Eigen@@$$CBV?$Tensor@M$00$0A@_J@4@@1@AEBUDefaultDevice@1@@Z</DECORATED>
    <FUNCLINE>152</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContraction.h</FILENAME>
      <LINE>219</LINE>
      <COLUMN>19</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorContractionEvaluatorBase&lt;Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::DefaultDevice&gt; &gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorContractionEvaluatorBase@U?$TensorEvaluator@$$CBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$01$0A@_J@Eigen@@$$CBV?$Tensor@M$00$0A@_J@4@@Eigen@@UDefaultDevice@2@@Eigen@@@Eigen@@QEAA@AEBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$01$0A@_J@Eigen@@$$CBV?$Tensor@M$00$0A@_J@4@@1@AEBUDefaultDevice@1@@Z</DECORATED>
    <FUNCLINE>152</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContraction.h</FILENAME>
      <LINE>254</LINE>
      <COLUMN>26</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorContractionEvaluatorBase&lt;Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::DefaultDevice&gt; &gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorContractionEvaluatorBase@U?$TensorEvaluator@$$CBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$01$0A@_J@Eigen@@$$CBV?$Tensor@M$00$0A@_J@4@@Eigen@@UDefaultDevice@2@@Eigen@@@Eigen@@QEAA@AEBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$01$0A@_J@Eigen@@$$CBV?$Tensor@M$00$0A@_J@4@@1@AEBUDefaultDevice@1@@Z</DECORATED>
    <FUNCLINE>152</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContraction.h</FILENAME>
      <LINE>255</LINE>
      <COLUMN>36</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorContractionEvaluatorBase&lt;Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::DefaultDevice&gt; &gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorContractionEvaluatorBase@U?$TensorEvaluator@$$CBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$01$0A@_J@Eigen@@$$CBV?$Tensor@M$00$0A@_J@4@@Eigen@@UDefaultDevice@2@@Eigen@@@Eigen@@QEAA@AEBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$01$0A@_J@Eigen@@$$CBV?$Tensor@M$00$0A@_J@4@@1@AEBUDefaultDevice@1@@Z</DECORATED>
    <FUNCLINE>152</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContraction.h</FILENAME>
      <LINE>277</LINE>
      <COLUMN>26</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorContractionEvaluatorBase&lt;Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::DefaultDevice&gt; &gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorContractionEvaluatorBase@U?$TensorEvaluator@$$CBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$01$0A@_J@Eigen@@$$CBV?$Tensor@M$00$0A@_J@4@@Eigen@@UDefaultDevice@2@@Eigen@@@Eigen@@QEAA@AEBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$01$0A@_J@Eigen@@$$CBV?$Tensor@M$00$0A@_J@4@@1@AEBUDefaultDevice@1@@Z</DECORATED>
    <FUNCLINE>152</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContraction.h</FILENAME>
      <LINE>278</LINE>
      <COLUMN>36</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorContractionEvaluatorBase&lt;Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::DefaultDevice&gt; &gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorContractionEvaluatorBase@U?$TensorEvaluator@$$CBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$01$0A@_J@Eigen@@$$CBV?$Tensor@M$00$0A@_J@4@@Eigen@@UDefaultDevice@2@@Eigen@@@Eigen@@QEAA@AEBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$01$0A@_J@Eigen@@$$CBV?$Tensor@M$00$0A@_J@4@@1@AEBUDefaultDevice@1@@Z</DECORATED>
    <FUNCLINE>152</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContraction.h</FILENAME>
      <LINE>305</LINE>
      <COLUMN>21</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorContractionEvaluatorBase&lt;Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::DefaultDevice&gt; &gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorContractionEvaluatorBase@U?$TensorEvaluator@$$CBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$01$0A@_J@Eigen@@$$CBV?$Tensor@M$00$0A@_J@4@@Eigen@@UDefaultDevice@2@@Eigen@@@Eigen@@QEAA@AEBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$01$0A@_J@Eigen@@$$CBV?$Tensor@M$00$0A@_J@4@@1@AEBUDefaultDevice@1@@Z</DECORATED>
    <FUNCLINE>152</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContraction.h</FILENAME>
      <LINE>312</LINE>
      <COLUMN>44</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetic overflow: Using operator '-' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '-' to avoid overflow (io.2).</DESCRIPTION>
    <FUNCTION>Eigen::TensorContractionEvaluatorBase&lt;Eigen::TensorEvaluator&lt;Eigen::TensorContractionOp&lt;std::array&lt;Eigen::IndexPair&lt;__int64&gt;,1&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,1,0,__int64&gt; const &gt; const ,Eigen::DefaultDevice&gt; &gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$TensorContractionEvaluatorBase@U?$TensorEvaluator@$$CBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$01$0A@_J@Eigen@@$$CBV?$Tensor@M$00$0A@_J@4@@Eigen@@UDefaultDevice@2@@Eigen@@@Eigen@@QEAA@AEBV?$TensorContractionOp@$$CBV?$array@U?$IndexPair@_J@Eigen@@$00@std@@$$CBV?$Tensor@M$01$0A@_J@Eigen@@$$CBV?$Tensor@M$00$0A@_J@4@@1@AEBUDefaultDevice@1@@Z</DECORATED>
    <FUNCLINE>152</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\Eigen\src\Core\products\</FILEPATH>
      <FILENAME>GeneralBlockPanelKernel.h</FILENAME>
      <LINE>928</LINE>
      <COLUMN>6</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>Ill-defined for-loop:  initial condition does not satisfy test.  Loop body not executed.</DESCRIPTION>
    <FUNCTION>Eigen::internal::gebp_kernel&lt;float,float,__int64,Eigen::internal::blas_data_mapper&lt;float,__int64,0,0,1&gt;,8,4,0,0&gt;::()</FUNCTION>
    <DECORATED>??R?$gebp_kernel@MM_JV?$blas_data_mapper@M_J$0A@$0A@$00@internal@Eigen@@$07$03$0A@$0A@@internal@Eigen@@QEAAXAEBV?$blas_data_mapper@M_J$0A@$0A@$00@12@PEBM1_J22M2222@Z</DECORATED>
    <FUNCLINE>894</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContractionMapper.h</FILENAME>
      <LINE>119</LINE>
      <COLUMN>4</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>Ill-defined for-loop:  initial condition does not satisfy test.  Loop body not executed.</DESCRIPTION>
    <FUNCTION>Eigen::internal::SimpleTensorContractionMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,0&gt;,std::array&lt;__int64,1&gt;,4,0,0&gt;::computeIndex</FUNCTION>
    <DECORATED>?computeIndex@?$SimpleTensorContractionMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$00$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$0A@@std@@V?$array@_J$00@4@$03$0A@$0A@@internal@Eigen@@QEBA_J_J0@Z</DECORATED>
    <FUNCLINE>114</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContractionMapper.h</FILENAME>
      <LINE>135</LINE>
      <COLUMN>6</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>Ill-defined for-loop:  initial condition does not satisfy test.  Loop body not executed.</DESCRIPTION>
    <FUNCTION>Eigen::internal::SimpleTensorContractionMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,0&gt;,std::array&lt;__int64,1&gt;,4,0,0&gt;::computeIndex</FUNCTION>
    <DECORATED>?computeIndex@?$SimpleTensorContractionMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$00$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$0A@@std@@V?$array@_J$00@4@$03$0A@$0A@@internal@Eigen@@QEBA_J_J0@Z</DECORATED>
    <FUNCLINE>114</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContractionMapper.h</FILENAME>
      <LINE>119</LINE>
      <COLUMN>4</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>Ill-defined for-loop:  initial condition does not satisfy test.  Loop body not executed.</DESCRIPTION>
    <FUNCTION>Eigen::internal::SimpleTensorContractionMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,0&gt;,std::array&lt;__int64,1&gt;,4,1,0&gt;::computeIndex</FUNCTION>
    <DECORATED>?computeIndex@?$SimpleTensorContractionMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$00$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$0A@@std@@V?$array@_J$00@4@$03$00$0A@@internal@Eigen@@QEBA_J_J0@Z</DECORATED>
    <FUNCLINE>114</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContractionMapper.h</FILENAME>
      <LINE>135</LINE>
      <COLUMN>6</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>Ill-defined for-loop:  initial condition does not satisfy test.  Loop body not executed.</DESCRIPTION>
    <FUNCTION>Eigen::internal::SimpleTensorContractionMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,0&gt;,std::array&lt;__int64,1&gt;,4,1,0&gt;::computeIndex</FUNCTION>
    <DECORATED>?computeIndex@?$SimpleTensorContractionMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$00$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$0A@@std@@V?$array@_J$00@4@$03$00$0A@@internal@Eigen@@QEBA_J_J0@Z</DECORATED>
    <FUNCLINE>114</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContractionMapper.h</FILENAME>
      <LINE>119</LINE>
      <COLUMN>4</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>Ill-defined for-loop:  initial condition does not satisfy test.  Loop body not executed.</DESCRIPTION>
    <FUNCTION>Eigen::internal::SimpleTensorContractionMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0&gt;::computeIndex</FUNCTION>
    <DECORATED>?computeIndex@?$SimpleTensorContractionMapper@M_J$00U?$TensorEvaluator@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$01$0A@_J@3@$$CBV43@@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0A@@internal@Eigen@@QEBA_J_J0@Z</DECORATED>
    <FUNCLINE>114</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContractionMapper.h</FILENAME>
      <LINE>135</LINE>
      <COLUMN>6</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>Ill-defined for-loop:  initial condition does not satisfy test.  Loop body not executed.</DESCRIPTION>
    <FUNCTION>Eigen::internal::SimpleTensorContractionMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0&gt;::computeIndex</FUNCTION>
    <DECORATED>?computeIndex@?$SimpleTensorContractionMapper@M_J$00U?$TensorEvaluator@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$01$0A@_J@3@$$CBV43@@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0A@@internal@Eigen@@QEBA_J_J0@Z</DECORATED>
    <FUNCLINE>114</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContractionMapper.h</FILENAME>
      <LINE>119</LINE>
      <COLUMN>4</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>Ill-defined for-loop:  initial condition does not satisfy test.  Loop body not executed.</DESCRIPTION>
    <FUNCTION>Eigen::internal::SimpleTensorContractionMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0&gt;::computeIndex</FUNCTION>
    <DECORATED>?computeIndex@?$SimpleTensorContractionMapper@M_J$00U?$TensorEvaluator@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$01$0A@_J@3@$$CBV43@@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0A@@internal@Eigen@@QEBA_J_J0@Z</DECORATED>
    <FUNCLINE>114</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContractionMapper.h</FILENAME>
      <LINE>135</LINE>
      <COLUMN>6</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>Ill-defined for-loop:  initial condition does not satisfy test.  Loop body not executed.</DESCRIPTION>
    <FUNCTION>Eigen::internal::SimpleTensorContractionMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0&gt;::computeIndex</FUNCTION>
    <DECORATED>?computeIndex@?$SimpleTensorContractionMapper@M_J$00U?$TensorEvaluator@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$01$0A@_J@3@$$CBV43@@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0A@@internal@Eigen@@QEBA_J_J0@Z</DECORATED>
    <FUNCLINE>114</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContractionMapper.h</FILENAME>
      <LINE>119</LINE>
      <COLUMN>4</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>Ill-defined for-loop:  initial condition does not satisfy test.  Loop body not executed.</DESCRIPTION>
    <FUNCTION>Eigen::internal::SimpleTensorContractionMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,3,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0&gt;::computeIndex</FUNCTION>
    <DECORATED>?computeIndex@?$SimpleTensorContractionMapper@M_J$00U?$TensorEvaluator@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$01$0A@_J@3@$$CBV?$Tensor@M$02$0A@_J@3@@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0A@@internal@Eigen@@QEBA_J_J0@Z</DECORATED>
    <FUNCLINE>114</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContractionMapper.h</FILENAME>
      <LINE>135</LINE>
      <COLUMN>6</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>Ill-defined for-loop:  initial condition does not satisfy test.  Loop body not executed.</DESCRIPTION>
    <FUNCTION>Eigen::internal::SimpleTensorContractionMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,3,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0&gt;::computeIndex</FUNCTION>
    <DECORATED>?computeIndex@?$SimpleTensorContractionMapper@M_J$00U?$TensorEvaluator@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$01$0A@_J@3@$$CBV?$Tensor@M$02$0A@_J@3@@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0A@@internal@Eigen@@QEBA_J_J0@Z</DECORATED>
    <FUNCLINE>114</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContractionMapper.h</FILENAME>
      <LINE>119</LINE>
      <COLUMN>4</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>Ill-defined for-loop:  initial condition does not satisfy test.  Loop body not executed.</DESCRIPTION>
    <FUNCTION>Eigen::internal::SimpleTensorContractionMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,3,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0&gt;::computeIndex</FUNCTION>
    <DECORATED>?computeIndex@?$SimpleTensorContractionMapper@M_J$00U?$TensorEvaluator@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$01$0A@_J@3@$$CBV?$Tensor@M$02$0A@_J@3@@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0A@@internal@Eigen@@QEBA_J_J0@Z</DECORATED>
    <FUNCLINE>114</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContractionMapper.h</FILENAME>
      <LINE>135</LINE>
      <COLUMN>6</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>Ill-defined for-loop:  initial condition does not satisfy test.  Loop body not executed.</DESCRIPTION>
    <FUNCTION>Eigen::internal::SimpleTensorContractionMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,3,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0&gt;::computeIndex</FUNCTION>
    <DECORATED>?computeIndex@?$SimpleTensorContractionMapper@M_J$00U?$TensorEvaluator@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$01$0A@_J@3@$$CBV?$Tensor@M$02$0A@_J@3@@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0A@@internal@Eigen@@QEBA_J_J0@Z</DECORATED>
    <FUNCLINE>114</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContractionMapper.h</FILENAME>
      <LINE>119</LINE>
      <COLUMN>4</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>Ill-defined for-loop:  initial condition does not satisfy test.  Loop body not executed.</DESCRIPTION>
    <FUNCTION>Eigen::internal::SimpleTensorContractionMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0&gt;::computeIndex</FUNCTION>
    <DECORATED>?computeIndex@?$SimpleTensorContractionMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0A@@internal@Eigen@@QEBA_J_J0@Z</DECORATED>
    <FUNCLINE>114</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContractionMapper.h</FILENAME>
      <LINE>135</LINE>
      <COLUMN>6</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>Ill-defined for-loop:  initial condition does not satisfy test.  Loop body not executed.</DESCRIPTION>
    <FUNCTION>Eigen::internal::SimpleTensorContractionMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0&gt;::computeIndex</FUNCTION>
    <DECORATED>?computeIndex@?$SimpleTensorContractionMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0A@@internal@Eigen@@QEBA_J_J0@Z</DECORATED>
    <FUNCLINE>114</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContractionMapper.h</FILENAME>
      <LINE>119</LINE>
      <COLUMN>4</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>Ill-defined for-loop:  initial condition does not satisfy test.  Loop body not executed.</DESCRIPTION>
    <FUNCTION>Eigen::internal::SimpleTensorContractionMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0&gt;::computeIndex</FUNCTION>
    <DECORATED>?computeIndex@?$SimpleTensorContractionMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0A@@internal@Eigen@@QEBA_J_J0@Z</DECORATED>
    <FUNCLINE>114</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContractionMapper.h</FILENAME>
      <LINE>135</LINE>
      <COLUMN>6</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>Ill-defined for-loop:  initial condition does not satisfy test.  Loop body not executed.</DESCRIPTION>
    <FUNCTION>Eigen::internal::SimpleTensorContractionMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0&gt;::computeIndex</FUNCTION>
    <DECORATED>?computeIndex@?$SimpleTensorContractionMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0A@@internal@Eigen@@QEBA_J_J0@Z</DECORATED>
    <FUNCLINE>114</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContractionMapper.h</FILENAME>
      <LINE>119</LINE>
      <COLUMN>4</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>Ill-defined for-loop:  initial condition does not satisfy test.  Loop body not executed.</DESCRIPTION>
    <FUNCTION>Eigen::internal::SimpleTensorContractionMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0&gt;::computeIndex</FUNCTION>
    <DECORATED>?computeIndex@?$SimpleTensorContractionMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0A@@internal@Eigen@@QEBA_J_J0@Z</DECORATED>
    <FUNCLINE>114</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContractionMapper.h</FILENAME>
      <LINE>135</LINE>
      <COLUMN>6</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>Ill-defined for-loop:  initial condition does not satisfy test.  Loop body not executed.</DESCRIPTION>
    <FUNCTION>Eigen::internal::SimpleTensorContractionMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0&gt;::computeIndex</FUNCTION>
    <DECORATED>?computeIndex@?$SimpleTensorContractionMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0A@@internal@Eigen@@QEBA_J_J0@Z</DECORATED>
    <FUNCLINE>114</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContractionMapper.h</FILENAME>
      <LINE>119</LINE>
      <COLUMN>4</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>Ill-defined for-loop:  initial condition does not satisfy test.  Loop body not executed.</DESCRIPTION>
    <FUNCTION>Eigen::internal::SimpleTensorContractionMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0&gt;::computeIndex</FUNCTION>
    <DECORATED>?computeIndex@?$SimpleTensorContractionMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0A@@internal@Eigen@@QEBA_J_J0@Z</DECORATED>
    <FUNCLINE>114</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContractionMapper.h</FILENAME>
      <LINE>135</LINE>
      <COLUMN>6</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>Ill-defined for-loop:  initial condition does not satisfy test.  Loop body not executed.</DESCRIPTION>
    <FUNCTION>Eigen::internal::SimpleTensorContractionMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0&gt;::computeIndex</FUNCTION>
    <DECORATED>?computeIndex@?$SimpleTensorContractionMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0A@@internal@Eigen@@QEBA_J_J0@Z</DECORATED>
    <FUNCLINE>114</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\Eigen\src\Core\products\</FILEPATH>
      <FILENAME>GeneralMatrixVector.h</FILENAME>
      <LINE>134</LINE>
      <COLUMN>38</COLUMN>
    </SFA>
    <DEFECTCODE>26812</DEFECTCODE>
    <DESCRIPTION>The enum type 'Eigen::internal::general_matrix_vector_product&lt;__int64,float,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::DefaultDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,16&gt;,0,0,float,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::DefaultDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,1,16&gt;,0,0&gt;::run::__l4::&lt;unnamed-enum-AllAligned&gt;' is unscoped. Prefer 'enum class' over 'enum' (Enum.3).</DESCRIPTION>
    <FUNCTION>Eigen::internal::general_matrix_vector_product&lt;__int64,float,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::DefaultDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,16&gt;,0,0,float,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::DefaultDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,1,16&gt;,0,0&gt;::run</FUNCTION>
    <DECORATED>?run@?$general_matrix_vector_product@_JMV?$TensorContractionInputMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UDefaultDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0A@$0BA@@internal@Eigen@@$0A@$0A@MV?$TensorContractionInputMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UDefaultDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$00$0BA@@23@$0A@$0A@@internal@Eigen@@SAX_J0AEBV?$TensorContractionInputMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UDefaultDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0A@$0BA@@23@AEBV?$TensorContractionInputMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UDefaultDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$00$0BA@@23@PEAM0M@Z</DECORATED>
    <FUNCLINE>88</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\Eigen\src\Core\products\</FILEPATH>
      <FILENAME>GeneralMatrixVector.h</FILENAME>
      <LINE>134</LINE>
      <COLUMN>38</COLUMN>
    </SFA>
    <DEFECTCODE>26812</DEFECTCODE>
    <DESCRIPTION>The enum type 'Eigen::internal::general_matrix_vector_product&lt;__int64,float,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::DefaultDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,16&gt;,0,0,float,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::DefaultDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,16&gt;,0,0&gt;::run::__l4::&lt;unnamed-enum-AllAligned&gt;' is unscoped. Prefer 'enum class' over 'enum' (Enum.3).</DESCRIPTION>
    <FUNCTION>Eigen::internal::general_matrix_vector_product&lt;__int64,float,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::DefaultDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,16&gt;,0,0,float,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::DefaultDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,16&gt;,0,0&gt;::run</FUNCTION>
    <DECORATED>?run@?$general_matrix_vector_product@_JMV?$TensorContractionInputMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UDefaultDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0A@$0BA@@internal@Eigen@@$0A@$0A@MV?$TensorContractionInputMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UDefaultDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0A@$0BA@@23@$0A@$0A@@internal@Eigen@@SAX_J0AEBV?$TensorContractionInputMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UDefaultDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0A@$0BA@@23@AEBV?$TensorContractionInputMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UDefaultDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0A@$0BA@@23@PEAM0M@Z</DECORATED>
    <FUNCLINE>88</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\Eigen\src\Core\products\</FILEPATH>
      <FILENAME>GeneralMatrixVector.h</FILENAME>
      <LINE>134</LINE>
      <COLUMN>38</COLUMN>
    </SFA>
    <DEFECTCODE>26812</DEFECTCODE>
    <DESCRIPTION>The enum type 'Eigen::internal::general_matrix_vector_product&lt;__int64,float,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::DefaultDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,16&gt;,0,0,float,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::DefaultDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,1,16&gt;,0,0&gt;::run::__l4::&lt;unnamed-enum-AllAligned&gt;' is unscoped. Prefer 'enum class' over 'enum' (Enum.3).</DESCRIPTION>
    <FUNCTION>Eigen::internal::general_matrix_vector_product&lt;__int64,float,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::DefaultDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,16&gt;,0,0,float,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::DefaultDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,1,16&gt;,0,0&gt;::run</FUNCTION>
    <DECORATED>?run@?$general_matrix_vector_product@_JMV?$TensorContractionInputMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UDefaultDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0A@$0BA@@internal@Eigen@@$0A@$0A@MV?$TensorContractionInputMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UDefaultDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$00$0BA@@23@$0A@$0A@@internal@Eigen@@SAX_J0AEBV?$TensorContractionInputMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UDefaultDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0A@$0BA@@23@AEBV?$TensorContractionInputMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UDefaultDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$00$0BA@@23@PEAM0M@Z</DECORATED>
    <FUNCLINE>88</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\Eigen\src\Core\products\</FILEPATH>
      <FILENAME>GeneralMatrixVector.h</FILENAME>
      <LINE>134</LINE>
      <COLUMN>38</COLUMN>
    </SFA>
    <DEFECTCODE>26812</DEFECTCODE>
    <DESCRIPTION>The enum type 'Eigen::internal::general_matrix_vector_product&lt;__int64,float,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::DefaultDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,16&gt;,0,0,float,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::DefaultDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,16&gt;,0,0&gt;::run::__l4::&lt;unnamed-enum-AllAligned&gt;' is unscoped. Prefer 'enum class' over 'enum' (Enum.3).</DESCRIPTION>
    <FUNCTION>Eigen::internal::general_matrix_vector_product&lt;__int64,float,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::DefaultDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,16&gt;,0,0,float,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::DefaultDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,16&gt;,0,0&gt;::run</FUNCTION>
    <DECORATED>?run@?$general_matrix_vector_product@_JMV?$TensorContractionInputMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UDefaultDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0A@$0BA@@internal@Eigen@@$0A@$0A@MV?$TensorContractionInputMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UDefaultDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0A@$0BA@@23@$0A@$0A@@internal@Eigen@@SAX_J0AEBV?$TensorContractionInputMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UDefaultDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0A@$0BA@@23@AEBV?$TensorContractionInputMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UDefaultDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0A@$0BA@@23@PEAM0M@Z</DECORATED>
    <FUNCLINE>88</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\Eigen\src\Core\products\</FILEPATH>
      <FILENAME>GeneralMatrixVector.h</FILENAME>
      <LINE>134</LINE>
      <COLUMN>38</COLUMN>
    </SFA>
    <DEFECTCODE>26812</DEFECTCODE>
    <DESCRIPTION>The enum type 'Eigen::internal::general_matrix_vector_product&lt;__int64,float,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::DefaultDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,16&gt;,0,0,float,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::DefaultDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,1,16&gt;,0,0&gt;::run::__l4::&lt;unnamed-enum-AllAligned&gt;' is unscoped. Prefer 'enum class' over 'enum' (Enum.3).</DESCRIPTION>
    <FUNCTION>Eigen::internal::general_matrix_vector_product&lt;__int64,float,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::DefaultDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,16&gt;,0,0,float,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::DefaultDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,1,16&gt;,0,0&gt;::run</FUNCTION>
    <DECORATED>?run@?$general_matrix_vector_product@_JMV?$TensorContractionInputMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UDefaultDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0A@$0BA@@internal@Eigen@@$0A@$0A@MV?$TensorContractionInputMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UDefaultDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$00$0BA@@23@$0A@$0A@@internal@Eigen@@SAX_J0AEBV?$TensorContractionInputMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UDefaultDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0A@$0BA@@23@AEBV?$TensorContractionInputMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UDefaultDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$00$0BA@@23@PEAM0M@Z</DECORATED>
    <FUNCLINE>88</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\Eigen\src\Core\products\</FILEPATH>
      <FILENAME>GeneralMatrixVector.h</FILENAME>
      <LINE>134</LINE>
      <COLUMN>38</COLUMN>
    </SFA>
    <DEFECTCODE>26812</DEFECTCODE>
    <DESCRIPTION>The enum type 'Eigen::internal::general_matrix_vector_product&lt;__int64,float,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::DefaultDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,16&gt;,0,0,float,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::DefaultDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,16&gt;,0,0&gt;::run::__l4::&lt;unnamed-enum-AllAligned&gt;' is unscoped. Prefer 'enum class' over 'enum' (Enum.3).</DESCRIPTION>
    <FUNCTION>Eigen::internal::general_matrix_vector_product&lt;__int64,float,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::DefaultDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,16&gt;,0,0,float,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::DefaultDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,16&gt;,0,0&gt;::run</FUNCTION>
    <DECORATED>?run@?$general_matrix_vector_product@_JMV?$TensorContractionInputMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UDefaultDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0A@$0BA@@internal@Eigen@@$0A@$0A@MV?$TensorContractionInputMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UDefaultDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0A@$0BA@@23@$0A@$0A@@internal@Eigen@@SAX_J0AEBV?$TensorContractionInputMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UDefaultDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0A@$0BA@@23@AEBV?$TensorContractionInputMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UDefaultDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0A@$0BA@@23@PEAM0M@Z</DECORATED>
    <FUNCLINE>88</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\Eigen\src\Core\products\</FILEPATH>
      <FILENAME>GeneralMatrixVector.h</FILENAME>
      <LINE>134</LINE>
      <COLUMN>38</COLUMN>
    </SFA>
    <DEFECTCODE>26812</DEFECTCODE>
    <DESCRIPTION>The enum type 'Eigen::internal::general_matrix_vector_product&lt;__int64,float,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::DefaultDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,16&gt;,0,0,float,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::DefaultDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,1,16&gt;,0,0&gt;::run::__l4::&lt;unnamed-enum-AllAligned&gt;' is unscoped. Prefer 'enum class' over 'enum' (Enum.3).</DESCRIPTION>
    <FUNCTION>Eigen::internal::general_matrix_vector_product&lt;__int64,float,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::DefaultDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,16&gt;,0,0,float,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::DefaultDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,1,16&gt;,0,0&gt;::run</FUNCTION>
    <DECORATED>?run@?$general_matrix_vector_product@_JMV?$TensorContractionInputMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UDefaultDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0A@$0BA@@internal@Eigen@@$0A@$0A@MV?$TensorContractionInputMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UDefaultDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$00$0BA@@23@$0A@$0A@@internal@Eigen@@SAX_J0AEBV?$TensorContractionInputMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UDefaultDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0A@$0BA@@23@AEBV?$TensorContractionInputMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UDefaultDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$00$0BA@@23@PEAM0M@Z</DECORATED>
    <FUNCLINE>88</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\Eigen\src\Core\products\</FILEPATH>
      <FILENAME>GeneralMatrixVector.h</FILENAME>
      <LINE>134</LINE>
      <COLUMN>38</COLUMN>
    </SFA>
    <DEFECTCODE>26812</DEFECTCODE>
    <DESCRIPTION>The enum type 'Eigen::internal::general_matrix_vector_product&lt;__int64,float,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::DefaultDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,16&gt;,0,0,float,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::DefaultDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,16&gt;,0,0&gt;::run::__l4::&lt;unnamed-enum-AllAligned&gt;' is unscoped. Prefer 'enum class' over 'enum' (Enum.3).</DESCRIPTION>
    <FUNCTION>Eigen::internal::general_matrix_vector_product&lt;__int64,float,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::DefaultDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,16&gt;,0,0,float,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::DefaultDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,16&gt;,0,0&gt;::run</FUNCTION>
    <DECORATED>?run@?$general_matrix_vector_product@_JMV?$TensorContractionInputMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UDefaultDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0A@$0BA@@internal@Eigen@@$0A@$0A@MV?$TensorContractionInputMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UDefaultDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0A@$0BA@@23@$0A@$0A@@internal@Eigen@@SAX_J0AEBV?$TensorContractionInputMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UDefaultDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0A@$0BA@@23@AEBV?$TensorContractionInputMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UDefaultDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0A@$0BA@@23@PEAM0M@Z</DECORATED>
    <FUNCLINE>88</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\Eigen\src\Core\products\</FILEPATH>
      <FILENAME>GeneralMatrixVector.h</FILENAME>
      <LINE>134</LINE>
      <COLUMN>38</COLUMN>
    </SFA>
    <DEFECTCODE>26812</DEFECTCODE>
    <DESCRIPTION>The enum type 'Eigen::internal::general_matrix_vector_product&lt;__int64,float,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,16&gt;,0,0,float,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,1,16&gt;,0,0&gt;::run::__l4::&lt;unnamed-enum-AllAligned&gt;' is unscoped. Prefer 'enum class' over 'enum' (Enum.3).</DESCRIPTION>
    <FUNCTION>Eigen::internal::general_matrix_vector_product&lt;__int64,float,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,16&gt;,0,0,float,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,1,16&gt;,0,0&gt;::run</FUNCTION>
    <DECORATED>?run@?$general_matrix_vector_product@_JMV?$TensorContractionInputMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0A@$0BA@@internal@Eigen@@$0A@$0A@MV?$TensorContractionInputMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$00$0BA@@23@$0A@$0A@@internal@Eigen@@SAX_J0AEBV?$TensorContractionInputMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0A@$0BA@@23@AEBV?$TensorContractionInputMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$00$0BA@@23@PEAM0M@Z</DECORATED>
    <FUNCLINE>88</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\Eigen\src\Core\products\</FILEPATH>
      <FILENAME>GeneralMatrixVector.h</FILENAME>
      <LINE>134</LINE>
      <COLUMN>38</COLUMN>
    </SFA>
    <DEFECTCODE>26812</DEFECTCODE>
    <DESCRIPTION>The enum type 'Eigen::internal::general_matrix_vector_product&lt;__int64,float,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,16&gt;,0,0,float,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,16&gt;,0,0&gt;::run::__l4::&lt;unnamed-enum-AllAligned&gt;' is unscoped. Prefer 'enum class' over 'enum' (Enum.3).</DESCRIPTION>
    <FUNCTION>Eigen::internal::general_matrix_vector_product&lt;__int64,float,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,16&gt;,0,0,float,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,16&gt;,0,0&gt;::run</FUNCTION>
    <DECORATED>?run@?$general_matrix_vector_product@_JMV?$TensorContractionInputMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0A@$0BA@@internal@Eigen@@$0A@$0A@MV?$TensorContractionInputMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0A@$0BA@@23@$0A@$0A@@internal@Eigen@@SAX_J0AEBV?$TensorContractionInputMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0A@$0BA@@23@AEBV?$TensorContractionInputMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0A@$0BA@@23@PEAM0M@Z</DECORATED>
    <FUNCLINE>88</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\Eigen\src\Core\products\</FILEPATH>
      <FILENAME>GeneralMatrixVector.h</FILENAME>
      <LINE>134</LINE>
      <COLUMN>38</COLUMN>
    </SFA>
    <DEFECTCODE>26812</DEFECTCODE>
    <DESCRIPTION>The enum type 'Eigen::internal::general_matrix_vector_product&lt;__int64,float,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,16&gt;,0,0,float,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,1,16&gt;,0,0&gt;::run::__l4::&lt;unnamed-enum-AllAligned&gt;' is unscoped. Prefer 'enum class' over 'enum' (Enum.3).</DESCRIPTION>
    <FUNCTION>Eigen::internal::general_matrix_vector_product&lt;__int64,float,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,16&gt;,0,0,float,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,1,16&gt;,0,0&gt;::run</FUNCTION>
    <DECORATED>?run@?$general_matrix_vector_product@_JMV?$TensorContractionInputMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0A@$0BA@@internal@Eigen@@$0A@$0A@MV?$TensorContractionInputMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$00$0BA@@23@$0A@$0A@@internal@Eigen@@SAX_J0AEBV?$TensorContractionInputMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0A@$0BA@@23@AEBV?$TensorContractionInputMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$00$0BA@@23@PEAM0M@Z</DECORATED>
    <FUNCLINE>88</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\Eigen\src\Core\products\</FILEPATH>
      <FILENAME>GeneralMatrixVector.h</FILENAME>
      <LINE>134</LINE>
      <COLUMN>38</COLUMN>
    </SFA>
    <DEFECTCODE>26812</DEFECTCODE>
    <DESCRIPTION>The enum type 'Eigen::internal::general_matrix_vector_product&lt;__int64,float,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,16&gt;,0,0,float,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,16&gt;,0,0&gt;::run::__l4::&lt;unnamed-enum-AllAligned&gt;' is unscoped. Prefer 'enum class' over 'enum' (Enum.3).</DESCRIPTION>
    <FUNCTION>Eigen::internal::general_matrix_vector_product&lt;__int64,float,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,16&gt;,0,0,float,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,16&gt;,0,0&gt;::run</FUNCTION>
    <DECORATED>?run@?$general_matrix_vector_product@_JMV?$TensorContractionInputMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0A@$0BA@@internal@Eigen@@$0A@$0A@MV?$TensorContractionInputMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0A@$0BA@@23@$0A@$0A@@internal@Eigen@@SAX_J0AEBV?$TensorContractionInputMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0A@$0BA@@23@AEBV?$TensorContractionInputMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0A@$0BA@@23@PEAM0M@Z</DECORATED>
    <FUNCLINE>88</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\Eigen\src\Core\products\</FILEPATH>
      <FILENAME>GeneralMatrixVector.h</FILENAME>
      <LINE>134</LINE>
      <COLUMN>38</COLUMN>
    </SFA>
    <DEFECTCODE>26812</DEFECTCODE>
    <DESCRIPTION>The enum type 'Eigen::internal::general_matrix_vector_product&lt;__int64,float,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,16&gt;,0,0,float,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,1,16&gt;,0,0&gt;::run::__l4::&lt;unnamed-enum-AllAligned&gt;' is unscoped. Prefer 'enum class' over 'enum' (Enum.3).</DESCRIPTION>
    <FUNCTION>Eigen::internal::general_matrix_vector_product&lt;__int64,float,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,16&gt;,0,0,float,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,1,16&gt;,0,0&gt;::run</FUNCTION>
    <DECORATED>?run@?$general_matrix_vector_product@_JMV?$TensorContractionInputMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0A@$0BA@@internal@Eigen@@$0A@$0A@MV?$TensorContractionInputMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$00$0BA@@23@$0A@$0A@@internal@Eigen@@SAX_J0AEBV?$TensorContractionInputMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0A@$0BA@@23@AEBV?$TensorContractionInputMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$00$0BA@@23@PEAM0M@Z</DECORATED>
    <FUNCLINE>88</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\Eigen\src\Core\products\</FILEPATH>
      <FILENAME>GeneralMatrixVector.h</FILENAME>
      <LINE>134</LINE>
      <COLUMN>38</COLUMN>
    </SFA>
    <DEFECTCODE>26812</DEFECTCODE>
    <DESCRIPTION>The enum type 'Eigen::internal::general_matrix_vector_product&lt;__int64,float,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,16&gt;,0,0,float,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,16&gt;,0,0&gt;::run::__l4::&lt;unnamed-enum-AllAligned&gt;' is unscoped. Prefer 'enum class' over 'enum' (Enum.3).</DESCRIPTION>
    <FUNCTION>Eigen::internal::general_matrix_vector_product&lt;__int64,float,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,16&gt;,0,0,float,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,16&gt;,0,0&gt;::run</FUNCTION>
    <DECORATED>?run@?$general_matrix_vector_product@_JMV?$TensorContractionInputMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0A@$0BA@@internal@Eigen@@$0A@$0A@MV?$TensorContractionInputMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0A@$0BA@@23@$0A@$0A@@internal@Eigen@@SAX_J0AEBV?$TensorContractionInputMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0A@$0BA@@23@AEBV?$TensorContractionInputMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0A@$0BA@@23@PEAM0M@Z</DECORATED>
    <FUNCLINE>88</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\Eigen\src\Core\products\</FILEPATH>
      <FILENAME>GeneralMatrixVector.h</FILENAME>
      <LINE>134</LINE>
      <COLUMN>38</COLUMN>
    </SFA>
    <DEFECTCODE>26812</DEFECTCODE>
    <DESCRIPTION>The enum type 'Eigen::internal::general_matrix_vector_product&lt;__int64,float,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,16&gt;,0,0,float,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,1,16&gt;,0,0&gt;::run::__l4::&lt;unnamed-enum-AllAligned&gt;' is unscoped. Prefer 'enum class' over 'enum' (Enum.3).</DESCRIPTION>
    <FUNCTION>Eigen::internal::general_matrix_vector_product&lt;__int64,float,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,16&gt;,0,0,float,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,1,16&gt;,0,0&gt;::run</FUNCTION>
    <DECORATED>?run@?$general_matrix_vector_product@_JMV?$TensorContractionInputMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0A@$0BA@@internal@Eigen@@$0A@$0A@MV?$TensorContractionInputMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$00$0BA@@23@$0A@$0A@@internal@Eigen@@SAX_J0AEBV?$TensorContractionInputMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0A@$0BA@@23@AEBV?$TensorContractionInputMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$00$0BA@@23@PEAM0M@Z</DECORATED>
    <FUNCLINE>88</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\Eigen\src\Core\products\</FILEPATH>
      <FILENAME>GeneralMatrixVector.h</FILENAME>
      <LINE>134</LINE>
      <COLUMN>38</COLUMN>
    </SFA>
    <DEFECTCODE>26812</DEFECTCODE>
    <DESCRIPTION>The enum type 'Eigen::internal::general_matrix_vector_product&lt;__int64,float,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,16&gt;,0,0,float,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,16&gt;,0,0&gt;::run::__l4::&lt;unnamed-enum-AllAligned&gt;' is unscoped. Prefer 'enum class' over 'enum' (Enum.3).</DESCRIPTION>
    <FUNCTION>Eigen::internal::general_matrix_vector_product&lt;__int64,float,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,16&gt;,0,0,float,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,16&gt;,0,0&gt;::run</FUNCTION>
    <DECORATED>?run@?$general_matrix_vector_product@_JMV?$TensorContractionInputMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0A@$0BA@@internal@Eigen@@$0A@$0A@MV?$TensorContractionInputMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0A@$0BA@@23@$0A@$0A@@internal@Eigen@@SAX_J0AEBV?$TensorContractionInputMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0A@$0BA@@23@AEBV?$TensorContractionInputMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0A@$0BA@@23@PEAM0M@Z</DECORATED>
    <FUNCLINE>88</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\Eigen\src\Core\products\</FILEPATH>
      <FILENAME>GeneralMatrixVector.h</FILENAME>
      <LINE>134</LINE>
      <COLUMN>38</COLUMN>
    </SFA>
    <DEFECTCODE>26812</DEFECTCODE>
    <DESCRIPTION>The enum type 'Eigen::internal::general_matrix_vector_product&lt;__int64,float,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::DefaultDevice&gt;,std::array&lt;__int64,0&gt;,std::array&lt;__int64,1&gt;,4,1,0,16&gt;,0,0,float,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::TensorMap&lt;Eigen::Tensor&lt;float,2,0,__int64&gt;,0,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,1,0&gt;,0,0&gt;::run::__l4::&lt;unnamed-enum-AllAligned&gt;' is unscoped. Prefer 'enum class' over 'enum' (Enum.3).</DESCRIPTION>
    <FUNCTION>Eigen::internal::general_matrix_vector_product&lt;__int64,float,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::DefaultDevice&gt;,std::array&lt;__int64,0&gt;,std::array&lt;__int64,1&gt;,4,1,0,16&gt;,0,0,float,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::TensorMap&lt;Eigen::Tensor&lt;float,2,0,__int64&gt;,0,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,1,0&gt;,0,0&gt;::run</FUNCTION>
    <DECORATED>?run@?$general_matrix_vector_product@_JMV?$TensorContractionInputMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$00$0A@_J@Eigen@@UDefaultDevice@2@@Eigen@@V?$array@_J$0A@@std@@V?$array@_J$00@4@$03$00$0A@$0BA@@internal@Eigen@@$0A@$0A@MV?$TensorContractionInputMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$TensorMap@V?$Tensor@M$01$0A@_J@Eigen@@$0A@UMakePointer@2@@Eigen@@UDefaultDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$00$0A@@23@$0A@$0A@@internal@Eigen@@SAX_J0AEBV?$TensorContractionInputMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$00$0A@_J@Eigen@@UDefaultDevice@2@@Eigen@@V?$array@_J$0A@@std@@V?$array@_J$00@4@$03$00$0A@$0BA@@23@AEBV?$TensorContractionInputMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$TensorMap@V?$Tensor@M$01$0A@_J@Eigen@@$0A@UMakePointer@2@@Eigen@@UDefaultDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$00$0A@@23@PEAM0M@Z</DECORATED>
    <FUNCLINE>88</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\Eigen\src\Core\products\</FILEPATH>
      <FILENAME>GeneralMatrixVector.h</FILENAME>
      <LINE>134</LINE>
      <COLUMN>38</COLUMN>
    </SFA>
    <DEFECTCODE>26812</DEFECTCODE>
    <DESCRIPTION>The enum type 'Eigen::internal::general_matrix_vector_product&lt;__int64,float,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::DefaultDevice&gt;,std::array&lt;__int64,0&gt;,std::array&lt;__int64,1&gt;,4,1,0,16&gt;,0,0,float,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::TensorMap&lt;Eigen::Tensor&lt;float,2,0,__int64&gt;,0,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,0,0&gt;::run::__l4::&lt;unnamed-enum-AllAligned&gt;' is unscoped. Prefer 'enum class' over 'enum' (Enum.3).</DESCRIPTION>
    <FUNCTION>Eigen::internal::general_matrix_vector_product&lt;__int64,float,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::DefaultDevice&gt;,std::array&lt;__int64,0&gt;,std::array&lt;__int64,1&gt;,4,1,0,16&gt;,0,0,float,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::TensorMap&lt;Eigen::Tensor&lt;float,2,0,__int64&gt;,0,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,0,0&gt;::run</FUNCTION>
    <DECORATED>?run@?$general_matrix_vector_product@_JMV?$TensorContractionInputMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$00$0A@_J@Eigen@@UDefaultDevice@2@@Eigen@@V?$array@_J$0A@@std@@V?$array@_J$00@4@$03$00$0A@$0BA@@internal@Eigen@@$0A@$0A@MV?$TensorContractionInputMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$TensorMap@V?$Tensor@M$01$0A@_J@Eigen@@$0A@UMakePointer@2@@Eigen@@UDefaultDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0A@$0A@@23@$0A@$0A@@internal@Eigen@@SAX_J0AEBV?$TensorContractionInputMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$00$0A@_J@Eigen@@UDefaultDevice@2@@Eigen@@V?$array@_J$0A@@std@@V?$array@_J$00@4@$03$00$0A@$0BA@@23@AEBV?$TensorContractionInputMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$TensorMap@V?$Tensor@M$01$0A@_J@Eigen@@$0A@UMakePointer@2@@Eigen@@UDefaultDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0A@$0A@@23@PEAM0M@Z</DECORATED>
    <FUNCLINE>88</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\Eigen\src\Core\products\</FILEPATH>
      <FILENAME>GeneralMatrixVector.h</FILENAME>
      <LINE>134</LINE>
      <COLUMN>38</COLUMN>
    </SFA>
    <DEFECTCODE>26812</DEFECTCODE>
    <DESCRIPTION>The enum type 'Eigen::internal::general_matrix_vector_product&lt;__int64,float,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::DefaultDevice&gt;,std::array&lt;__int64,0&gt;,std::array&lt;__int64,1&gt;,4,1,0,16&gt;,0,0,float,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::TensorMap&lt;Eigen::Tensor&lt;float,2,0,__int64&gt;,0,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,1,0&gt;,0,0&gt;::run::__l4::&lt;unnamed-enum-AllAligned&gt;' is unscoped. Prefer 'enum class' over 'enum' (Enum.3).</DESCRIPTION>
    <FUNCTION>Eigen::internal::general_matrix_vector_product&lt;__int64,float,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::DefaultDevice&gt;,std::array&lt;__int64,0&gt;,std::array&lt;__int64,1&gt;,4,1,0,16&gt;,0,0,float,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::TensorMap&lt;Eigen::Tensor&lt;float,2,0,__int64&gt;,0,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,1,0&gt;,0,0&gt;::run</FUNCTION>
    <DECORATED>?run@?$general_matrix_vector_product@_JMV?$TensorContractionInputMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$00$0A@_J@Eigen@@UDefaultDevice@2@@Eigen@@V?$array@_J$0A@@std@@V?$array@_J$00@4@$03$00$0A@$0BA@@internal@Eigen@@$0A@$0A@MV?$TensorContractionInputMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$TensorMap@V?$Tensor@M$01$0A@_J@Eigen@@$0A@UMakePointer@2@@Eigen@@UDefaultDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$00$0A@@23@$0A@$0A@@internal@Eigen@@SAX_J0AEBV?$TensorContractionInputMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$00$0A@_J@Eigen@@UDefaultDevice@2@@Eigen@@V?$array@_J$0A@@std@@V?$array@_J$00@4@$03$00$0A@$0BA@@23@AEBV?$TensorContractionInputMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$TensorMap@V?$Tensor@M$01$0A@_J@Eigen@@$0A@UMakePointer@2@@Eigen@@UDefaultDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$00$0A@@23@PEAM0M@Z</DECORATED>
    <FUNCLINE>88</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\Eigen\src\Core\products\</FILEPATH>
      <FILENAME>GeneralMatrixVector.h</FILENAME>
      <LINE>134</LINE>
      <COLUMN>38</COLUMN>
    </SFA>
    <DEFECTCODE>26812</DEFECTCODE>
    <DESCRIPTION>The enum type 'Eigen::internal::general_matrix_vector_product&lt;__int64,float,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::DefaultDevice&gt;,std::array&lt;__int64,0&gt;,std::array&lt;__int64,1&gt;,4,1,0,16&gt;,0,0,float,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::TensorMap&lt;Eigen::Tensor&lt;float,2,0,__int64&gt;,0,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,0,0&gt;::run::__l4::&lt;unnamed-enum-AllAligned&gt;' is unscoped. Prefer 'enum class' over 'enum' (Enum.3).</DESCRIPTION>
    <FUNCTION>Eigen::internal::general_matrix_vector_product&lt;__int64,float,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::DefaultDevice&gt;,std::array&lt;__int64,0&gt;,std::array&lt;__int64,1&gt;,4,1,0,16&gt;,0,0,float,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::TensorMap&lt;Eigen::Tensor&lt;float,2,0,__int64&gt;,0,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,0,0&gt;::run</FUNCTION>
    <DECORATED>?run@?$general_matrix_vector_product@_JMV?$TensorContractionInputMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$00$0A@_J@Eigen@@UDefaultDevice@2@@Eigen@@V?$array@_J$0A@@std@@V?$array@_J$00@4@$03$00$0A@$0BA@@internal@Eigen@@$0A@$0A@MV?$TensorContractionInputMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$TensorMap@V?$Tensor@M$01$0A@_J@Eigen@@$0A@UMakePointer@2@@Eigen@@UDefaultDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0A@$0A@@23@$0A@$0A@@internal@Eigen@@SAX_J0AEBV?$TensorContractionInputMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$00$0A@_J@Eigen@@UDefaultDevice@2@@Eigen@@V?$array@_J$0A@@std@@V?$array@_J$00@4@$03$00$0A@$0BA@@23@AEBV?$TensorContractionInputMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$TensorMap@V?$Tensor@M$01$0A@_J@Eigen@@$0A@UMakePointer@2@@Eigen@@UDefaultDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0A@$0A@@23@PEAM0M@Z</DECORATED>
    <FUNCLINE>88</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\Eigen\src\Core\products\</FILEPATH>
      <FILENAME>GeneralMatrixVector.h</FILENAME>
      <LINE>134</LINE>
      <COLUMN>38</COLUMN>
    </SFA>
    <DEFECTCODE>26812</DEFECTCODE>
    <DESCRIPTION>The enum type 'Eigen::internal::general_matrix_vector_product&lt;__int64,float,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::DefaultDevice&gt;,std::array&lt;__int64,0&gt;,std::array&lt;__int64,1&gt;,4,0,0,16&gt;,0,0,float,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::TensorMap&lt;Eigen::Tensor&lt;float,2,0,__int64&gt;,0,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,1,0&gt;,0,0&gt;::run::__l4::&lt;unnamed-enum-AllAligned&gt;' is unscoped. Prefer 'enum class' over 'enum' (Enum.3).</DESCRIPTION>
    <FUNCTION>Eigen::internal::general_matrix_vector_product&lt;__int64,float,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::DefaultDevice&gt;,std::array&lt;__int64,0&gt;,std::array&lt;__int64,1&gt;,4,0,0,16&gt;,0,0,float,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::TensorMap&lt;Eigen::Tensor&lt;float,2,0,__int64&gt;,0,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,1,0&gt;,0,0&gt;::run</FUNCTION>
    <DECORATED>?run@?$general_matrix_vector_product@_JMV?$TensorContractionInputMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$00$0A@_J@Eigen@@UDefaultDevice@2@@Eigen@@V?$array@_J$0A@@std@@V?$array@_J$00@4@$03$0A@$0A@$0BA@@internal@Eigen@@$0A@$0A@MV?$TensorContractionInputMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$TensorMap@V?$Tensor@M$01$0A@_J@Eigen@@$0A@UMakePointer@2@@Eigen@@UDefaultDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$00$0A@@23@$0A@$0A@@internal@Eigen@@SAX_J0AEBV?$TensorContractionInputMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$00$0A@_J@Eigen@@UDefaultDevice@2@@Eigen@@V?$array@_J$0A@@std@@V?$array@_J$00@4@$03$0A@$0A@$0BA@@23@AEBV?$TensorContractionInputMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$TensorMap@V?$Tensor@M$01$0A@_J@Eigen@@$0A@UMakePointer@2@@Eigen@@UDefaultDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$00$0A@@23@PEAM0M@Z</DECORATED>
    <FUNCLINE>88</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\Eigen\src\Core\products\</FILEPATH>
      <FILENAME>GeneralMatrixVector.h</FILENAME>
      <LINE>134</LINE>
      <COLUMN>38</COLUMN>
    </SFA>
    <DEFECTCODE>26812</DEFECTCODE>
    <DESCRIPTION>The enum type 'Eigen::internal::general_matrix_vector_product&lt;__int64,float,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::DefaultDevice&gt;,std::array&lt;__int64,0&gt;,std::array&lt;__int64,1&gt;,4,0,0,16&gt;,0,0,float,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::TensorMap&lt;Eigen::Tensor&lt;float,2,0,__int64&gt;,0,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,0,0&gt;::run::__l4::&lt;unnamed-enum-AllAligned&gt;' is unscoped. Prefer 'enum class' over 'enum' (Enum.3).</DESCRIPTION>
    <FUNCTION>Eigen::internal::general_matrix_vector_product&lt;__int64,float,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::DefaultDevice&gt;,std::array&lt;__int64,0&gt;,std::array&lt;__int64,1&gt;,4,0,0,16&gt;,0,0,float,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::TensorMap&lt;Eigen::Tensor&lt;float,2,0,__int64&gt;,0,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,0&gt;,0,0&gt;::run</FUNCTION>
    <DECORATED>?run@?$general_matrix_vector_product@_JMV?$TensorContractionInputMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$00$0A@_J@Eigen@@UDefaultDevice@2@@Eigen@@V?$array@_J$0A@@std@@V?$array@_J$00@4@$03$0A@$0A@$0BA@@internal@Eigen@@$0A@$0A@MV?$TensorContractionInputMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$TensorMap@V?$Tensor@M$01$0A@_J@Eigen@@$0A@UMakePointer@2@@Eigen@@UDefaultDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0A@$0A@@23@$0A@$0A@@internal@Eigen@@SAX_J0AEBV?$TensorContractionInputMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$00$0A@_J@Eigen@@UDefaultDevice@2@@Eigen@@V?$array@_J$0A@@std@@V?$array@_J$00@4@$03$0A@$0A@$0BA@@23@AEBV?$TensorContractionInputMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$TensorMap@V?$Tensor@M$01$0A@_J@Eigen@@$0A@UMakePointer@2@@Eigen@@UDefaultDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0A@$0A@@23@PEAM0M@Z</DECORATED>
    <FUNCLINE>88</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\Eigen\src\Core\products\</FILEPATH>
      <FILENAME>GeneralMatrixVector.h</FILENAME>
      <LINE>134</LINE>
      <COLUMN>38</COLUMN>
    </SFA>
    <DEFECTCODE>26812</DEFECTCODE>
    <DESCRIPTION>The enum type 'Eigen::internal::general_matrix_vector_product&lt;__int64,float,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::DefaultDevice&gt;,std::array&lt;__int64,0&gt;,std::array&lt;__int64,1&gt;,4,0,0,16&gt;,0,0,float,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::TensorMap&lt;Eigen::Tensor&lt;float,2,0,__int64&gt;,0,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,1,0&gt;,0,0&gt;::run::__l4::&lt;unnamed-enum-AllAligned&gt;' is unscoped. Prefer 'enum class' over 'enum' (Enum.3).</DESCRIPTION>
    <FUNCTION>Eigen::internal::general_matrix_vector_product&lt;__int64,float,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::DefaultDevice&gt;,std::array&lt;__int64,0&gt;,std::array&lt;__int64,1&gt;,4,0,0,16&gt;,0,0,float,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::TensorMap&lt;Eigen::Tensor&lt;float,2,0,__int64&gt;,0,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,1,0&gt;,0,0&gt;::run</FUNCTION>
    <DECORATED>?run@?$general_matrix_vector_product@_JMV?$TensorContractionInputMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$00$0A@_J@Eigen@@UDefaultDevice@2@@Eigen@@V?$array@_J$0A@@std@@V?$array@_J$00@4@$03$0A@$0A@$0BA@@internal@Eigen@@$0A@$0A@MV?$TensorContractionInputMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$TensorMap@V?$Tensor@M$01$0A@_J@Eigen@@$0A@UMakePointer@2@@Eigen@@UDefaultDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$00$0A@@23@$0A@$0A@@internal@Eigen@@SAX_J0AEBV?$TensorContractionInputMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$00$0A@_J@Eigen@@UDefaultDevice@2@@Eigen@@V?$array@_J$0A@@std@@V?$array@_J$00@4@$03$0A@$0A@$0BA@@23@AEBV?$TensorContractionInputMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$TensorMap@V?$Tensor@M$01$0A@_J@Eigen@@$0A@UMakePointer@2@@Eigen@@UDefaultDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$00$0A@@23@PEAM0M@Z</DECORATED>
    <FUNCLINE>88</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\Eigen\src\Core\products\</FILEPATH>
      <FILENAME>GeneralMatrixVector.h</FILENAME>
      <LINE>134</LINE>
      <COLUMN>38</COLUMN>
    </SFA>
    <DEFECTCODE>26812</DEFECTCODE>
    <DESCRIPTION>The enum type 'Eigen::internal::general_matrix_vector_product&lt;__int64,float,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::DefaultDevice&gt;,std::array&lt;__int64,0&gt;,std::array&lt;__int64,1&gt;,4,0,0,16&gt;,0,0,float,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::TensorMap&lt;Eigen::Tensor&lt;float,2,0,__int64&gt;,0,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,0,0&gt;::run::__l4::&lt;unnamed-enum-AllAligned&gt;' is unscoped. Prefer 'enum class' over 'enum' (Enum.3).</DESCRIPTION>
    <FUNCTION>Eigen::internal::general_matrix_vector_product&lt;__int64,float,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::DefaultDevice&gt;,std::array&lt;__int64,0&gt;,std::array&lt;__int64,1&gt;,4,0,0,16&gt;,0,0,float,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::TensorMap&lt;Eigen::Tensor&lt;float,2,0,__int64&gt;,0,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,0&gt;,0,0&gt;::run</FUNCTION>
    <DECORATED>?run@?$general_matrix_vector_product@_JMV?$TensorContractionInputMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$00$0A@_J@Eigen@@UDefaultDevice@2@@Eigen@@V?$array@_J$0A@@std@@V?$array@_J$00@4@$03$0A@$0A@$0BA@@internal@Eigen@@$0A@$0A@MV?$TensorContractionInputMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$TensorMap@V?$Tensor@M$01$0A@_J@Eigen@@$0A@UMakePointer@2@@Eigen@@UDefaultDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0A@$0A@@23@$0A@$0A@@internal@Eigen@@SAX_J0AEBV?$TensorContractionInputMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$00$0A@_J@Eigen@@UDefaultDevice@2@@Eigen@@V?$array@_J$0A@@std@@V?$array@_J$00@4@$03$0A@$0A@$0BA@@23@AEBV?$TensorContractionInputMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$TensorMap@V?$Tensor@M$01$0A@_J@Eigen@@$0A@UMakePointer@2@@Eigen@@UDefaultDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0A@$0A@@23@PEAM0M@Z</DECORATED>
    <FUNCLINE>88</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\Eigen\src\Core\products\</FILEPATH>
      <FILENAME>GeneralMatrixVector.h</FILENAME>
      <LINE>134</LINE>
      <COLUMN>38</COLUMN>
    </SFA>
    <DEFECTCODE>26812</DEFECTCODE>
    <DESCRIPTION>The enum type 'Eigen::internal::general_matrix_vector_product&lt;__int64,float,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,3,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,16&gt;,0,0,float,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,1,16&gt;,0,0&gt;::run::__l4::&lt;unnamed-enum-AllAligned&gt;' is unscoped. Prefer 'enum class' over 'enum' (Enum.3).</DESCRIPTION>
    <FUNCTION>Eigen::internal::general_matrix_vector_product&lt;__int64,float,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,3,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,16&gt;,0,0,float,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,1,16&gt;,0,0&gt;::run</FUNCTION>
    <DECORATED>?run@?$general_matrix_vector_product@_JMV?$TensorContractionInputMapper@M_J$00U?$TensorEvaluator@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$01$0A@_J@3@$$CBV?$Tensor@M$02$0A@_J@3@@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0A@$0BA@@internal@Eigen@@$0A@$0A@MV?$TensorContractionInputMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$00$0BA@@23@$0A@$0A@@internal@Eigen@@SAX_J0AEBV?$TensorContractionInputMapper@M_J$00U?$TensorEvaluator@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$01$0A@_J@3@$$CBV?$Tensor@M$02$0A@_J@3@@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0A@$0BA@@23@AEBV?$TensorContractionInputMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$00$0BA@@23@PEAM0M@Z</DECORATED>
    <FUNCLINE>88</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\Eigen\src\Core\products\</FILEPATH>
      <FILENAME>GeneralMatrixVector.h</FILENAME>
      <LINE>134</LINE>
      <COLUMN>38</COLUMN>
    </SFA>
    <DEFECTCODE>26812</DEFECTCODE>
    <DESCRIPTION>The enum type 'Eigen::internal::general_matrix_vector_product&lt;__int64,float,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,3,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,16&gt;,0,0,float,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,16&gt;,0,0&gt;::run::__l4::&lt;unnamed-enum-AllAligned&gt;' is unscoped. Prefer 'enum class' over 'enum' (Enum.3).</DESCRIPTION>
    <FUNCTION>Eigen::internal::general_matrix_vector_product&lt;__int64,float,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,3,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,16&gt;,0,0,float,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,16&gt;,0,0&gt;::run</FUNCTION>
    <DECORATED>?run@?$general_matrix_vector_product@_JMV?$TensorContractionInputMapper@M_J$00U?$TensorEvaluator@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$01$0A@_J@3@$$CBV?$Tensor@M$02$0A@_J@3@@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0A@$0BA@@internal@Eigen@@$0A@$0A@MV?$TensorContractionInputMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0A@$0BA@@23@$0A@$0A@@internal@Eigen@@SAX_J0AEBV?$TensorContractionInputMapper@M_J$00U?$TensorEvaluator@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$01$0A@_J@3@$$CBV?$Tensor@M$02$0A@_J@3@@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0A@$0BA@@23@AEBV?$TensorContractionInputMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0A@$0BA@@23@PEAM0M@Z</DECORATED>
    <FUNCLINE>88</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\Eigen\src\Core\products\</FILEPATH>
      <FILENAME>GeneralMatrixVector.h</FILENAME>
      <LINE>134</LINE>
      <COLUMN>38</COLUMN>
    </SFA>
    <DEFECTCODE>26812</DEFECTCODE>
    <DESCRIPTION>The enum type 'Eigen::internal::general_matrix_vector_product&lt;__int64,float,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,3,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,16&gt;,0,0,float,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,1,16&gt;,0,0&gt;::run::__l4::&lt;unnamed-enum-AllAligned&gt;' is unscoped. Prefer 'enum class' over 'enum' (Enum.3).</DESCRIPTION>
    <FUNCTION>Eigen::internal::general_matrix_vector_product&lt;__int64,float,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,3,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,16&gt;,0,0,float,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,1,16&gt;,0,0&gt;::run</FUNCTION>
    <DECORATED>?run@?$general_matrix_vector_product@_JMV?$TensorContractionInputMapper@M_J$00U?$TensorEvaluator@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$01$0A@_J@3@$$CBV?$Tensor@M$02$0A@_J@3@@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0A@$0BA@@internal@Eigen@@$0A@$0A@MV?$TensorContractionInputMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$00$0BA@@23@$0A@$0A@@internal@Eigen@@SAX_J0AEBV?$TensorContractionInputMapper@M_J$00U?$TensorEvaluator@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$01$0A@_J@3@$$CBV?$Tensor@M$02$0A@_J@3@@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0A@$0BA@@23@AEBV?$TensorContractionInputMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$00$0BA@@23@PEAM0M@Z</DECORATED>
    <FUNCLINE>88</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\Eigen\src\Core\products\</FILEPATH>
      <FILENAME>GeneralMatrixVector.h</FILENAME>
      <LINE>134</LINE>
      <COLUMN>38</COLUMN>
    </SFA>
    <DEFECTCODE>26812</DEFECTCODE>
    <DESCRIPTION>The enum type 'Eigen::internal::general_matrix_vector_product&lt;__int64,float,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,3,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,16&gt;,0,0,float,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,16&gt;,0,0&gt;::run::__l4::&lt;unnamed-enum-AllAligned&gt;' is unscoped. Prefer 'enum class' over 'enum' (Enum.3).</DESCRIPTION>
    <FUNCTION>Eigen::internal::general_matrix_vector_product&lt;__int64,float,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,3,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,16&gt;,0,0,float,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,16&gt;,0,0&gt;::run</FUNCTION>
    <DECORATED>?run@?$general_matrix_vector_product@_JMV?$TensorContractionInputMapper@M_J$00U?$TensorEvaluator@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$01$0A@_J@3@$$CBV?$Tensor@M$02$0A@_J@3@@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0A@$0BA@@internal@Eigen@@$0A@$0A@MV?$TensorContractionInputMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0A@$0BA@@23@$0A@$0A@@internal@Eigen@@SAX_J0AEBV?$TensorContractionInputMapper@M_J$00U?$TensorEvaluator@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$01$0A@_J@3@$$CBV?$Tensor@M$02$0A@_J@3@@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0A@$0BA@@23@AEBV?$TensorContractionInputMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0A@$0BA@@23@PEAM0M@Z</DECORATED>
    <FUNCLINE>88</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\Eigen\src\Core\products\</FILEPATH>
      <FILENAME>GeneralMatrixVector.h</FILENAME>
      <LINE>134</LINE>
      <COLUMN>38</COLUMN>
    </SFA>
    <DEFECTCODE>26812</DEFECTCODE>
    <DESCRIPTION>The enum type 'Eigen::internal::general_matrix_vector_product&lt;__int64,float,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,3,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,16&gt;,0,0,float,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,1,16&gt;,0,0&gt;::run::__l4::&lt;unnamed-enum-AllAligned&gt;' is unscoped. Prefer 'enum class' over 'enum' (Enum.3).</DESCRIPTION>
    <FUNCTION>Eigen::internal::general_matrix_vector_product&lt;__int64,float,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,3,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,16&gt;,0,0,float,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,1,16&gt;,0,0&gt;::run</FUNCTION>
    <DECORATED>?run@?$general_matrix_vector_product@_JMV?$TensorContractionInputMapper@M_J$00U?$TensorEvaluator@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$01$0A@_J@3@$$CBV?$Tensor@M$02$0A@_J@3@@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0A@$0BA@@internal@Eigen@@$0A@$0A@MV?$TensorContractionInputMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$00$0BA@@23@$0A@$0A@@internal@Eigen@@SAX_J0AEBV?$TensorContractionInputMapper@M_J$00U?$TensorEvaluator@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$01$0A@_J@3@$$CBV?$Tensor@M$02$0A@_J@3@@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0A@$0BA@@23@AEBV?$TensorContractionInputMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$00$0BA@@23@PEAM0M@Z</DECORATED>
    <FUNCLINE>88</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\Eigen\src\Core\products\</FILEPATH>
      <FILENAME>GeneralMatrixVector.h</FILENAME>
      <LINE>134</LINE>
      <COLUMN>38</COLUMN>
    </SFA>
    <DEFECTCODE>26812</DEFECTCODE>
    <DESCRIPTION>The enum type 'Eigen::internal::general_matrix_vector_product&lt;__int64,float,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,3,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,16&gt;,0,0,float,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,16&gt;,0,0&gt;::run::__l4::&lt;unnamed-enum-AllAligned&gt;' is unscoped. Prefer 'enum class' over 'enum' (Enum.3).</DESCRIPTION>
    <FUNCTION>Eigen::internal::general_matrix_vector_product&lt;__int64,float,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,3,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,16&gt;,0,0,float,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,16&gt;,0,0&gt;::run</FUNCTION>
    <DECORATED>?run@?$general_matrix_vector_product@_JMV?$TensorContractionInputMapper@M_J$00U?$TensorEvaluator@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$01$0A@_J@3@$$CBV?$Tensor@M$02$0A@_J@3@@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0A@$0BA@@internal@Eigen@@$0A@$0A@MV?$TensorContractionInputMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0A@$0BA@@23@$0A@$0A@@internal@Eigen@@SAX_J0AEBV?$TensorContractionInputMapper@M_J$00U?$TensorEvaluator@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$01$0A@_J@3@$$CBV?$Tensor@M$02$0A@_J@3@@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0A@$0BA@@23@AEBV?$TensorContractionInputMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0A@$0BA@@23@PEAM0M@Z</DECORATED>
    <FUNCLINE>88</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\Eigen\src\Core\products\</FILEPATH>
      <FILENAME>GeneralMatrixVector.h</FILENAME>
      <LINE>134</LINE>
      <COLUMN>38</COLUMN>
    </SFA>
    <DEFECTCODE>26812</DEFECTCODE>
    <DESCRIPTION>The enum type 'Eigen::internal::general_matrix_vector_product&lt;__int64,float,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,3,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,16&gt;,0,0,float,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,1,16&gt;,0,0&gt;::run::__l4::&lt;unnamed-enum-AllAligned&gt;' is unscoped. Prefer 'enum class' over 'enum' (Enum.3).</DESCRIPTION>
    <FUNCTION>Eigen::internal::general_matrix_vector_product&lt;__int64,float,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,3,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,16&gt;,0,0,float,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,1,16&gt;,0,0&gt;::run</FUNCTION>
    <DECORATED>?run@?$general_matrix_vector_product@_JMV?$TensorContractionInputMapper@M_J$00U?$TensorEvaluator@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$01$0A@_J@3@$$CBV?$Tensor@M$02$0A@_J@3@@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0A@$0BA@@internal@Eigen@@$0A@$0A@MV?$TensorContractionInputMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$00$0BA@@23@$0A@$0A@@internal@Eigen@@SAX_J0AEBV?$TensorContractionInputMapper@M_J$00U?$TensorEvaluator@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$01$0A@_J@3@$$CBV?$Tensor@M$02$0A@_J@3@@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0A@$0BA@@23@AEBV?$TensorContractionInputMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$00$0BA@@23@PEAM0M@Z</DECORATED>
    <FUNCLINE>88</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\Eigen\src\Core\products\</FILEPATH>
      <FILENAME>GeneralMatrixVector.h</FILENAME>
      <LINE>134</LINE>
      <COLUMN>38</COLUMN>
    </SFA>
    <DEFECTCODE>26812</DEFECTCODE>
    <DESCRIPTION>The enum type 'Eigen::internal::general_matrix_vector_product&lt;__int64,float,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,3,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,16&gt;,0,0,float,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,16&gt;,0,0&gt;::run::__l4::&lt;unnamed-enum-AllAligned&gt;' is unscoped. Prefer 'enum class' over 'enum' (Enum.3).</DESCRIPTION>
    <FUNCTION>Eigen::internal::general_matrix_vector_product&lt;__int64,float,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,3,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,16&gt;,0,0,float,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,16&gt;,0,0&gt;::run</FUNCTION>
    <DECORATED>?run@?$general_matrix_vector_product@_JMV?$TensorContractionInputMapper@M_J$00U?$TensorEvaluator@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$01$0A@_J@3@$$CBV?$Tensor@M$02$0A@_J@3@@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0A@$0BA@@internal@Eigen@@$0A@$0A@MV?$TensorContractionInputMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0A@$0BA@@23@$0A@$0A@@internal@Eigen@@SAX_J0AEBV?$TensorContractionInputMapper@M_J$00U?$TensorEvaluator@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$01$0A@_J@3@$$CBV?$Tensor@M$02$0A@_J@3@@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0A@$0BA@@23@AEBV?$TensorContractionInputMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0A@$0BA@@23@PEAM0M@Z</DECORATED>
    <FUNCLINE>88</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\Eigen\src\Core\products\</FILEPATH>
      <FILENAME>GeneralMatrixVector.h</FILENAME>
      <LINE>134</LINE>
      <COLUMN>38</COLUMN>
    </SFA>
    <DEFECTCODE>26812</DEFECTCODE>
    <DESCRIPTION>The enum type 'Eigen::internal::general_matrix_vector_product&lt;__int64,float,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,16&gt;,0,0,float,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,1,16&gt;,0,0&gt;::run::__l4::&lt;unnamed-enum-AllAligned&gt;' is unscoped. Prefer 'enum class' over 'enum' (Enum.3).</DESCRIPTION>
    <FUNCTION>Eigen::internal::general_matrix_vector_product&lt;__int64,float,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,16&gt;,0,0,float,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,1,16&gt;,0,0&gt;::run</FUNCTION>
    <DECORATED>?run@?$general_matrix_vector_product@_JMV?$TensorContractionInputMapper@M_J$00U?$TensorEvaluator@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$01$0A@_J@3@$$CBV43@@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0A@$0BA@@internal@Eigen@@$0A@$0A@MV?$TensorContractionInputMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$00$0BA@@23@$0A@$0A@@internal@Eigen@@SAX_J0AEBV?$TensorContractionInputMapper@M_J$00U?$TensorEvaluator@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$01$0A@_J@3@$$CBV43@@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0A@$0BA@@23@AEBV?$TensorContractionInputMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$00$0BA@@23@PEAM0M@Z</DECORATED>
    <FUNCLINE>88</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\Eigen\src\Core\products\</FILEPATH>
      <FILENAME>GeneralMatrixVector.h</FILENAME>
      <LINE>134</LINE>
      <COLUMN>38</COLUMN>
    </SFA>
    <DEFECTCODE>26812</DEFECTCODE>
    <DESCRIPTION>The enum type 'Eigen::internal::general_matrix_vector_product&lt;__int64,float,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,16&gt;,0,0,float,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,16&gt;,0,0&gt;::run::__l4::&lt;unnamed-enum-AllAligned&gt;' is unscoped. Prefer 'enum class' over 'enum' (Enum.3).</DESCRIPTION>
    <FUNCTION>Eigen::internal::general_matrix_vector_product&lt;__int64,float,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,16&gt;,0,0,float,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,16&gt;,0,0&gt;::run</FUNCTION>
    <DECORATED>?run@?$general_matrix_vector_product@_JMV?$TensorContractionInputMapper@M_J$00U?$TensorEvaluator@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$01$0A@_J@3@$$CBV43@@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0A@$0BA@@internal@Eigen@@$0A@$0A@MV?$TensorContractionInputMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0A@$0BA@@23@$0A@$0A@@internal@Eigen@@SAX_J0AEBV?$TensorContractionInputMapper@M_J$00U?$TensorEvaluator@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$01$0A@_J@3@$$CBV43@@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0A@$0BA@@23@AEBV?$TensorContractionInputMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0A@$0BA@@23@PEAM0M@Z</DECORATED>
    <FUNCLINE>88</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\Eigen\src\Core\products\</FILEPATH>
      <FILENAME>GeneralMatrixVector.h</FILENAME>
      <LINE>134</LINE>
      <COLUMN>38</COLUMN>
    </SFA>
    <DEFECTCODE>26812</DEFECTCODE>
    <DESCRIPTION>The enum type 'Eigen::internal::general_matrix_vector_product&lt;__int64,float,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,16&gt;,0,0,float,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,1,16&gt;,0,0&gt;::run::__l4::&lt;unnamed-enum-AllAligned&gt;' is unscoped. Prefer 'enum class' over 'enum' (Enum.3).</DESCRIPTION>
    <FUNCTION>Eigen::internal::general_matrix_vector_product&lt;__int64,float,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,16&gt;,0,0,float,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,1,16&gt;,0,0&gt;::run</FUNCTION>
    <DECORATED>?run@?$general_matrix_vector_product@_JMV?$TensorContractionInputMapper@M_J$00U?$TensorEvaluator@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$01$0A@_J@3@$$CBV43@@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0A@$0BA@@internal@Eigen@@$0A@$0A@MV?$TensorContractionInputMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$00$0BA@@23@$0A@$0A@@internal@Eigen@@SAX_J0AEBV?$TensorContractionInputMapper@M_J$00U?$TensorEvaluator@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$01$0A@_J@3@$$CBV43@@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0A@$0BA@@23@AEBV?$TensorContractionInputMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$00$0BA@@23@PEAM0M@Z</DECORATED>
    <FUNCLINE>88</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\Eigen\src\Core\products\</FILEPATH>
      <FILENAME>GeneralMatrixVector.h</FILENAME>
      <LINE>134</LINE>
      <COLUMN>38</COLUMN>
    </SFA>
    <DEFECTCODE>26812</DEFECTCODE>
    <DESCRIPTION>The enum type 'Eigen::internal::general_matrix_vector_product&lt;__int64,float,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,16&gt;,0,0,float,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,16&gt;,0,0&gt;::run::__l4::&lt;unnamed-enum-AllAligned&gt;' is unscoped. Prefer 'enum class' over 'enum' (Enum.3).</DESCRIPTION>
    <FUNCTION>Eigen::internal::general_matrix_vector_product&lt;__int64,float,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,16&gt;,0,0,float,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,16&gt;,0,0&gt;::run</FUNCTION>
    <DECORATED>?run@?$general_matrix_vector_product@_JMV?$TensorContractionInputMapper@M_J$00U?$TensorEvaluator@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$01$0A@_J@3@$$CBV43@@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0A@$0BA@@internal@Eigen@@$0A@$0A@MV?$TensorContractionInputMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0A@$0BA@@23@$0A@$0A@@internal@Eigen@@SAX_J0AEBV?$TensorContractionInputMapper@M_J$00U?$TensorEvaluator@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$01$0A@_J@3@$$CBV43@@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0A@$0BA@@23@AEBV?$TensorContractionInputMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0A@$0BA@@23@PEAM0M@Z</DECORATED>
    <FUNCLINE>88</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\Eigen\src\Core\products\</FILEPATH>
      <FILENAME>GeneralMatrixVector.h</FILENAME>
      <LINE>134</LINE>
      <COLUMN>38</COLUMN>
    </SFA>
    <DEFECTCODE>26812</DEFECTCODE>
    <DESCRIPTION>The enum type 'Eigen::internal::general_matrix_vector_product&lt;__int64,float,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,16&gt;,0,0,float,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,1,16&gt;,0,0&gt;::run::__l4::&lt;unnamed-enum-AllAligned&gt;' is unscoped. Prefer 'enum class' over 'enum' (Enum.3).</DESCRIPTION>
    <FUNCTION>Eigen::internal::general_matrix_vector_product&lt;__int64,float,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,16&gt;,0,0,float,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,1,16&gt;,0,0&gt;::run</FUNCTION>
    <DECORATED>?run@?$general_matrix_vector_product@_JMV?$TensorContractionInputMapper@M_J$00U?$TensorEvaluator@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$01$0A@_J@3@$$CBV43@@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0A@$0BA@@internal@Eigen@@$0A@$0A@MV?$TensorContractionInputMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$00$0BA@@23@$0A@$0A@@internal@Eigen@@SAX_J0AEBV?$TensorContractionInputMapper@M_J$00U?$TensorEvaluator@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$01$0A@_J@3@$$CBV43@@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0A@$0BA@@23@AEBV?$TensorContractionInputMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$00$0BA@@23@PEAM0M@Z</DECORATED>
    <FUNCLINE>88</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\Eigen\src\Core\products\</FILEPATH>
      <FILENAME>GeneralMatrixVector.h</FILENAME>
      <LINE>134</LINE>
      <COLUMN>38</COLUMN>
    </SFA>
    <DEFECTCODE>26812</DEFECTCODE>
    <DESCRIPTION>The enum type 'Eigen::internal::general_matrix_vector_product&lt;__int64,float,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,16&gt;,0,0,float,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,16&gt;,0,0&gt;::run::__l4::&lt;unnamed-enum-AllAligned&gt;' is unscoped. Prefer 'enum class' over 'enum' (Enum.3).</DESCRIPTION>
    <FUNCTION>Eigen::internal::general_matrix_vector_product&lt;__int64,float,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,16&gt;,0,0,float,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,16&gt;,0,0&gt;::run</FUNCTION>
    <DECORATED>?run@?$general_matrix_vector_product@_JMV?$TensorContractionInputMapper@M_J$00U?$TensorEvaluator@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$01$0A@_J@3@$$CBV43@@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0A@$0BA@@internal@Eigen@@$0A@$0A@MV?$TensorContractionInputMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0A@$0BA@@23@$0A@$0A@@internal@Eigen@@SAX_J0AEBV?$TensorContractionInputMapper@M_J$00U?$TensorEvaluator@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$01$0A@_J@3@$$CBV43@@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0A@$0BA@@23@AEBV?$TensorContractionInputMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0A@$0BA@@23@PEAM0M@Z</DECORATED>
    <FUNCLINE>88</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\Eigen\src\Core\products\</FILEPATH>
      <FILENAME>GeneralMatrixVector.h</FILENAME>
      <LINE>134</LINE>
      <COLUMN>38</COLUMN>
    </SFA>
    <DEFECTCODE>26812</DEFECTCODE>
    <DESCRIPTION>The enum type 'Eigen::internal::general_matrix_vector_product&lt;__int64,float,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,16&gt;,0,0,float,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,1,16&gt;,0,0&gt;::run::__l4::&lt;unnamed-enum-AllAligned&gt;' is unscoped. Prefer 'enum class' over 'enum' (Enum.3).</DESCRIPTION>
    <FUNCTION>Eigen::internal::general_matrix_vector_product&lt;__int64,float,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,16&gt;,0,0,float,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,1,16&gt;,0,0&gt;::run</FUNCTION>
    <DECORATED>?run@?$general_matrix_vector_product@_JMV?$TensorContractionInputMapper@M_J$00U?$TensorEvaluator@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$01$0A@_J@3@$$CBV43@@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0A@$0BA@@internal@Eigen@@$0A@$0A@MV?$TensorContractionInputMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$00$0BA@@23@$0A@$0A@@internal@Eigen@@SAX_J0AEBV?$TensorContractionInputMapper@M_J$00U?$TensorEvaluator@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$01$0A@_J@3@$$CBV43@@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0A@$0BA@@23@AEBV?$TensorContractionInputMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$00$0BA@@23@PEAM0M@Z</DECORATED>
    <FUNCLINE>88</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\Eigen\src\Core\products\</FILEPATH>
      <FILENAME>GeneralMatrixVector.h</FILENAME>
      <LINE>134</LINE>
      <COLUMN>38</COLUMN>
    </SFA>
    <DEFECTCODE>26812</DEFECTCODE>
    <DESCRIPTION>The enum type 'Eigen::internal::general_matrix_vector_product&lt;__int64,float,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,16&gt;,0,0,float,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,16&gt;,0,0&gt;::run::__l4::&lt;unnamed-enum-AllAligned&gt;' is unscoped. Prefer 'enum class' over 'enum' (Enum.3).</DESCRIPTION>
    <FUNCTION>Eigen::internal::general_matrix_vector_product&lt;__int64,float,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,16&gt;,0,0,float,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,16&gt;,0,0&gt;::run</FUNCTION>
    <DECORATED>?run@?$general_matrix_vector_product@_JMV?$TensorContractionInputMapper@M_J$00U?$TensorEvaluator@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$01$0A@_J@3@$$CBV43@@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0A@$0BA@@internal@Eigen@@$0A@$0A@MV?$TensorContractionInputMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0A@$0BA@@23@$0A@$0A@@internal@Eigen@@SAX_J0AEBV?$TensorContractionInputMapper@M_J$00U?$TensorEvaluator@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$01$0A@_J@3@$$CBV43@@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0A@$0BA@@23@AEBV?$TensorContractionInputMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0A@$0BA@@23@PEAM0M@Z</DECORATED>
    <FUNCLINE>88</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\Eigen\src\Core\products\</FILEPATH>
      <FILENAME>GeneralMatrixVector.h</FILENAME>
      <LINE>134</LINE>
      <COLUMN>38</COLUMN>
    </SFA>
    <DEFECTCODE>26812</DEFECTCODE>
    <DESCRIPTION>The enum type 'Eigen::internal::general_matrix_vector_product&lt;__int64,float,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,0&gt;,std::array&lt;__int64,1&gt;,4,1,0,16&gt;,0,0,float,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,1,16&gt;,0,0&gt;::run::__l4::&lt;unnamed-enum-AllAligned&gt;' is unscoped. Prefer 'enum class' over 'enum' (Enum.3).</DESCRIPTION>
    <FUNCTION>Eigen::internal::general_matrix_vector_product&lt;__int64,float,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,0&gt;,std::array&lt;__int64,1&gt;,4,1,0,16&gt;,0,0,float,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,1,16&gt;,0,0&gt;::run</FUNCTION>
    <DECORATED>?run@?$general_matrix_vector_product@_JMV?$TensorContractionInputMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$00$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$0A@@std@@V?$array@_J$00@4@$03$00$0A@$0BA@@internal@Eigen@@$0A@$0A@MV?$TensorContractionInputMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$00$0BA@@23@$0A@$0A@@internal@Eigen@@SAX_J0AEBV?$TensorContractionInputMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$00$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$0A@@std@@V?$array@_J$00@4@$03$00$0A@$0BA@@23@AEBV?$TensorContractionInputMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$00$0BA@@23@PEAM0M@Z</DECORATED>
    <FUNCLINE>88</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\Eigen\src\Core\products\</FILEPATH>
      <FILENAME>GeneralMatrixVector.h</FILENAME>
      <LINE>134</LINE>
      <COLUMN>38</COLUMN>
    </SFA>
    <DEFECTCODE>26812</DEFECTCODE>
    <DESCRIPTION>The enum type 'Eigen::internal::general_matrix_vector_product&lt;__int64,float,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,0&gt;,std::array&lt;__int64,1&gt;,4,1,0,16&gt;,0,0,float,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,16&gt;,0,0&gt;::run::__l4::&lt;unnamed-enum-AllAligned&gt;' is unscoped. Prefer 'enum class' over 'enum' (Enum.3).</DESCRIPTION>
    <FUNCTION>Eigen::internal::general_matrix_vector_product&lt;__int64,float,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,0&gt;,std::array&lt;__int64,1&gt;,4,1,0,16&gt;,0,0,float,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,16&gt;,0,0&gt;::run</FUNCTION>
    <DECORATED>?run@?$general_matrix_vector_product@_JMV?$TensorContractionInputMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$00$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$0A@@std@@V?$array@_J$00@4@$03$00$0A@$0BA@@internal@Eigen@@$0A@$0A@MV?$TensorContractionInputMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0A@$0BA@@23@$0A@$0A@@internal@Eigen@@SAX_J0AEBV?$TensorContractionInputMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$00$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$0A@@std@@V?$array@_J$00@4@$03$00$0A@$0BA@@23@AEBV?$TensorContractionInputMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0A@$0BA@@23@PEAM0M@Z</DECORATED>
    <FUNCLINE>88</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\Eigen\src\Core\products\</FILEPATH>
      <FILENAME>GeneralMatrixVector.h</FILENAME>
      <LINE>134</LINE>
      <COLUMN>38</COLUMN>
    </SFA>
    <DEFECTCODE>26812</DEFECTCODE>
    <DESCRIPTION>The enum type 'Eigen::internal::general_matrix_vector_product&lt;__int64,float,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,0&gt;,std::array&lt;__int64,1&gt;,4,1,0,16&gt;,0,0,float,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,1,16&gt;,0,0&gt;::run::__l4::&lt;unnamed-enum-AllAligned&gt;' is unscoped. Prefer 'enum class' over 'enum' (Enum.3).</DESCRIPTION>
    <FUNCTION>Eigen::internal::general_matrix_vector_product&lt;__int64,float,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,0&gt;,std::array&lt;__int64,1&gt;,4,1,0,16&gt;,0,0,float,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,1,16&gt;,0,0&gt;::run</FUNCTION>
    <DECORATED>?run@?$general_matrix_vector_product@_JMV?$TensorContractionInputMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$00$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$0A@@std@@V?$array@_J$00@4@$03$00$0A@$0BA@@internal@Eigen@@$0A@$0A@MV?$TensorContractionInputMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$00$0BA@@23@$0A@$0A@@internal@Eigen@@SAX_J0AEBV?$TensorContractionInputMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$00$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$0A@@std@@V?$array@_J$00@4@$03$00$0A@$0BA@@23@AEBV?$TensorContractionInputMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$00$0BA@@23@PEAM0M@Z</DECORATED>
    <FUNCLINE>88</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\Eigen\src\Core\products\</FILEPATH>
      <FILENAME>GeneralMatrixVector.h</FILENAME>
      <LINE>134</LINE>
      <COLUMN>38</COLUMN>
    </SFA>
    <DEFECTCODE>26812</DEFECTCODE>
    <DESCRIPTION>The enum type 'Eigen::internal::general_matrix_vector_product&lt;__int64,float,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,0&gt;,std::array&lt;__int64,1&gt;,4,1,0,16&gt;,0,0,float,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,16&gt;,0,0&gt;::run::__l4::&lt;unnamed-enum-AllAligned&gt;' is unscoped. Prefer 'enum class' over 'enum' (Enum.3).</DESCRIPTION>
    <FUNCTION>Eigen::internal::general_matrix_vector_product&lt;__int64,float,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,0&gt;,std::array&lt;__int64,1&gt;,4,1,0,16&gt;,0,0,float,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,16&gt;,0,0&gt;::run</FUNCTION>
    <DECORATED>?run@?$general_matrix_vector_product@_JMV?$TensorContractionInputMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$00$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$0A@@std@@V?$array@_J$00@4@$03$00$0A@$0BA@@internal@Eigen@@$0A@$0A@MV?$TensorContractionInputMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0A@$0BA@@23@$0A@$0A@@internal@Eigen@@SAX_J0AEBV?$TensorContractionInputMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$00$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$0A@@std@@V?$array@_J$00@4@$03$00$0A@$0BA@@23@AEBV?$TensorContractionInputMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0A@$0BA@@23@PEAM0M@Z</DECORATED>
    <FUNCLINE>88</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\Eigen\src\Core\products\</FILEPATH>
      <FILENAME>GeneralMatrixVector.h</FILENAME>
      <LINE>134</LINE>
      <COLUMN>38</COLUMN>
    </SFA>
    <DEFECTCODE>26812</DEFECTCODE>
    <DESCRIPTION>The enum type 'Eigen::internal::general_matrix_vector_product&lt;__int64,float,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,0&gt;,std::array&lt;__int64,1&gt;,4,0,0,16&gt;,0,0,float,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,1,16&gt;,0,0&gt;::run::__l4::&lt;unnamed-enum-AllAligned&gt;' is unscoped. Prefer 'enum class' over 'enum' (Enum.3).</DESCRIPTION>
    <FUNCTION>Eigen::internal::general_matrix_vector_product&lt;__int64,float,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,0&gt;,std::array&lt;__int64,1&gt;,4,0,0,16&gt;,0,0,float,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,1,16&gt;,0,0&gt;::run</FUNCTION>
    <DECORATED>?run@?$general_matrix_vector_product@_JMV?$TensorContractionInputMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$00$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$0A@@std@@V?$array@_J$00@4@$03$0A@$0A@$0BA@@internal@Eigen@@$0A@$0A@MV?$TensorContractionInputMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$00$0BA@@23@$0A@$0A@@internal@Eigen@@SAX_J0AEBV?$TensorContractionInputMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$00$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$0A@@std@@V?$array@_J$00@4@$03$0A@$0A@$0BA@@23@AEBV?$TensorContractionInputMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$00$0BA@@23@PEAM0M@Z</DECORATED>
    <FUNCLINE>88</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\Eigen\src\Core\products\</FILEPATH>
      <FILENAME>GeneralMatrixVector.h</FILENAME>
      <LINE>134</LINE>
      <COLUMN>38</COLUMN>
    </SFA>
    <DEFECTCODE>26812</DEFECTCODE>
    <DESCRIPTION>The enum type 'Eigen::internal::general_matrix_vector_product&lt;__int64,float,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,0&gt;,std::array&lt;__int64,1&gt;,4,0,0,16&gt;,0,0,float,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,16&gt;,0,0&gt;::run::__l4::&lt;unnamed-enum-AllAligned&gt;' is unscoped. Prefer 'enum class' over 'enum' (Enum.3).</DESCRIPTION>
    <FUNCTION>Eigen::internal::general_matrix_vector_product&lt;__int64,float,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,0&gt;,std::array&lt;__int64,1&gt;,4,0,0,16&gt;,0,0,float,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,16&gt;,0,0&gt;::run</FUNCTION>
    <DECORATED>?run@?$general_matrix_vector_product@_JMV?$TensorContractionInputMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$00$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$0A@@std@@V?$array@_J$00@4@$03$0A@$0A@$0BA@@internal@Eigen@@$0A@$0A@MV?$TensorContractionInputMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0A@$0BA@@23@$0A@$0A@@internal@Eigen@@SAX_J0AEBV?$TensorContractionInputMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$00$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$0A@@std@@V?$array@_J$00@4@$03$0A@$0A@$0BA@@23@AEBV?$TensorContractionInputMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0A@$0BA@@23@PEAM0M@Z</DECORATED>
    <FUNCLINE>88</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\Eigen\src\Core\products\</FILEPATH>
      <FILENAME>GeneralMatrixVector.h</FILENAME>
      <LINE>134</LINE>
      <COLUMN>38</COLUMN>
    </SFA>
    <DEFECTCODE>26812</DEFECTCODE>
    <DESCRIPTION>The enum type 'Eigen::internal::general_matrix_vector_product&lt;__int64,float,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,0&gt;,std::array&lt;__int64,1&gt;,4,0,0,16&gt;,0,0,float,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,1,16&gt;,0,0&gt;::run::__l4::&lt;unnamed-enum-AllAligned&gt;' is unscoped. Prefer 'enum class' over 'enum' (Enum.3).</DESCRIPTION>
    <FUNCTION>Eigen::internal::general_matrix_vector_product&lt;__int64,float,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,0&gt;,std::array&lt;__int64,1&gt;,4,0,0,16&gt;,0,0,float,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,1,16&gt;,0,0&gt;::run</FUNCTION>
    <DECORATED>?run@?$general_matrix_vector_product@_JMV?$TensorContractionInputMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$00$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$0A@@std@@V?$array@_J$00@4@$03$0A@$0A@$0BA@@internal@Eigen@@$0A@$0A@MV?$TensorContractionInputMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$00$0BA@@23@$0A@$0A@@internal@Eigen@@SAX_J0AEBV?$TensorContractionInputMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$00$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$0A@@std@@V?$array@_J$00@4@$03$0A@$0A@$0BA@@23@AEBV?$TensorContractionInputMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$00$0BA@@23@PEAM0M@Z</DECORATED>
    <FUNCLINE>88</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\Eigen\src\Core\products\</FILEPATH>
      <FILENAME>GeneralMatrixVector.h</FILENAME>
      <LINE>134</LINE>
      <COLUMN>38</COLUMN>
    </SFA>
    <DEFECTCODE>26812</DEFECTCODE>
    <DESCRIPTION>The enum type 'Eigen::internal::general_matrix_vector_product&lt;__int64,float,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,0&gt;,std::array&lt;__int64,1&gt;,4,0,0,16&gt;,0,0,float,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,16&gt;,0,0&gt;::run::__l4::&lt;unnamed-enum-AllAligned&gt;' is unscoped. Prefer 'enum class' over 'enum' (Enum.3).</DESCRIPTION>
    <FUNCTION>Eigen::internal::general_matrix_vector_product&lt;__int64,float,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,0&gt;,std::array&lt;__int64,1&gt;,4,0,0,16&gt;,0,0,float,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,16&gt;,0,0&gt;::run</FUNCTION>
    <DECORATED>?run@?$general_matrix_vector_product@_JMV?$TensorContractionInputMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$00$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$0A@@std@@V?$array@_J$00@4@$03$0A@$0A@$0BA@@internal@Eigen@@$0A@$0A@MV?$TensorContractionInputMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0A@$0BA@@23@$0A@$0A@@internal@Eigen@@SAX_J0AEBV?$TensorContractionInputMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$00$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$0A@@std@@V?$array@_J$00@4@$03$0A@$0A@$0BA@@23@AEBV?$TensorContractionInputMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0A@$0BA@@23@PEAM0M@Z</DECORATED>
    <FUNCLINE>88</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContractionMapper.h</FILENAME>
      <LINE>159</LINE>
      <COLUMN>6</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>Ill-defined for-loop:  initial condition does not satisfy test.  Loop body not executed.</DESCRIPTION>
    <FUNCTION>Eigen::internal::SimpleTensorContractionMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,0&gt;,std::array&lt;__int64,1&gt;,4,0,0&gt;::computeIndexPair</FUNCTION>
    <DECORATED>?computeIndexPair@?$SimpleTensorContractionMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$00$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$0A@@std@@V?$array@_J$00@4@$03$0A@$0A@@internal@Eigen@@QEBA?AU?$IndexPair@_J@3@_J0_J@Z</DECORATED>
    <FUNCLINE>153</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContractionMapper.h</FILENAME>
      <LINE>179</LINE>
      <COLUMN>6</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>Ill-defined for-loop:  initial condition does not satisfy test.  Loop body not executed.</DESCRIPTION>
    <FUNCTION>Eigen::internal::SimpleTensorContractionMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,0&gt;,std::array&lt;__int64,1&gt;,4,0,0&gt;::computeIndexPair</FUNCTION>
    <DECORATED>?computeIndexPair@?$SimpleTensorContractionMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$00$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$0A@@std@@V?$array@_J$00@4@$03$0A@$0A@@internal@Eigen@@QEBA?AU?$IndexPair@_J@3@_J0_J@Z</DECORATED>
    <FUNCLINE>153</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContractionMapper.h</FILENAME>
      <LINE>159</LINE>
      <COLUMN>6</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>Ill-defined for-loop:  initial condition does not satisfy test.  Loop body not executed.</DESCRIPTION>
    <FUNCTION>Eigen::internal::SimpleTensorContractionMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,0&gt;,std::array&lt;__int64,1&gt;,4,1,0&gt;::computeIndexPair</FUNCTION>
    <DECORATED>?computeIndexPair@?$SimpleTensorContractionMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$00$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$0A@@std@@V?$array@_J$00@4@$03$00$0A@@internal@Eigen@@QEBA?AU?$IndexPair@_J@3@_J0_J@Z</DECORATED>
    <FUNCLINE>153</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContractionMapper.h</FILENAME>
      <LINE>179</LINE>
      <COLUMN>6</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>Ill-defined for-loop:  initial condition does not satisfy test.  Loop body not executed.</DESCRIPTION>
    <FUNCTION>Eigen::internal::SimpleTensorContractionMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,0&gt;,std::array&lt;__int64,1&gt;,4,1,0&gt;::computeIndexPair</FUNCTION>
    <DECORATED>?computeIndexPair@?$SimpleTensorContractionMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$00$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$0A@@std@@V?$array@_J$00@4@$03$00$0A@@internal@Eigen@@QEBA?AU?$IndexPair@_J@3@_J0_J@Z</DECORATED>
    <FUNCLINE>153</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContractionMapper.h</FILENAME>
      <LINE>159</LINE>
      <COLUMN>6</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>Ill-defined for-loop:  initial condition does not satisfy test.  Loop body not executed.</DESCRIPTION>
    <FUNCTION>Eigen::internal::SimpleTensorContractionMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0&gt;::computeIndexPair</FUNCTION>
    <DECORATED>?computeIndexPair@?$SimpleTensorContractionMapper@M_J$00U?$TensorEvaluator@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$01$0A@_J@3@$$CBV43@@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0A@@internal@Eigen@@QEBA?AU?$IndexPair@_J@3@_J0_J@Z</DECORATED>
    <FUNCLINE>153</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContractionMapper.h</FILENAME>
      <LINE>179</LINE>
      <COLUMN>6</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>Ill-defined for-loop:  initial condition does not satisfy test.  Loop body not executed.</DESCRIPTION>
    <FUNCTION>Eigen::internal::SimpleTensorContractionMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0&gt;::computeIndexPair</FUNCTION>
    <DECORATED>?computeIndexPair@?$SimpleTensorContractionMapper@M_J$00U?$TensorEvaluator@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$01$0A@_J@3@$$CBV43@@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0A@@internal@Eigen@@QEBA?AU?$IndexPair@_J@3@_J0_J@Z</DECORATED>
    <FUNCLINE>153</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContractionMapper.h</FILENAME>
      <LINE>159</LINE>
      <COLUMN>6</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>Ill-defined for-loop:  initial condition does not satisfy test.  Loop body not executed.</DESCRIPTION>
    <FUNCTION>Eigen::internal::SimpleTensorContractionMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0&gt;::computeIndexPair</FUNCTION>
    <DECORATED>?computeIndexPair@?$SimpleTensorContractionMapper@M_J$00U?$TensorEvaluator@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$01$0A@_J@3@$$CBV43@@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0A@@internal@Eigen@@QEBA?AU?$IndexPair@_J@3@_J0_J@Z</DECORATED>
    <FUNCLINE>153</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContractionMapper.h</FILENAME>
      <LINE>179</LINE>
      <COLUMN>6</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>Ill-defined for-loop:  initial condition does not satisfy test.  Loop body not executed.</DESCRIPTION>
    <FUNCTION>Eigen::internal::SimpleTensorContractionMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0&gt;::computeIndexPair</FUNCTION>
    <DECORATED>?computeIndexPair@?$SimpleTensorContractionMapper@M_J$00U?$TensorEvaluator@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$01$0A@_J@3@$$CBV43@@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0A@@internal@Eigen@@QEBA?AU?$IndexPair@_J@3@_J0_J@Z</DECORATED>
    <FUNCLINE>153</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContractionMapper.h</FILENAME>
      <LINE>159</LINE>
      <COLUMN>6</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>Ill-defined for-loop:  initial condition does not satisfy test.  Loop body not executed.</DESCRIPTION>
    <FUNCTION>Eigen::internal::SimpleTensorContractionMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,3,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0&gt;::computeIndexPair</FUNCTION>
    <DECORATED>?computeIndexPair@?$SimpleTensorContractionMapper@M_J$00U?$TensorEvaluator@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$01$0A@_J@3@$$CBV?$Tensor@M$02$0A@_J@3@@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0A@@internal@Eigen@@QEBA?AU?$IndexPair@_J@3@_J0_J@Z</DECORATED>
    <FUNCLINE>153</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContractionMapper.h</FILENAME>
      <LINE>179</LINE>
      <COLUMN>6</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>Ill-defined for-loop:  initial condition does not satisfy test.  Loop body not executed.</DESCRIPTION>
    <FUNCTION>Eigen::internal::SimpleTensorContractionMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,3,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0&gt;::computeIndexPair</FUNCTION>
    <DECORATED>?computeIndexPair@?$SimpleTensorContractionMapper@M_J$00U?$TensorEvaluator@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$01$0A@_J@3@$$CBV?$Tensor@M$02$0A@_J@3@@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0A@@internal@Eigen@@QEBA?AU?$IndexPair@_J@3@_J0_J@Z</DECORATED>
    <FUNCLINE>153</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContractionMapper.h</FILENAME>
      <LINE>159</LINE>
      <COLUMN>6</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>Ill-defined for-loop:  initial condition does not satisfy test.  Loop body not executed.</DESCRIPTION>
    <FUNCTION>Eigen::internal::SimpleTensorContractionMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,3,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0&gt;::computeIndexPair</FUNCTION>
    <DECORATED>?computeIndexPair@?$SimpleTensorContractionMapper@M_J$00U?$TensorEvaluator@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$01$0A@_J@3@$$CBV?$Tensor@M$02$0A@_J@3@@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0A@@internal@Eigen@@QEBA?AU?$IndexPair@_J@3@_J0_J@Z</DECORATED>
    <FUNCLINE>153</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContractionMapper.h</FILENAME>
      <LINE>179</LINE>
      <COLUMN>6</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>Ill-defined for-loop:  initial condition does not satisfy test.  Loop body not executed.</DESCRIPTION>
    <FUNCTION>Eigen::internal::SimpleTensorContractionMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,3,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0&gt;::computeIndexPair</FUNCTION>
    <DECORATED>?computeIndexPair@?$SimpleTensorContractionMapper@M_J$00U?$TensorEvaluator@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$01$0A@_J@3@$$CBV?$Tensor@M$02$0A@_J@3@@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0A@@internal@Eigen@@QEBA?AU?$IndexPair@_J@3@_J0_J@Z</DECORATED>
    <FUNCLINE>153</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContractionMapper.h</FILENAME>
      <LINE>159</LINE>
      <COLUMN>6</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>Ill-defined for-loop:  initial condition does not satisfy test.  Loop body not executed.</DESCRIPTION>
    <FUNCTION>Eigen::internal::SimpleTensorContractionMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0&gt;::computeIndexPair</FUNCTION>
    <DECORATED>?computeIndexPair@?$SimpleTensorContractionMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0A@@internal@Eigen@@QEBA?AU?$IndexPair@_J@3@_J0_J@Z</DECORATED>
    <FUNCLINE>153</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContractionMapper.h</FILENAME>
      <LINE>179</LINE>
      <COLUMN>6</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>Ill-defined for-loop:  initial condition does not satisfy test.  Loop body not executed.</DESCRIPTION>
    <FUNCTION>Eigen::internal::SimpleTensorContractionMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0&gt;::computeIndexPair</FUNCTION>
    <DECORATED>?computeIndexPair@?$SimpleTensorContractionMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0A@@internal@Eigen@@QEBA?AU?$IndexPair@_J@3@_J0_J@Z</DECORATED>
    <FUNCLINE>153</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContractionMapper.h</FILENAME>
      <LINE>159</LINE>
      <COLUMN>6</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>Ill-defined for-loop:  initial condition does not satisfy test.  Loop body not executed.</DESCRIPTION>
    <FUNCTION>Eigen::internal::SimpleTensorContractionMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0&gt;::computeIndexPair</FUNCTION>
    <DECORATED>?computeIndexPair@?$SimpleTensorContractionMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0A@@internal@Eigen@@QEBA?AU?$IndexPair@_J@3@_J0_J@Z</DECORATED>
    <FUNCLINE>153</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContractionMapper.h</FILENAME>
      <LINE>179</LINE>
      <COLUMN>6</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>Ill-defined for-loop:  initial condition does not satisfy test.  Loop body not executed.</DESCRIPTION>
    <FUNCTION>Eigen::internal::SimpleTensorContractionMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0&gt;::computeIndexPair</FUNCTION>
    <DECORATED>?computeIndexPair@?$SimpleTensorContractionMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0A@@internal@Eigen@@QEBA?AU?$IndexPair@_J@3@_J0_J@Z</DECORATED>
    <FUNCLINE>153</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContractionMapper.h</FILENAME>
      <LINE>159</LINE>
      <COLUMN>6</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>Ill-defined for-loop:  initial condition does not satisfy test.  Loop body not executed.</DESCRIPTION>
    <FUNCTION>Eigen::internal::SimpleTensorContractionMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0&gt;::computeIndexPair</FUNCTION>
    <DECORATED>?computeIndexPair@?$SimpleTensorContractionMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0A@@internal@Eigen@@QEBA?AU?$IndexPair@_J@3@_J0_J@Z</DECORATED>
    <FUNCLINE>153</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContractionMapper.h</FILENAME>
      <LINE>179</LINE>
      <COLUMN>6</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>Ill-defined for-loop:  initial condition does not satisfy test.  Loop body not executed.</DESCRIPTION>
    <FUNCTION>Eigen::internal::SimpleTensorContractionMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0&gt;::computeIndexPair</FUNCTION>
    <DECORATED>?computeIndexPair@?$SimpleTensorContractionMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0A@@internal@Eigen@@QEBA?AU?$IndexPair@_J@3@_J0_J@Z</DECORATED>
    <FUNCLINE>153</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContractionMapper.h</FILENAME>
      <LINE>159</LINE>
      <COLUMN>6</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>Ill-defined for-loop:  initial condition does not satisfy test.  Loop body not executed.</DESCRIPTION>
    <FUNCTION>Eigen::internal::SimpleTensorContractionMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0&gt;::computeIndexPair</FUNCTION>
    <DECORATED>?computeIndexPair@?$SimpleTensorContractionMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0A@@internal@Eigen@@QEBA?AU?$IndexPair@_J@3@_J0_J@Z</DECORATED>
    <FUNCLINE>153</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContractionMapper.h</FILENAME>
      <LINE>179</LINE>
      <COLUMN>6</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>Ill-defined for-loop:  initial condition does not satisfy test.  Loop body not executed.</DESCRIPTION>
    <FUNCTION>Eigen::internal::SimpleTensorContractionMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0&gt;::computeIndexPair</FUNCTION>
    <DECORATED>?computeIndexPair@?$SimpleTensorContractionMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0A@@internal@Eigen@@QEBA?AU?$IndexPair@_J@3@_J0_J@Z</DECORATED>
    <FUNCLINE>153</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContractionMapper.h</FILENAME>
      <LINE>119</LINE>
      <COLUMN>4</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>Ill-defined for-loop:  initial condition does not satisfy test.  Loop body not executed.</DESCRIPTION>
    <FUNCTION>Eigen::internal::SimpleTensorContractionMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::TensorMap&lt;Eigen::Tensor&lt;float,2,0,__int64&gt;,0,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0&gt;::computeIndex</FUNCTION>
    <DECORATED>?computeIndex@?$SimpleTensorContractionMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$TensorMap@V?$Tensor@M$01$0A@_J@Eigen@@$0A@UMakePointer@2@@Eigen@@UDefaultDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0A@@internal@Eigen@@QEBA_J_J0@Z</DECORATED>
    <FUNCLINE>114</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContractionMapper.h</FILENAME>
      <LINE>135</LINE>
      <COLUMN>6</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>Ill-defined for-loop:  initial condition does not satisfy test.  Loop body not executed.</DESCRIPTION>
    <FUNCTION>Eigen::internal::SimpleTensorContractionMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::TensorMap&lt;Eigen::Tensor&lt;float,2,0,__int64&gt;,0,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0&gt;::computeIndex</FUNCTION>
    <DECORATED>?computeIndex@?$SimpleTensorContractionMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$TensorMap@V?$Tensor@M$01$0A@_J@Eigen@@$0A@UMakePointer@2@@Eigen@@UDefaultDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0A@@internal@Eigen@@QEBA_J_J0@Z</DECORATED>
    <FUNCLINE>114</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContractionMapper.h</FILENAME>
      <LINE>119</LINE>
      <COLUMN>4</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>Ill-defined for-loop:  initial condition does not satisfy test.  Loop body not executed.</DESCRIPTION>
    <FUNCTION>Eigen::internal::SimpleTensorContractionMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::TensorMap&lt;Eigen::Tensor&lt;float,2,0,__int64&gt;,0,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0&gt;::computeIndex</FUNCTION>
    <DECORATED>?computeIndex@?$SimpleTensorContractionMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$TensorMap@V?$Tensor@M$01$0A@_J@Eigen@@$0A@UMakePointer@2@@Eigen@@UDefaultDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0A@@internal@Eigen@@QEBA_J_J0@Z</DECORATED>
    <FUNCLINE>114</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContractionMapper.h</FILENAME>
      <LINE>135</LINE>
      <COLUMN>6</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>Ill-defined for-loop:  initial condition does not satisfy test.  Loop body not executed.</DESCRIPTION>
    <FUNCTION>Eigen::internal::SimpleTensorContractionMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::TensorMap&lt;Eigen::Tensor&lt;float,2,0,__int64&gt;,0,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0&gt;::computeIndex</FUNCTION>
    <DECORATED>?computeIndex@?$SimpleTensorContractionMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$TensorMap@V?$Tensor@M$01$0A@_J@Eigen@@$0A@UMakePointer@2@@Eigen@@UDefaultDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0A@@internal@Eigen@@QEBA_J_J0@Z</DECORATED>
    <FUNCLINE>114</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContractionMapper.h</FILENAME>
      <LINE>119</LINE>
      <COLUMN>4</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>Ill-defined for-loop:  initial condition does not satisfy test.  Loop body not executed.</DESCRIPTION>
    <FUNCTION>Eigen::internal::SimpleTensorContractionMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,16&gt;::computeIndex</FUNCTION>
    <DECORATED>?computeIndex@?$SimpleTensorContractionMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0BA@@internal@Eigen@@QEBA_J_J0@Z</DECORATED>
    <FUNCLINE>114</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContractionMapper.h</FILENAME>
      <LINE>135</LINE>
      <COLUMN>6</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>Ill-defined for-loop:  initial condition does not satisfy test.  Loop body not executed.</DESCRIPTION>
    <FUNCTION>Eigen::internal::SimpleTensorContractionMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,16&gt;::computeIndex</FUNCTION>
    <DECORATED>?computeIndex@?$SimpleTensorContractionMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0BA@@internal@Eigen@@QEBA_J_J0@Z</DECORATED>
    <FUNCLINE>114</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContractionMapper.h</FILENAME>
      <LINE>119</LINE>
      <COLUMN>4</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>Ill-defined for-loop:  initial condition does not satisfy test.  Loop body not executed.</DESCRIPTION>
    <FUNCTION>Eigen::internal::SimpleTensorContractionMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,16&gt;::computeIndex</FUNCTION>
    <DECORATED>?computeIndex@?$SimpleTensorContractionMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0BA@@internal@Eigen@@QEBA_J_J0@Z</DECORATED>
    <FUNCLINE>114</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContractionMapper.h</FILENAME>
      <LINE>135</LINE>
      <COLUMN>6</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>Ill-defined for-loop:  initial condition does not satisfy test.  Loop body not executed.</DESCRIPTION>
    <FUNCTION>Eigen::internal::SimpleTensorContractionMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,16&gt;::computeIndex</FUNCTION>
    <DECORATED>?computeIndex@?$SimpleTensorContractionMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0BA@@internal@Eigen@@QEBA_J_J0@Z</DECORATED>
    <FUNCLINE>114</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContractionMapper.h</FILENAME>
      <LINE>119</LINE>
      <COLUMN>4</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>Ill-defined for-loop:  initial condition does not satisfy test.  Loop body not executed.</DESCRIPTION>
    <FUNCTION>Eigen::internal::SimpleTensorContractionMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::DefaultDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,16&gt;::computeIndex</FUNCTION>
    <DECORATED>?computeIndex@?$SimpleTensorContractionMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UDefaultDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0BA@@internal@Eigen@@QEBA_J_J0@Z</DECORATED>
    <FUNCLINE>114</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContractionMapper.h</FILENAME>
      <LINE>135</LINE>
      <COLUMN>6</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>Ill-defined for-loop:  initial condition does not satisfy test.  Loop body not executed.</DESCRIPTION>
    <FUNCTION>Eigen::internal::SimpleTensorContractionMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::DefaultDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,16&gt;::computeIndex</FUNCTION>
    <DECORATED>?computeIndex@?$SimpleTensorContractionMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UDefaultDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0BA@@internal@Eigen@@QEBA_J_J0@Z</DECORATED>
    <FUNCLINE>114</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContractionMapper.h</FILENAME>
      <LINE>119</LINE>
      <COLUMN>4</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>Ill-defined for-loop:  initial condition does not satisfy test.  Loop body not executed.</DESCRIPTION>
    <FUNCTION>Eigen::internal::SimpleTensorContractionMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::DefaultDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,16&gt;::computeIndex</FUNCTION>
    <DECORATED>?computeIndex@?$SimpleTensorContractionMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UDefaultDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0BA@@internal@Eigen@@QEBA_J_J0@Z</DECORATED>
    <FUNCLINE>114</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContractionMapper.h</FILENAME>
      <LINE>135</LINE>
      <COLUMN>6</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>Ill-defined for-loop:  initial condition does not satisfy test.  Loop body not executed.</DESCRIPTION>
    <FUNCTION>Eigen::internal::SimpleTensorContractionMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::DefaultDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,16&gt;::computeIndex</FUNCTION>
    <DECORATED>?computeIndex@?$SimpleTensorContractionMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UDefaultDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0BA@@internal@Eigen@@QEBA_J_J0@Z</DECORATED>
    <FUNCLINE>114</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContractionMapper.h</FILENAME>
      <LINE>119</LINE>
      <COLUMN>4</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>Ill-defined for-loop:  initial condition does not satisfy test.  Loop body not executed.</DESCRIPTION>
    <FUNCTION>Eigen::internal::SimpleTensorContractionMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,0&gt;,std::array&lt;__int64,1&gt;,4,0,16&gt;::computeIndex</FUNCTION>
    <DECORATED>?computeIndex@?$SimpleTensorContractionMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$00$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$0A@@std@@V?$array@_J$00@4@$03$0A@$0BA@@internal@Eigen@@QEBA_J_J0@Z</DECORATED>
    <FUNCLINE>114</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContractionMapper.h</FILENAME>
      <LINE>135</LINE>
      <COLUMN>6</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>Ill-defined for-loop:  initial condition does not satisfy test.  Loop body not executed.</DESCRIPTION>
    <FUNCTION>Eigen::internal::SimpleTensorContractionMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,0&gt;,std::array&lt;__int64,1&gt;,4,0,16&gt;::computeIndex</FUNCTION>
    <DECORATED>?computeIndex@?$SimpleTensorContractionMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$00$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$0A@@std@@V?$array@_J$00@4@$03$0A@$0BA@@internal@Eigen@@QEBA_J_J0@Z</DECORATED>
    <FUNCLINE>114</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContractionMapper.h</FILENAME>
      <LINE>119</LINE>
      <COLUMN>4</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>Ill-defined for-loop:  initial condition does not satisfy test.  Loop body not executed.</DESCRIPTION>
    <FUNCTION>Eigen::internal::SimpleTensorContractionMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,0&gt;,std::array&lt;__int64,1&gt;,4,1,16&gt;::computeIndex</FUNCTION>
    <DECORATED>?computeIndex@?$SimpleTensorContractionMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$00$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$0A@@std@@V?$array@_J$00@4@$03$00$0BA@@internal@Eigen@@QEBA_J_J0@Z</DECORATED>
    <FUNCLINE>114</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContractionMapper.h</FILENAME>
      <LINE>135</LINE>
      <COLUMN>6</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>Ill-defined for-loop:  initial condition does not satisfy test.  Loop body not executed.</DESCRIPTION>
    <FUNCTION>Eigen::internal::SimpleTensorContractionMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,0&gt;,std::array&lt;__int64,1&gt;,4,1,16&gt;::computeIndex</FUNCTION>
    <DECORATED>?computeIndex@?$SimpleTensorContractionMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$00$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$0A@@std@@V?$array@_J$00@4@$03$00$0BA@@internal@Eigen@@QEBA_J_J0@Z</DECORATED>
    <FUNCLINE>114</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContractionMapper.h</FILENAME>
      <LINE>119</LINE>
      <COLUMN>4</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>Ill-defined for-loop:  initial condition does not satisfy test.  Loop body not executed.</DESCRIPTION>
    <FUNCTION>Eigen::internal::SimpleTensorContractionMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,16&gt;::computeIndex</FUNCTION>
    <DECORATED>?computeIndex@?$SimpleTensorContractionMapper@M_J$00U?$TensorEvaluator@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$01$0A@_J@3@$$CBV43@@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0BA@@internal@Eigen@@QEBA_J_J0@Z</DECORATED>
    <FUNCLINE>114</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContractionMapper.h</FILENAME>
      <LINE>135</LINE>
      <COLUMN>6</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>Ill-defined for-loop:  initial condition does not satisfy test.  Loop body not executed.</DESCRIPTION>
    <FUNCTION>Eigen::internal::SimpleTensorContractionMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,16&gt;::computeIndex</FUNCTION>
    <DECORATED>?computeIndex@?$SimpleTensorContractionMapper@M_J$00U?$TensorEvaluator@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$01$0A@_J@3@$$CBV43@@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0BA@@internal@Eigen@@QEBA_J_J0@Z</DECORATED>
    <FUNCLINE>114</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContractionMapper.h</FILENAME>
      <LINE>119</LINE>
      <COLUMN>4</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>Ill-defined for-loop:  initial condition does not satisfy test.  Loop body not executed.</DESCRIPTION>
    <FUNCTION>Eigen::internal::SimpleTensorContractionMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,16&gt;::computeIndex</FUNCTION>
    <DECORATED>?computeIndex@?$SimpleTensorContractionMapper@M_J$00U?$TensorEvaluator@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$01$0A@_J@3@$$CBV43@@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0BA@@internal@Eigen@@QEBA_J_J0@Z</DECORATED>
    <FUNCLINE>114</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContractionMapper.h</FILENAME>
      <LINE>135</LINE>
      <COLUMN>6</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>Ill-defined for-loop:  initial condition does not satisfy test.  Loop body not executed.</DESCRIPTION>
    <FUNCTION>Eigen::internal::SimpleTensorContractionMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,16&gt;::computeIndex</FUNCTION>
    <DECORATED>?computeIndex@?$SimpleTensorContractionMapper@M_J$00U?$TensorEvaluator@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$01$0A@_J@3@$$CBV43@@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0BA@@internal@Eigen@@QEBA_J_J0@Z</DECORATED>
    <FUNCLINE>114</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContractionMapper.h</FILENAME>
      <LINE>119</LINE>
      <COLUMN>4</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>Ill-defined for-loop:  initial condition does not satisfy test.  Loop body not executed.</DESCRIPTION>
    <FUNCTION>Eigen::internal::SimpleTensorContractionMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,3,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,16&gt;::computeIndex</FUNCTION>
    <DECORATED>?computeIndex@?$SimpleTensorContractionMapper@M_J$00U?$TensorEvaluator@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$01$0A@_J@3@$$CBV?$Tensor@M$02$0A@_J@3@@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0BA@@internal@Eigen@@QEBA_J_J0@Z</DECORATED>
    <FUNCLINE>114</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContractionMapper.h</FILENAME>
      <LINE>135</LINE>
      <COLUMN>6</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>Ill-defined for-loop:  initial condition does not satisfy test.  Loop body not executed.</DESCRIPTION>
    <FUNCTION>Eigen::internal::SimpleTensorContractionMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,3,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,16&gt;::computeIndex</FUNCTION>
    <DECORATED>?computeIndex@?$SimpleTensorContractionMapper@M_J$00U?$TensorEvaluator@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$01$0A@_J@3@$$CBV?$Tensor@M$02$0A@_J@3@@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0BA@@internal@Eigen@@QEBA_J_J0@Z</DECORATED>
    <FUNCLINE>114</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContractionMapper.h</FILENAME>
      <LINE>119</LINE>
      <COLUMN>4</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>Ill-defined for-loop:  initial condition does not satisfy test.  Loop body not executed.</DESCRIPTION>
    <FUNCTION>Eigen::internal::SimpleTensorContractionMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,3,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,16&gt;::computeIndex</FUNCTION>
    <DECORATED>?computeIndex@?$SimpleTensorContractionMapper@M_J$00U?$TensorEvaluator@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$01$0A@_J@3@$$CBV?$Tensor@M$02$0A@_J@3@@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0BA@@internal@Eigen@@QEBA_J_J0@Z</DECORATED>
    <FUNCLINE>114</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContractionMapper.h</FILENAME>
      <LINE>135</LINE>
      <COLUMN>6</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>Ill-defined for-loop:  initial condition does not satisfy test.  Loop body not executed.</DESCRIPTION>
    <FUNCTION>Eigen::internal::SimpleTensorContractionMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,3,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,16&gt;::computeIndex</FUNCTION>
    <DECORATED>?computeIndex@?$SimpleTensorContractionMapper@M_J$00U?$TensorEvaluator@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$01$0A@_J@3@$$CBV?$Tensor@M$02$0A@_J@3@@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0BA@@internal@Eigen@@QEBA_J_J0@Z</DECORATED>
    <FUNCLINE>114</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContractionMapper.h</FILENAME>
      <LINE>119</LINE>
      <COLUMN>4</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>Ill-defined for-loop:  initial condition does not satisfy test.  Loop body not executed.</DESCRIPTION>
    <FUNCTION>Eigen::internal::SimpleTensorContractionMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::DefaultDevice&gt;,std::array&lt;__int64,0&gt;,std::array&lt;__int64,1&gt;,4,0,0&gt;::computeIndex</FUNCTION>
    <DECORATED>?computeIndex@?$SimpleTensorContractionMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$00$0A@_J@Eigen@@UDefaultDevice@2@@Eigen@@V?$array@_J$0A@@std@@V?$array@_J$00@4@$03$0A@$0A@@internal@Eigen@@QEBA_J_J0@Z</DECORATED>
    <FUNCLINE>114</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContractionMapper.h</FILENAME>
      <LINE>135</LINE>
      <COLUMN>6</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>Ill-defined for-loop:  initial condition does not satisfy test.  Loop body not executed.</DESCRIPTION>
    <FUNCTION>Eigen::internal::SimpleTensorContractionMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::DefaultDevice&gt;,std::array&lt;__int64,0&gt;,std::array&lt;__int64,1&gt;,4,0,0&gt;::computeIndex</FUNCTION>
    <DECORATED>?computeIndex@?$SimpleTensorContractionMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$00$0A@_J@Eigen@@UDefaultDevice@2@@Eigen@@V?$array@_J$0A@@std@@V?$array@_J$00@4@$03$0A@$0A@@internal@Eigen@@QEBA_J_J0@Z</DECORATED>
    <FUNCLINE>114</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContractionMapper.h</FILENAME>
      <LINE>119</LINE>
      <COLUMN>4</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>Ill-defined for-loop:  initial condition does not satisfy test.  Loop body not executed.</DESCRIPTION>
    <FUNCTION>Eigen::internal::SimpleTensorContractionMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::DefaultDevice&gt;,std::array&lt;__int64,0&gt;,std::array&lt;__int64,1&gt;,4,0,16&gt;::computeIndex</FUNCTION>
    <DECORATED>?computeIndex@?$SimpleTensorContractionMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$00$0A@_J@Eigen@@UDefaultDevice@2@@Eigen@@V?$array@_J$0A@@std@@V?$array@_J$00@4@$03$0A@$0BA@@internal@Eigen@@QEBA_J_J0@Z</DECORATED>
    <FUNCLINE>114</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContractionMapper.h</FILENAME>
      <LINE>135</LINE>
      <COLUMN>6</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>Ill-defined for-loop:  initial condition does not satisfy test.  Loop body not executed.</DESCRIPTION>
    <FUNCTION>Eigen::internal::SimpleTensorContractionMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::DefaultDevice&gt;,std::array&lt;__int64,0&gt;,std::array&lt;__int64,1&gt;,4,0,16&gt;::computeIndex</FUNCTION>
    <DECORATED>?computeIndex@?$SimpleTensorContractionMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$00$0A@_J@Eigen@@UDefaultDevice@2@@Eigen@@V?$array@_J$0A@@std@@V?$array@_J$00@4@$03$0A@$0BA@@internal@Eigen@@QEBA_J_J0@Z</DECORATED>
    <FUNCLINE>114</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContractionMapper.h</FILENAME>
      <LINE>119</LINE>
      <COLUMN>4</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>Ill-defined for-loop:  initial condition does not satisfy test.  Loop body not executed.</DESCRIPTION>
    <FUNCTION>Eigen::internal::SimpleTensorContractionMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::DefaultDevice&gt;,std::array&lt;__int64,0&gt;,std::array&lt;__int64,1&gt;,4,1,0&gt;::computeIndex</FUNCTION>
    <DECORATED>?computeIndex@?$SimpleTensorContractionMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$00$0A@_J@Eigen@@UDefaultDevice@2@@Eigen@@V?$array@_J$0A@@std@@V?$array@_J$00@4@$03$00$0A@@internal@Eigen@@QEBA_J_J0@Z</DECORATED>
    <FUNCLINE>114</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContractionMapper.h</FILENAME>
      <LINE>135</LINE>
      <COLUMN>6</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>Ill-defined for-loop:  initial condition does not satisfy test.  Loop body not executed.</DESCRIPTION>
    <FUNCTION>Eigen::internal::SimpleTensorContractionMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::DefaultDevice&gt;,std::array&lt;__int64,0&gt;,std::array&lt;__int64,1&gt;,4,1,0&gt;::computeIndex</FUNCTION>
    <DECORATED>?computeIndex@?$SimpleTensorContractionMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$00$0A@_J@Eigen@@UDefaultDevice@2@@Eigen@@V?$array@_J$0A@@std@@V?$array@_J$00@4@$03$00$0A@@internal@Eigen@@QEBA_J_J0@Z</DECORATED>
    <FUNCLINE>114</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContractionMapper.h</FILENAME>
      <LINE>119</LINE>
      <COLUMN>4</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>Ill-defined for-loop:  initial condition does not satisfy test.  Loop body not executed.</DESCRIPTION>
    <FUNCTION>Eigen::internal::SimpleTensorContractionMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::DefaultDevice&gt;,std::array&lt;__int64,0&gt;,std::array&lt;__int64,1&gt;,4,1,16&gt;::computeIndex</FUNCTION>
    <DECORATED>?computeIndex@?$SimpleTensorContractionMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$00$0A@_J@Eigen@@UDefaultDevice@2@@Eigen@@V?$array@_J$0A@@std@@V?$array@_J$00@4@$03$00$0BA@@internal@Eigen@@QEBA_J_J0@Z</DECORATED>
    <FUNCLINE>114</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContractionMapper.h</FILENAME>
      <LINE>135</LINE>
      <COLUMN>6</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>Ill-defined for-loop:  initial condition does not satisfy test.  Loop body not executed.</DESCRIPTION>
    <FUNCTION>Eigen::internal::SimpleTensorContractionMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::DefaultDevice&gt;,std::array&lt;__int64,0&gt;,std::array&lt;__int64,1&gt;,4,1,16&gt;::computeIndex</FUNCTION>
    <DECORATED>?computeIndex@?$SimpleTensorContractionMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$00$0A@_J@Eigen@@UDefaultDevice@2@@Eigen@@V?$array@_J$0A@@std@@V?$array@_J$00@4@$03$00$0BA@@internal@Eigen@@QEBA_J_J0@Z</DECORATED>
    <FUNCLINE>114</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContractionMapper.h</FILENAME>
      <LINE>119</LINE>
      <COLUMN>4</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>Ill-defined for-loop:  initial condition does not satisfy test.  Loop body not executed.</DESCRIPTION>
    <FUNCTION>Eigen::internal::SimpleTensorContractionMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,16&gt;::computeIndex</FUNCTION>
    <DECORATED>?computeIndex@?$SimpleTensorContractionMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0BA@@internal@Eigen@@QEBA_J_J0@Z</DECORATED>
    <FUNCLINE>114</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContractionMapper.h</FILENAME>
      <LINE>135</LINE>
      <COLUMN>6</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>Ill-defined for-loop:  initial condition does not satisfy test.  Loop body not executed.</DESCRIPTION>
    <FUNCTION>Eigen::internal::SimpleTensorContractionMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,16&gt;::computeIndex</FUNCTION>
    <DECORATED>?computeIndex@?$SimpleTensorContractionMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0BA@@internal@Eigen@@QEBA_J_J0@Z</DECORATED>
    <FUNCLINE>114</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContractionMapper.h</FILENAME>
      <LINE>119</LINE>
      <COLUMN>4</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>Ill-defined for-loop:  initial condition does not satisfy test.  Loop body not executed.</DESCRIPTION>
    <FUNCTION>Eigen::internal::SimpleTensorContractionMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,16&gt;::computeIndex</FUNCTION>
    <DECORATED>?computeIndex@?$SimpleTensorContractionMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0BA@@internal@Eigen@@QEBA_J_J0@Z</DECORATED>
    <FUNCLINE>114</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContractionMapper.h</FILENAME>
      <LINE>135</LINE>
      <COLUMN>6</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>Ill-defined for-loop:  initial condition does not satisfy test.  Loop body not executed.</DESCRIPTION>
    <FUNCTION>Eigen::internal::SimpleTensorContractionMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,16&gt;::computeIndex</FUNCTION>
    <DECORATED>?computeIndex@?$SimpleTensorContractionMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0BA@@internal@Eigen@@QEBA_J_J0@Z</DECORATED>
    <FUNCLINE>114</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContractionMapper.h</FILENAME>
      <LINE>119</LINE>
      <COLUMN>4</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>Ill-defined for-loop:  initial condition does not satisfy test.  Loop body not executed.</DESCRIPTION>
    <FUNCTION>Eigen::internal::SimpleTensorContractionMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::DefaultDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0&gt;::computeIndex</FUNCTION>
    <DECORATED>?computeIndex@?$SimpleTensorContractionMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UDefaultDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0A@@internal@Eigen@@QEBA_J_J0@Z</DECORATED>
    <FUNCLINE>114</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContractionMapper.h</FILENAME>
      <LINE>135</LINE>
      <COLUMN>6</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>Ill-defined for-loop:  initial condition does not satisfy test.  Loop body not executed.</DESCRIPTION>
    <FUNCTION>Eigen::internal::SimpleTensorContractionMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::DefaultDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0&gt;::computeIndex</FUNCTION>
    <DECORATED>?computeIndex@?$SimpleTensorContractionMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UDefaultDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0A@@internal@Eigen@@QEBA_J_J0@Z</DECORATED>
    <FUNCLINE>114</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContractionMapper.h</FILENAME>
      <LINE>119</LINE>
      <COLUMN>4</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>Ill-defined for-loop:  initial condition does not satisfy test.  Loop body not executed.</DESCRIPTION>
    <FUNCTION>Eigen::internal::SimpleTensorContractionMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::DefaultDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,16&gt;::computeIndex</FUNCTION>
    <DECORATED>?computeIndex@?$SimpleTensorContractionMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UDefaultDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0BA@@internal@Eigen@@QEBA_J_J0@Z</DECORATED>
    <FUNCLINE>114</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContractionMapper.h</FILENAME>
      <LINE>135</LINE>
      <COLUMN>6</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>Ill-defined for-loop:  initial condition does not satisfy test.  Loop body not executed.</DESCRIPTION>
    <FUNCTION>Eigen::internal::SimpleTensorContractionMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::DefaultDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,16&gt;::computeIndex</FUNCTION>
    <DECORATED>?computeIndex@?$SimpleTensorContractionMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UDefaultDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0BA@@internal@Eigen@@QEBA_J_J0@Z</DECORATED>
    <FUNCLINE>114</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContractionMapper.h</FILENAME>
      <LINE>119</LINE>
      <COLUMN>4</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>Ill-defined for-loop:  initial condition does not satisfy test.  Loop body not executed.</DESCRIPTION>
    <FUNCTION>Eigen::internal::SimpleTensorContractionMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::DefaultDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0&gt;::computeIndex</FUNCTION>
    <DECORATED>?computeIndex@?$SimpleTensorContractionMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UDefaultDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0A@@internal@Eigen@@QEBA_J_J0@Z</DECORATED>
    <FUNCLINE>114</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContractionMapper.h</FILENAME>
      <LINE>135</LINE>
      <COLUMN>6</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>Ill-defined for-loop:  initial condition does not satisfy test.  Loop body not executed.</DESCRIPTION>
    <FUNCTION>Eigen::internal::SimpleTensorContractionMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::DefaultDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0&gt;::computeIndex</FUNCTION>
    <DECORATED>?computeIndex@?$SimpleTensorContractionMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UDefaultDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0A@@internal@Eigen@@QEBA_J_J0@Z</DECORATED>
    <FUNCLINE>114</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContractionMapper.h</FILENAME>
      <LINE>119</LINE>
      <COLUMN>4</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>Ill-defined for-loop:  initial condition does not satisfy test.  Loop body not executed.</DESCRIPTION>
    <FUNCTION>Eigen::internal::SimpleTensorContractionMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::DefaultDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0&gt;::computeIndex</FUNCTION>
    <DECORATED>?computeIndex@?$SimpleTensorContractionMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UDefaultDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0A@@internal@Eigen@@QEBA_J_J0@Z</DECORATED>
    <FUNCLINE>114</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContractionMapper.h</FILENAME>
      <LINE>135</LINE>
      <COLUMN>6</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>Ill-defined for-loop:  initial condition does not satisfy test.  Loop body not executed.</DESCRIPTION>
    <FUNCTION>Eigen::internal::SimpleTensorContractionMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::DefaultDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0&gt;::computeIndex</FUNCTION>
    <DECORATED>?computeIndex@?$SimpleTensorContractionMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UDefaultDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0A@@internal@Eigen@@QEBA_J_J0@Z</DECORATED>
    <FUNCLINE>114</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContractionMapper.h</FILENAME>
      <LINE>119</LINE>
      <COLUMN>4</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>Ill-defined for-loop:  initial condition does not satisfy test.  Loop body not executed.</DESCRIPTION>
    <FUNCTION>Eigen::internal::SimpleTensorContractionMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::DefaultDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0&gt;::computeIndex</FUNCTION>
    <DECORATED>?computeIndex@?$SimpleTensorContractionMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UDefaultDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0A@@internal@Eigen@@QEBA_J_J0@Z</DECORATED>
    <FUNCLINE>114</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContractionMapper.h</FILENAME>
      <LINE>135</LINE>
      <COLUMN>6</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>Ill-defined for-loop:  initial condition does not satisfy test.  Loop body not executed.</DESCRIPTION>
    <FUNCTION>Eigen::internal::SimpleTensorContractionMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::DefaultDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0&gt;::computeIndex</FUNCTION>
    <DECORATED>?computeIndex@?$SimpleTensorContractionMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UDefaultDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0A@@internal@Eigen@@QEBA_J_J0@Z</DECORATED>
    <FUNCLINE>114</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContractionMapper.h</FILENAME>
      <LINE>119</LINE>
      <COLUMN>4</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>Ill-defined for-loop:  initial condition does not satisfy test.  Loop body not executed.</DESCRIPTION>
    <FUNCTION>Eigen::internal::SimpleTensorContractionMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::DefaultDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,16&gt;::computeIndex</FUNCTION>
    <DECORATED>?computeIndex@?$SimpleTensorContractionMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UDefaultDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0BA@@internal@Eigen@@QEBA_J_J0@Z</DECORATED>
    <FUNCLINE>114</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContractionMapper.h</FILENAME>
      <LINE>135</LINE>
      <COLUMN>6</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>Ill-defined for-loop:  initial condition does not satisfy test.  Loop body not executed.</DESCRIPTION>
    <FUNCTION>Eigen::internal::SimpleTensorContractionMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::DefaultDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,16&gt;::computeIndex</FUNCTION>
    <DECORATED>?computeIndex@?$SimpleTensorContractionMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UDefaultDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0BA@@internal@Eigen@@QEBA_J_J0@Z</DECORATED>
    <FUNCLINE>114</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\Eigen\src\Core\products\</FILEPATH>
      <FILENAME>GeneralMatrixVector.h</FILENAME>
      <LINE>134</LINE>
      <COLUMN>38</COLUMN>
    </SFA>
    <DEFECTCODE>26812</DEFECTCODE>
    <DESCRIPTION>The enum type 'Eigen::internal::general_matrix_vector_product&lt;__int64,float,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::DefaultDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,16&gt;,0,0,float,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::DefaultDevice&gt;,std::array&lt;__int64,0&gt;,std::array&lt;__int64,1&gt;,4,1,1,16&gt;,0,0&gt;::run::__l4::&lt;unnamed-enum-AllAligned&gt;' is unscoped. Prefer 'enum class' over 'enum' (Enum.3).</DESCRIPTION>
    <FUNCTION>Eigen::internal::general_matrix_vector_product&lt;__int64,float,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::DefaultDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,16&gt;,0,0,float,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::DefaultDevice&gt;,std::array&lt;__int64,0&gt;,std::array&lt;__int64,1&gt;,4,1,1,16&gt;,0,0&gt;::run</FUNCTION>
    <DECORATED>?run@?$general_matrix_vector_product@_JMV?$TensorContractionInputMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UDefaultDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0A@$0BA@@internal@Eigen@@$0A@$0A@MV?$TensorContractionInputMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$00$0A@_J@Eigen@@UDefaultDevice@2@@Eigen@@V?$array@_J$0A@@std@@V?$array@_J$00@4@$03$00$00$0BA@@23@$0A@$0A@@internal@Eigen@@SAX_J0AEBV?$TensorContractionInputMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UDefaultDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0A@$0BA@@23@AEBV?$TensorContractionInputMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$00$0A@_J@Eigen@@UDefaultDevice@2@@Eigen@@V?$array@_J$0A@@std@@V?$array@_J$00@4@$03$00$00$0BA@@23@PEAM0M@Z</DECORATED>
    <FUNCLINE>88</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\Eigen\src\Core\products\</FILEPATH>
      <FILENAME>GeneralMatrixVector.h</FILENAME>
      <LINE>134</LINE>
      <COLUMN>38</COLUMN>
    </SFA>
    <DEFECTCODE>26812</DEFECTCODE>
    <DESCRIPTION>The enum type 'Eigen::internal::general_matrix_vector_product&lt;__int64,float,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::DefaultDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,16&gt;,0,0,float,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::DefaultDevice&gt;,std::array&lt;__int64,0&gt;,std::array&lt;__int64,1&gt;,4,1,0,16&gt;,0,0&gt;::run::__l4::&lt;unnamed-enum-AllAligned&gt;' is unscoped. Prefer 'enum class' over 'enum' (Enum.3).</DESCRIPTION>
    <FUNCTION>Eigen::internal::general_matrix_vector_product&lt;__int64,float,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::DefaultDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,16&gt;,0,0,float,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::DefaultDevice&gt;,std::array&lt;__int64,0&gt;,std::array&lt;__int64,1&gt;,4,1,0,16&gt;,0,0&gt;::run</FUNCTION>
    <DECORATED>?run@?$general_matrix_vector_product@_JMV?$TensorContractionInputMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UDefaultDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0A@$0BA@@internal@Eigen@@$0A@$0A@MV?$TensorContractionInputMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$00$0A@_J@Eigen@@UDefaultDevice@2@@Eigen@@V?$array@_J$0A@@std@@V?$array@_J$00@4@$03$00$0A@$0BA@@23@$0A@$0A@@internal@Eigen@@SAX_J0AEBV?$TensorContractionInputMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UDefaultDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0A@$0BA@@23@AEBV?$TensorContractionInputMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$00$0A@_J@Eigen@@UDefaultDevice@2@@Eigen@@V?$array@_J$0A@@std@@V?$array@_J$00@4@$03$00$0A@$0BA@@23@PEAM0M@Z</DECORATED>
    <FUNCLINE>88</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\Eigen\src\Core\products\</FILEPATH>
      <FILENAME>GeneralMatrixVector.h</FILENAME>
      <LINE>134</LINE>
      <COLUMN>38</COLUMN>
    </SFA>
    <DEFECTCODE>26812</DEFECTCODE>
    <DESCRIPTION>The enum type 'Eigen::internal::general_matrix_vector_product&lt;__int64,float,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::DefaultDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,16&gt;,0,0,float,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::DefaultDevice&gt;,std::array&lt;__int64,0&gt;,std::array&lt;__int64,1&gt;,4,0,1,16&gt;,0,0&gt;::run::__l4::&lt;unnamed-enum-AllAligned&gt;' is unscoped. Prefer 'enum class' over 'enum' (Enum.3).</DESCRIPTION>
    <FUNCTION>Eigen::internal::general_matrix_vector_product&lt;__int64,float,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::DefaultDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,16&gt;,0,0,float,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::DefaultDevice&gt;,std::array&lt;__int64,0&gt;,std::array&lt;__int64,1&gt;,4,0,1,16&gt;,0,0&gt;::run</FUNCTION>
    <DECORATED>?run@?$general_matrix_vector_product@_JMV?$TensorContractionInputMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UDefaultDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0A@$0BA@@internal@Eigen@@$0A@$0A@MV?$TensorContractionInputMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$00$0A@_J@Eigen@@UDefaultDevice@2@@Eigen@@V?$array@_J$0A@@std@@V?$array@_J$00@4@$03$0A@$00$0BA@@23@$0A@$0A@@internal@Eigen@@SAX_J0AEBV?$TensorContractionInputMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UDefaultDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0A@$0BA@@23@AEBV?$TensorContractionInputMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$00$0A@_J@Eigen@@UDefaultDevice@2@@Eigen@@V?$array@_J$0A@@std@@V?$array@_J$00@4@$03$0A@$00$0BA@@23@PEAM0M@Z</DECORATED>
    <FUNCLINE>88</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\Eigen\src\Core\products\</FILEPATH>
      <FILENAME>GeneralMatrixVector.h</FILENAME>
      <LINE>134</LINE>
      <COLUMN>38</COLUMN>
    </SFA>
    <DEFECTCODE>26812</DEFECTCODE>
    <DESCRIPTION>The enum type 'Eigen::internal::general_matrix_vector_product&lt;__int64,float,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::DefaultDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,16&gt;,0,0,float,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::DefaultDevice&gt;,std::array&lt;__int64,0&gt;,std::array&lt;__int64,1&gt;,4,0,0,16&gt;,0,0&gt;::run::__l4::&lt;unnamed-enum-AllAligned&gt;' is unscoped. Prefer 'enum class' over 'enum' (Enum.3).</DESCRIPTION>
    <FUNCTION>Eigen::internal::general_matrix_vector_product&lt;__int64,float,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::DefaultDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0,16&gt;,0,0,float,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::DefaultDevice&gt;,std::array&lt;__int64,0&gt;,std::array&lt;__int64,1&gt;,4,0,0,16&gt;,0,0&gt;::run</FUNCTION>
    <DECORATED>?run@?$general_matrix_vector_product@_JMV?$TensorContractionInputMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UDefaultDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0A@$0BA@@internal@Eigen@@$0A@$0A@MV?$TensorContractionInputMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$00$0A@_J@Eigen@@UDefaultDevice@2@@Eigen@@V?$array@_J$0A@@std@@V?$array@_J$00@4@$03$0A@$0A@$0BA@@23@$0A@$0A@@internal@Eigen@@SAX_J0AEBV?$TensorContractionInputMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UDefaultDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0A@$0BA@@23@AEBV?$TensorContractionInputMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$00$0A@_J@Eigen@@UDefaultDevice@2@@Eigen@@V?$array@_J$0A@@std@@V?$array@_J$00@4@$03$0A@$0A@$0BA@@23@PEAM0M@Z</DECORATED>
    <FUNCLINE>88</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\Eigen\src\Core\products\</FILEPATH>
      <FILENAME>GeneralMatrixVector.h</FILENAME>
      <LINE>134</LINE>
      <COLUMN>38</COLUMN>
    </SFA>
    <DEFECTCODE>26812</DEFECTCODE>
    <DESCRIPTION>The enum type 'Eigen::internal::general_matrix_vector_product&lt;__int64,float,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::DefaultDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,16&gt;,0,0,float,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::DefaultDevice&gt;,std::array&lt;__int64,0&gt;,std::array&lt;__int64,1&gt;,4,1,1,16&gt;,0,0&gt;::run::__l4::&lt;unnamed-enum-AllAligned&gt;' is unscoped. Prefer 'enum class' over 'enum' (Enum.3).</DESCRIPTION>
    <FUNCTION>Eigen::internal::general_matrix_vector_product&lt;__int64,float,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::DefaultDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,16&gt;,0,0,float,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::DefaultDevice&gt;,std::array&lt;__int64,0&gt;,std::array&lt;__int64,1&gt;,4,1,1,16&gt;,0,0&gt;::run</FUNCTION>
    <DECORATED>?run@?$general_matrix_vector_product@_JMV?$TensorContractionInputMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UDefaultDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0A@$0BA@@internal@Eigen@@$0A@$0A@MV?$TensorContractionInputMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$00$0A@_J@Eigen@@UDefaultDevice@2@@Eigen@@V?$array@_J$0A@@std@@V?$array@_J$00@4@$03$00$00$0BA@@23@$0A@$0A@@internal@Eigen@@SAX_J0AEBV?$TensorContractionInputMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UDefaultDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0A@$0BA@@23@AEBV?$TensorContractionInputMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$00$0A@_J@Eigen@@UDefaultDevice@2@@Eigen@@V?$array@_J$0A@@std@@V?$array@_J$00@4@$03$00$00$0BA@@23@PEAM0M@Z</DECORATED>
    <FUNCLINE>88</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\Eigen\src\Core\products\</FILEPATH>
      <FILENAME>GeneralMatrixVector.h</FILENAME>
      <LINE>134</LINE>
      <COLUMN>38</COLUMN>
    </SFA>
    <DEFECTCODE>26812</DEFECTCODE>
    <DESCRIPTION>The enum type 'Eigen::internal::general_matrix_vector_product&lt;__int64,float,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::DefaultDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,16&gt;,0,0,float,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::DefaultDevice&gt;,std::array&lt;__int64,0&gt;,std::array&lt;__int64,1&gt;,4,1,0,16&gt;,0,0&gt;::run::__l4::&lt;unnamed-enum-AllAligned&gt;' is unscoped. Prefer 'enum class' over 'enum' (Enum.3).</DESCRIPTION>
    <FUNCTION>Eigen::internal::general_matrix_vector_product&lt;__int64,float,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::DefaultDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,16&gt;,0,0,float,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::DefaultDevice&gt;,std::array&lt;__int64,0&gt;,std::array&lt;__int64,1&gt;,4,1,0,16&gt;,0,0&gt;::run</FUNCTION>
    <DECORATED>?run@?$general_matrix_vector_product@_JMV?$TensorContractionInputMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UDefaultDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0A@$0BA@@internal@Eigen@@$0A@$0A@MV?$TensorContractionInputMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$00$0A@_J@Eigen@@UDefaultDevice@2@@Eigen@@V?$array@_J$0A@@std@@V?$array@_J$00@4@$03$00$0A@$0BA@@23@$0A@$0A@@internal@Eigen@@SAX_J0AEBV?$TensorContractionInputMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UDefaultDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0A@$0BA@@23@AEBV?$TensorContractionInputMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$00$0A@_J@Eigen@@UDefaultDevice@2@@Eigen@@V?$array@_J$0A@@std@@V?$array@_J$00@4@$03$00$0A@$0BA@@23@PEAM0M@Z</DECORATED>
    <FUNCLINE>88</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\Eigen\src\Core\products\</FILEPATH>
      <FILENAME>GeneralMatrixVector.h</FILENAME>
      <LINE>134</LINE>
      <COLUMN>38</COLUMN>
    </SFA>
    <DEFECTCODE>26812</DEFECTCODE>
    <DESCRIPTION>The enum type 'Eigen::internal::general_matrix_vector_product&lt;__int64,float,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::DefaultDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,16&gt;,0,0,float,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::DefaultDevice&gt;,std::array&lt;__int64,0&gt;,std::array&lt;__int64,1&gt;,4,0,1,16&gt;,0,0&gt;::run::__l4::&lt;unnamed-enum-AllAligned&gt;' is unscoped. Prefer 'enum class' over 'enum' (Enum.3).</DESCRIPTION>
    <FUNCTION>Eigen::internal::general_matrix_vector_product&lt;__int64,float,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::DefaultDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,16&gt;,0,0,float,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::DefaultDevice&gt;,std::array&lt;__int64,0&gt;,std::array&lt;__int64,1&gt;,4,0,1,16&gt;,0,0&gt;::run</FUNCTION>
    <DECORATED>?run@?$general_matrix_vector_product@_JMV?$TensorContractionInputMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UDefaultDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0A@$0BA@@internal@Eigen@@$0A@$0A@MV?$TensorContractionInputMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$00$0A@_J@Eigen@@UDefaultDevice@2@@Eigen@@V?$array@_J$0A@@std@@V?$array@_J$00@4@$03$0A@$00$0BA@@23@$0A@$0A@@internal@Eigen@@SAX_J0AEBV?$TensorContractionInputMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UDefaultDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0A@$0BA@@23@AEBV?$TensorContractionInputMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$00$0A@_J@Eigen@@UDefaultDevice@2@@Eigen@@V?$array@_J$0A@@std@@V?$array@_J$00@4@$03$0A@$00$0BA@@23@PEAM0M@Z</DECORATED>
    <FUNCLINE>88</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\Eigen\src\Core\products\</FILEPATH>
      <FILENAME>GeneralMatrixVector.h</FILENAME>
      <LINE>134</LINE>
      <COLUMN>38</COLUMN>
    </SFA>
    <DEFECTCODE>26812</DEFECTCODE>
    <DESCRIPTION>The enum type 'Eigen::internal::general_matrix_vector_product&lt;__int64,float,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::DefaultDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,16&gt;,0,0,float,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::DefaultDevice&gt;,std::array&lt;__int64,0&gt;,std::array&lt;__int64,1&gt;,4,0,0,16&gt;,0,0&gt;::run::__l4::&lt;unnamed-enum-AllAligned&gt;' is unscoped. Prefer 'enum class' over 'enum' (Enum.3).</DESCRIPTION>
    <FUNCTION>Eigen::internal::general_matrix_vector_product&lt;__int64,float,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::DefaultDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0,16&gt;,0,0,float,Eigen::internal::TensorContractionInputMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::DefaultDevice&gt;,std::array&lt;__int64,0&gt;,std::array&lt;__int64,1&gt;,4,0,0,16&gt;,0,0&gt;::run</FUNCTION>
    <DECORATED>?run@?$general_matrix_vector_product@_JMV?$TensorContractionInputMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UDefaultDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0A@$0BA@@internal@Eigen@@$0A@$0A@MV?$TensorContractionInputMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$00$0A@_J@Eigen@@UDefaultDevice@2@@Eigen@@V?$array@_J$0A@@std@@V?$array@_J$00@4@$03$0A@$0A@$0BA@@23@$0A@$0A@@internal@Eigen@@SAX_J0AEBV?$TensorContractionInputMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UDefaultDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0A@$0BA@@23@AEBV?$TensorContractionInputMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$00$0A@_J@Eigen@@UDefaultDevice@2@@Eigen@@V?$array@_J$0A@@std@@V?$array@_J$00@4@$03$0A@$0A@$0BA@@23@PEAM0M@Z</DECORATED>
    <FUNCLINE>88</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContractionMapper.h</FILENAME>
      <LINE>159</LINE>
      <COLUMN>6</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>Ill-defined for-loop:  initial condition does not satisfy test.  Loop body not executed.</DESCRIPTION>
    <FUNCTION>Eigen::internal::SimpleTensorContractionMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::DefaultDevice&gt;,std::array&lt;__int64,0&gt;,std::array&lt;__int64,1&gt;,4,0,0&gt;::computeIndexPair</FUNCTION>
    <DECORATED>?computeIndexPair@?$SimpleTensorContractionMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$00$0A@_J@Eigen@@UDefaultDevice@2@@Eigen@@V?$array@_J$0A@@std@@V?$array@_J$00@4@$03$0A@$0A@@internal@Eigen@@QEBA?AU?$IndexPair@_J@3@_J0_J@Z</DECORATED>
    <FUNCLINE>153</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContractionMapper.h</FILENAME>
      <LINE>179</LINE>
      <COLUMN>6</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>Ill-defined for-loop:  initial condition does not satisfy test.  Loop body not executed.</DESCRIPTION>
    <FUNCTION>Eigen::internal::SimpleTensorContractionMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::DefaultDevice&gt;,std::array&lt;__int64,0&gt;,std::array&lt;__int64,1&gt;,4,0,0&gt;::computeIndexPair</FUNCTION>
    <DECORATED>?computeIndexPair@?$SimpleTensorContractionMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$00$0A@_J@Eigen@@UDefaultDevice@2@@Eigen@@V?$array@_J$0A@@std@@V?$array@_J$00@4@$03$0A@$0A@@internal@Eigen@@QEBA?AU?$IndexPair@_J@3@_J0_J@Z</DECORATED>
    <FUNCLINE>153</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContractionMapper.h</FILENAME>
      <LINE>159</LINE>
      <COLUMN>6</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>Ill-defined for-loop:  initial condition does not satisfy test.  Loop body not executed.</DESCRIPTION>
    <FUNCTION>Eigen::internal::SimpleTensorContractionMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::TensorMap&lt;Eigen::Tensor&lt;float,2,0,__int64&gt;,0,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0&gt;::computeIndexPair</FUNCTION>
    <DECORATED>?computeIndexPair@?$SimpleTensorContractionMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$TensorMap@V?$Tensor@M$01$0A@_J@Eigen@@$0A@UMakePointer@2@@Eigen@@UDefaultDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0A@@internal@Eigen@@QEBA?AU?$IndexPair@_J@3@_J0_J@Z</DECORATED>
    <FUNCLINE>153</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContractionMapper.h</FILENAME>
      <LINE>179</LINE>
      <COLUMN>6</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>Ill-defined for-loop:  initial condition does not satisfy test.  Loop body not executed.</DESCRIPTION>
    <FUNCTION>Eigen::internal::SimpleTensorContractionMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::TensorMap&lt;Eigen::Tensor&lt;float,2,0,__int64&gt;,0,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0&gt;::computeIndexPair</FUNCTION>
    <DECORATED>?computeIndexPair@?$SimpleTensorContractionMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$TensorMap@V?$Tensor@M$01$0A@_J@Eigen@@$0A@UMakePointer@2@@Eigen@@UDefaultDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0A@@internal@Eigen@@QEBA?AU?$IndexPair@_J@3@_J0_J@Z</DECORATED>
    <FUNCLINE>153</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContractionMapper.h</FILENAME>
      <LINE>159</LINE>
      <COLUMN>6</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>Ill-defined for-loop:  initial condition does not satisfy test.  Loop body not executed.</DESCRIPTION>
    <FUNCTION>Eigen::internal::SimpleTensorContractionMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::DefaultDevice&gt;,std::array&lt;__int64,0&gt;,std::array&lt;__int64,1&gt;,4,1,0&gt;::computeIndexPair</FUNCTION>
    <DECORATED>?computeIndexPair@?$SimpleTensorContractionMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$00$0A@_J@Eigen@@UDefaultDevice@2@@Eigen@@V?$array@_J$0A@@std@@V?$array@_J$00@4@$03$00$0A@@internal@Eigen@@QEBA?AU?$IndexPair@_J@3@_J0_J@Z</DECORATED>
    <FUNCLINE>153</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContractionMapper.h</FILENAME>
      <LINE>179</LINE>
      <COLUMN>6</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>Ill-defined for-loop:  initial condition does not satisfy test.  Loop body not executed.</DESCRIPTION>
    <FUNCTION>Eigen::internal::SimpleTensorContractionMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::DefaultDevice&gt;,std::array&lt;__int64,0&gt;,std::array&lt;__int64,1&gt;,4,1,0&gt;::computeIndexPair</FUNCTION>
    <DECORATED>?computeIndexPair@?$SimpleTensorContractionMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$00$0A@_J@Eigen@@UDefaultDevice@2@@Eigen@@V?$array@_J$0A@@std@@V?$array@_J$00@4@$03$00$0A@@internal@Eigen@@QEBA?AU?$IndexPair@_J@3@_J0_J@Z</DECORATED>
    <FUNCLINE>153</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContractionMapper.h</FILENAME>
      <LINE>159</LINE>
      <COLUMN>6</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>Ill-defined for-loop:  initial condition does not satisfy test.  Loop body not executed.</DESCRIPTION>
    <FUNCTION>Eigen::internal::SimpleTensorContractionMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::TensorMap&lt;Eigen::Tensor&lt;float,2,0,__int64&gt;,0,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0&gt;::computeIndexPair</FUNCTION>
    <DECORATED>?computeIndexPair@?$SimpleTensorContractionMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$TensorMap@V?$Tensor@M$01$0A@_J@Eigen@@$0A@UMakePointer@2@@Eigen@@UDefaultDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0A@@internal@Eigen@@QEBA?AU?$IndexPair@_J@3@_J0_J@Z</DECORATED>
    <FUNCLINE>153</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContractionMapper.h</FILENAME>
      <LINE>179</LINE>
      <COLUMN>6</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>Ill-defined for-loop:  initial condition does not satisfy test.  Loop body not executed.</DESCRIPTION>
    <FUNCTION>Eigen::internal::SimpleTensorContractionMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::TensorMap&lt;Eigen::Tensor&lt;float,2,0,__int64&gt;,0,Eigen::MakePointer&gt; const ,Eigen::DefaultDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0&gt;::computeIndexPair</FUNCTION>
    <DECORATED>?computeIndexPair@?$SimpleTensorContractionMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$TensorMap@V?$Tensor@M$01$0A@_J@Eigen@@$0A@UMakePointer@2@@Eigen@@UDefaultDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0A@@internal@Eigen@@QEBA?AU?$IndexPair@_J@3@_J0_J@Z</DECORATED>
    <FUNCLINE>153</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContractionMapper.h</FILENAME>
      <LINE>159</LINE>
      <COLUMN>6</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>Ill-defined for-loop:  initial condition does not satisfy test.  Loop body not executed.</DESCRIPTION>
    <FUNCTION>Eigen::internal::SimpleTensorContractionMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::DefaultDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0&gt;::computeIndexPair</FUNCTION>
    <DECORATED>?computeIndexPair@?$SimpleTensorContractionMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UDefaultDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0A@@internal@Eigen@@QEBA?AU?$IndexPair@_J@3@_J0_J@Z</DECORATED>
    <FUNCLINE>153</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContractionMapper.h</FILENAME>
      <LINE>179</LINE>
      <COLUMN>6</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>Ill-defined for-loop:  initial condition does not satisfy test.  Loop body not executed.</DESCRIPTION>
    <FUNCTION>Eigen::internal::SimpleTensorContractionMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::DefaultDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0&gt;::computeIndexPair</FUNCTION>
    <DECORATED>?computeIndexPair@?$SimpleTensorContractionMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UDefaultDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0A@@internal@Eigen@@QEBA?AU?$IndexPair@_J@3@_J0_J@Z</DECORATED>
    <FUNCLINE>153</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContractionMapper.h</FILENAME>
      <LINE>159</LINE>
      <COLUMN>6</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>Ill-defined for-loop:  initial condition does not satisfy test.  Loop body not executed.</DESCRIPTION>
    <FUNCTION>Eigen::internal::SimpleTensorContractionMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::DefaultDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0&gt;::computeIndexPair</FUNCTION>
    <DECORATED>?computeIndexPair@?$SimpleTensorContractionMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UDefaultDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0A@@internal@Eigen@@QEBA?AU?$IndexPair@_J@3@_J0_J@Z</DECORATED>
    <FUNCLINE>153</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContractionMapper.h</FILENAME>
      <LINE>179</LINE>
      <COLUMN>6</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>Ill-defined for-loop:  initial condition does not satisfy test.  Loop body not executed.</DESCRIPTION>
    <FUNCTION>Eigen::internal::SimpleTensorContractionMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::DefaultDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,0&gt;::computeIndexPair</FUNCTION>
    <DECORATED>?computeIndexPair@?$SimpleTensorContractionMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UDefaultDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0A@@internal@Eigen@@QEBA?AU?$IndexPair@_J@3@_J0_J@Z</DECORATED>
    <FUNCLINE>153</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContractionMapper.h</FILENAME>
      <LINE>159</LINE>
      <COLUMN>6</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>Ill-defined for-loop:  initial condition does not satisfy test.  Loop body not executed.</DESCRIPTION>
    <FUNCTION>Eigen::internal::SimpleTensorContractionMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::DefaultDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0&gt;::computeIndexPair</FUNCTION>
    <DECORATED>?computeIndexPair@?$SimpleTensorContractionMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UDefaultDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0A@@internal@Eigen@@QEBA?AU?$IndexPair@_J@3@_J0_J@Z</DECORATED>
    <FUNCLINE>153</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContractionMapper.h</FILENAME>
      <LINE>179</LINE>
      <COLUMN>6</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>Ill-defined for-loop:  initial condition does not satisfy test.  Loop body not executed.</DESCRIPTION>
    <FUNCTION>Eigen::internal::SimpleTensorContractionMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::DefaultDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0&gt;::computeIndexPair</FUNCTION>
    <DECORATED>?computeIndexPair@?$SimpleTensorContractionMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UDefaultDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0A@@internal@Eigen@@QEBA?AU?$IndexPair@_J@3@_J0_J@Z</DECORATED>
    <FUNCLINE>153</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContractionMapper.h</FILENAME>
      <LINE>159</LINE>
      <COLUMN>6</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>Ill-defined for-loop:  initial condition does not satisfy test.  Loop body not executed.</DESCRIPTION>
    <FUNCTION>Eigen::internal::SimpleTensorContractionMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::DefaultDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0&gt;::computeIndexPair</FUNCTION>
    <DECORATED>?computeIndexPair@?$SimpleTensorContractionMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UDefaultDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0A@@internal@Eigen@@QEBA?AU?$IndexPair@_J@3@_J0_J@Z</DECORATED>
    <FUNCLINE>153</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContractionMapper.h</FILENAME>
      <LINE>179</LINE>
      <COLUMN>6</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>Ill-defined for-loop:  initial condition does not satisfy test.  Loop body not executed.</DESCRIPTION>
    <FUNCTION>Eigen::internal::SimpleTensorContractionMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::DefaultDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,0&gt;::computeIndexPair</FUNCTION>
    <DECORATED>?computeIndexPair@?$SimpleTensorContractionMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UDefaultDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0A@@internal@Eigen@@QEBA?AU?$IndexPair@_J@3@_J0_J@Z</DECORATED>
    <FUNCLINE>153</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContractionMapper.h</FILENAME>
      <LINE>119</LINE>
      <COLUMN>4</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>Ill-defined for-loop:  initial condition does not satisfy test.  Loop body not executed.</DESCRIPTION>
    <FUNCTION>Eigen::internal::SimpleTensorContractionMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::DefaultDevice&gt;,std::array&lt;__int64,0&gt;,std::array&lt;__int64,1&gt;,4,0,16&gt;::computeIndex</FUNCTION>
    <DECORATED>?computeIndex@?$SimpleTensorContractionMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$00$0A@_J@Eigen@@UDefaultDevice@2@@Eigen@@V?$array@_J$0A@@std@@V?$array@_J$00@4@$03$0A@$0BA@@internal@Eigen@@QEBA_J_J0@Z</DECORATED>
    <FUNCLINE>114</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContractionMapper.h</FILENAME>
      <LINE>135</LINE>
      <COLUMN>6</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>Ill-defined for-loop:  initial condition does not satisfy test.  Loop body not executed.</DESCRIPTION>
    <FUNCTION>Eigen::internal::SimpleTensorContractionMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::DefaultDevice&gt;,std::array&lt;__int64,0&gt;,std::array&lt;__int64,1&gt;,4,0,16&gt;::computeIndex</FUNCTION>
    <DECORATED>?computeIndex@?$SimpleTensorContractionMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$00$0A@_J@Eigen@@UDefaultDevice@2@@Eigen@@V?$array@_J$0A@@std@@V?$array@_J$00@4@$03$0A@$0BA@@internal@Eigen@@QEBA_J_J0@Z</DECORATED>
    <FUNCLINE>114</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContractionMapper.h</FILENAME>
      <LINE>119</LINE>
      <COLUMN>4</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>Ill-defined for-loop:  initial condition does not satisfy test.  Loop body not executed.</DESCRIPTION>
    <FUNCTION>Eigen::internal::SimpleTensorContractionMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::DefaultDevice&gt;,std::array&lt;__int64,0&gt;,std::array&lt;__int64,1&gt;,4,1,16&gt;::computeIndex</FUNCTION>
    <DECORATED>?computeIndex@?$SimpleTensorContractionMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$00$0A@_J@Eigen@@UDefaultDevice@2@@Eigen@@V?$array@_J$0A@@std@@V?$array@_J$00@4@$03$00$0BA@@internal@Eigen@@QEBA_J_J0@Z</DECORATED>
    <FUNCLINE>114</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContractionMapper.h</FILENAME>
      <LINE>135</LINE>
      <COLUMN>6</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>Ill-defined for-loop:  initial condition does not satisfy test.  Loop body not executed.</DESCRIPTION>
    <FUNCTION>Eigen::internal::SimpleTensorContractionMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::DefaultDevice&gt;,std::array&lt;__int64,0&gt;,std::array&lt;__int64,1&gt;,4,1,16&gt;::computeIndex</FUNCTION>
    <DECORATED>?computeIndex@?$SimpleTensorContractionMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$00$0A@_J@Eigen@@UDefaultDevice@2@@Eigen@@V?$array@_J$0A@@std@@V?$array@_J$00@4@$03$00$0BA@@internal@Eigen@@QEBA_J_J0@Z</DECORATED>
    <FUNCLINE>114</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContractionMapper.h</FILENAME>
      <LINE>119</LINE>
      <COLUMN>4</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>Ill-defined for-loop:  initial condition does not satisfy test.  Loop body not executed.</DESCRIPTION>
    <FUNCTION>Eigen::internal::SimpleTensorContractionMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::DefaultDevice&gt;,std::array&lt;__int64,0&gt;,std::array&lt;__int64,1&gt;,4,0,0&gt;::computeIndex</FUNCTION>
    <DECORATED>?computeIndex@?$SimpleTensorContractionMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$00$0A@_J@Eigen@@UDefaultDevice@2@@Eigen@@V?$array@_J$0A@@std@@V?$array@_J$00@4@$03$0A@$0A@@internal@Eigen@@QEBA_J_J0@Z</DECORATED>
    <FUNCLINE>114</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContractionMapper.h</FILENAME>
      <LINE>135</LINE>
      <COLUMN>6</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>Ill-defined for-loop:  initial condition does not satisfy test.  Loop body not executed.</DESCRIPTION>
    <FUNCTION>Eigen::internal::SimpleTensorContractionMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::DefaultDevice&gt;,std::array&lt;__int64,0&gt;,std::array&lt;__int64,1&gt;,4,0,0&gt;::computeIndex</FUNCTION>
    <DECORATED>?computeIndex@?$SimpleTensorContractionMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$00$0A@_J@Eigen@@UDefaultDevice@2@@Eigen@@V?$array@_J$0A@@std@@V?$array@_J$00@4@$03$0A@$0A@@internal@Eigen@@QEBA_J_J0@Z</DECORATED>
    <FUNCLINE>114</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContractionMapper.h</FILENAME>
      <LINE>119</LINE>
      <COLUMN>4</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>Ill-defined for-loop:  initial condition does not satisfy test.  Loop body not executed.</DESCRIPTION>
    <FUNCTION>Eigen::internal::SimpleTensorContractionMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::DefaultDevice&gt;,std::array&lt;__int64,0&gt;,std::array&lt;__int64,1&gt;,4,1,0&gt;::computeIndex</FUNCTION>
    <DECORATED>?computeIndex@?$SimpleTensorContractionMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$00$0A@_J@Eigen@@UDefaultDevice@2@@Eigen@@V?$array@_J$0A@@std@@V?$array@_J$00@4@$03$00$0A@@internal@Eigen@@QEBA_J_J0@Z</DECORATED>
    <FUNCLINE>114</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContractionMapper.h</FILENAME>
      <LINE>135</LINE>
      <COLUMN>6</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>Ill-defined for-loop:  initial condition does not satisfy test.  Loop body not executed.</DESCRIPTION>
    <FUNCTION>Eigen::internal::SimpleTensorContractionMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::DefaultDevice&gt;,std::array&lt;__int64,0&gt;,std::array&lt;__int64,1&gt;,4,1,0&gt;::computeIndex</FUNCTION>
    <DECORATED>?computeIndex@?$SimpleTensorContractionMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$00$0A@_J@Eigen@@UDefaultDevice@2@@Eigen@@V?$array@_J$0A@@std@@V?$array@_J$00@4@$03$00$0A@@internal@Eigen@@QEBA_J_J0@Z</DECORATED>
    <FUNCLINE>114</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContractionMapper.h</FILENAME>
      <LINE>159</LINE>
      <COLUMN>6</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>Ill-defined for-loop:  initial condition does not satisfy test.  Loop body not executed.</DESCRIPTION>
    <FUNCTION>Eigen::internal::SimpleTensorContractionMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::DefaultDevice&gt;,std::array&lt;__int64,0&gt;,std::array&lt;__int64,1&gt;,4,0,0&gt;::computeIndexPair</FUNCTION>
    <DECORATED>?computeIndexPair@?$SimpleTensorContractionMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$00$0A@_J@Eigen@@UDefaultDevice@2@@Eigen@@V?$array@_J$0A@@std@@V?$array@_J$00@4@$03$0A@$0A@@internal@Eigen@@QEBA?AU?$IndexPair@_J@3@_J0_J@Z</DECORATED>
    <FUNCLINE>153</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContractionMapper.h</FILENAME>
      <LINE>179</LINE>
      <COLUMN>6</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>Ill-defined for-loop:  initial condition does not satisfy test.  Loop body not executed.</DESCRIPTION>
    <FUNCTION>Eigen::internal::SimpleTensorContractionMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::DefaultDevice&gt;,std::array&lt;__int64,0&gt;,std::array&lt;__int64,1&gt;,4,0,0&gt;::computeIndexPair</FUNCTION>
    <DECORATED>?computeIndexPair@?$SimpleTensorContractionMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$00$0A@_J@Eigen@@UDefaultDevice@2@@Eigen@@V?$array@_J$0A@@std@@V?$array@_J$00@4@$03$0A@$0A@@internal@Eigen@@QEBA?AU?$IndexPair@_J@3@_J0_J@Z</DECORATED>
    <FUNCLINE>153</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContractionMapper.h</FILENAME>
      <LINE>159</LINE>
      <COLUMN>6</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>Ill-defined for-loop:  initial condition does not satisfy test.  Loop body not executed.</DESCRIPTION>
    <FUNCTION>Eigen::internal::SimpleTensorContractionMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::DefaultDevice&gt;,std::array&lt;__int64,0&gt;,std::array&lt;__int64,1&gt;,4,1,0&gt;::computeIndexPair</FUNCTION>
    <DECORATED>?computeIndexPair@?$SimpleTensorContractionMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$00$0A@_J@Eigen@@UDefaultDevice@2@@Eigen@@V?$array@_J$0A@@std@@V?$array@_J$00@4@$03$00$0A@@internal@Eigen@@QEBA?AU?$IndexPair@_J@3@_J0_J@Z</DECORATED>
    <FUNCLINE>153</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContractionMapper.h</FILENAME>
      <LINE>179</LINE>
      <COLUMN>6</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>Ill-defined for-loop:  initial condition does not satisfy test.  Loop body not executed.</DESCRIPTION>
    <FUNCTION>Eigen::internal::SimpleTensorContractionMapper&lt;float,__int64,0,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::DefaultDevice&gt;,std::array&lt;__int64,0&gt;,std::array&lt;__int64,1&gt;,4,1,0&gt;::computeIndexPair</FUNCTION>
    <DECORATED>?computeIndexPair@?$SimpleTensorContractionMapper@M_J$0A@U?$TensorEvaluator@$$CBV?$Tensor@M$00$0A@_J@Eigen@@UDefaultDevice@2@@Eigen@@V?$array@_J$0A@@std@@V?$array@_J$00@4@$03$00$0A@@internal@Eigen@@QEBA?AU?$IndexPair@_J@3@_J0_J@Z</DECORATED>
    <FUNCLINE>153</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContractionMapper.h</FILENAME>
      <LINE>159</LINE>
      <COLUMN>6</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>Ill-defined for-loop:  initial condition does not satisfy test.  Loop body not executed.</DESCRIPTION>
    <FUNCTION>Eigen::internal::SimpleTensorContractionMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,0&gt;,std::array&lt;__int64,1&gt;,4,0,16&gt;::computeIndexPair</FUNCTION>
    <DECORATED>?computeIndexPair@?$SimpleTensorContractionMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$00$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$0A@@std@@V?$array@_J$00@4@$03$0A@$0BA@@internal@Eigen@@QEBA?AU?$IndexPair@_J@3@_J0_J@Z</DECORATED>
    <FUNCLINE>153</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContractionMapper.h</FILENAME>
      <LINE>179</LINE>
      <COLUMN>6</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>Ill-defined for-loop:  initial condition does not satisfy test.  Loop body not executed.</DESCRIPTION>
    <FUNCTION>Eigen::internal::SimpleTensorContractionMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,0&gt;,std::array&lt;__int64,1&gt;,4,0,16&gt;::computeIndexPair</FUNCTION>
    <DECORATED>?computeIndexPair@?$SimpleTensorContractionMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$00$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$0A@@std@@V?$array@_J$00@4@$03$0A@$0BA@@internal@Eigen@@QEBA?AU?$IndexPair@_J@3@_J0_J@Z</DECORATED>
    <FUNCLINE>153</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContractionMapper.h</FILENAME>
      <LINE>159</LINE>
      <COLUMN>6</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>Ill-defined for-loop:  initial condition does not satisfy test.  Loop body not executed.</DESCRIPTION>
    <FUNCTION>Eigen::internal::SimpleTensorContractionMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,0&gt;,std::array&lt;__int64,1&gt;,4,1,16&gt;::computeIndexPair</FUNCTION>
    <DECORATED>?computeIndexPair@?$SimpleTensorContractionMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$00$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$0A@@std@@V?$array@_J$00@4@$03$00$0BA@@internal@Eigen@@QEBA?AU?$IndexPair@_J@3@_J0_J@Z</DECORATED>
    <FUNCLINE>153</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContractionMapper.h</FILENAME>
      <LINE>179</LINE>
      <COLUMN>6</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>Ill-defined for-loop:  initial condition does not satisfy test.  Loop body not executed.</DESCRIPTION>
    <FUNCTION>Eigen::internal::SimpleTensorContractionMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,0&gt;,std::array&lt;__int64,1&gt;,4,1,16&gt;::computeIndexPair</FUNCTION>
    <DECORATED>?computeIndexPair@?$SimpleTensorContractionMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$00$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$0A@@std@@V?$array@_J$00@4@$03$00$0BA@@internal@Eigen@@QEBA?AU?$IndexPair@_J@3@_J0_J@Z</DECORATED>
    <FUNCLINE>153</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContractionMapper.h</FILENAME>
      <LINE>159</LINE>
      <COLUMN>6</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>Ill-defined for-loop:  initial condition does not satisfy test.  Loop body not executed.</DESCRIPTION>
    <FUNCTION>Eigen::internal::SimpleTensorContractionMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,16&gt;::computeIndexPair</FUNCTION>
    <DECORATED>?computeIndexPair@?$SimpleTensorContractionMapper@M_J$00U?$TensorEvaluator@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$01$0A@_J@3@$$CBV43@@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0BA@@internal@Eigen@@QEBA?AU?$IndexPair@_J@3@_J0_J@Z</DECORATED>
    <FUNCLINE>153</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContractionMapper.h</FILENAME>
      <LINE>179</LINE>
      <COLUMN>6</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>Ill-defined for-loop:  initial condition does not satisfy test.  Loop body not executed.</DESCRIPTION>
    <FUNCTION>Eigen::internal::SimpleTensorContractionMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,16&gt;::computeIndexPair</FUNCTION>
    <DECORATED>?computeIndexPair@?$SimpleTensorContractionMapper@M_J$00U?$TensorEvaluator@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$01$0A@_J@3@$$CBV43@@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0BA@@internal@Eigen@@QEBA?AU?$IndexPair@_J@3@_J0_J@Z</DECORATED>
    <FUNCLINE>153</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContractionMapper.h</FILENAME>
      <LINE>159</LINE>
      <COLUMN>6</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>Ill-defined for-loop:  initial condition does not satisfy test.  Loop body not executed.</DESCRIPTION>
    <FUNCTION>Eigen::internal::SimpleTensorContractionMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,16&gt;::computeIndexPair</FUNCTION>
    <DECORATED>?computeIndexPair@?$SimpleTensorContractionMapper@M_J$00U?$TensorEvaluator@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$01$0A@_J@3@$$CBV43@@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0BA@@internal@Eigen@@QEBA?AU?$IndexPair@_J@3@_J0_J@Z</DECORATED>
    <FUNCLINE>153</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContractionMapper.h</FILENAME>
      <LINE>179</LINE>
      <COLUMN>6</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>Ill-defined for-loop:  initial condition does not satisfy test.  Loop body not executed.</DESCRIPTION>
    <FUNCTION>Eigen::internal::SimpleTensorContractionMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,2,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,16&gt;::computeIndexPair</FUNCTION>
    <DECORATED>?computeIndexPair@?$SimpleTensorContractionMapper@M_J$00U?$TensorEvaluator@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$01$0A@_J@3@$$CBV43@@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0BA@@internal@Eigen@@QEBA?AU?$IndexPair@_J@3@_J0_J@Z</DECORATED>
    <FUNCLINE>153</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContractionMapper.h</FILENAME>
      <LINE>159</LINE>
      <COLUMN>6</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>Ill-defined for-loop:  initial condition does not satisfy test.  Loop body not executed.</DESCRIPTION>
    <FUNCTION>Eigen::internal::SimpleTensorContractionMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,3,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,16&gt;::computeIndexPair</FUNCTION>
    <DECORATED>?computeIndexPair@?$SimpleTensorContractionMapper@M_J$00U?$TensorEvaluator@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$01$0A@_J@3@$$CBV?$Tensor@M$02$0A@_J@3@@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0BA@@internal@Eigen@@QEBA?AU?$IndexPair@_J@3@_J0_J@Z</DECORATED>
    <FUNCLINE>153</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContractionMapper.h</FILENAME>
      <LINE>179</LINE>
      <COLUMN>6</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>Ill-defined for-loop:  initial condition does not satisfy test.  Loop body not executed.</DESCRIPTION>
    <FUNCTION>Eigen::internal::SimpleTensorContractionMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,3,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,16&gt;::computeIndexPair</FUNCTION>
    <DECORATED>?computeIndexPair@?$SimpleTensorContractionMapper@M_J$00U?$TensorEvaluator@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$01$0A@_J@3@$$CBV?$Tensor@M$02$0A@_J@3@@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0BA@@internal@Eigen@@QEBA?AU?$IndexPair@_J@3@_J0_J@Z</DECORATED>
    <FUNCLINE>153</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContractionMapper.h</FILENAME>
      <LINE>159</LINE>
      <COLUMN>6</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>Ill-defined for-loop:  initial condition does not satisfy test.  Loop body not executed.</DESCRIPTION>
    <FUNCTION>Eigen::internal::SimpleTensorContractionMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,3,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,16&gt;::computeIndexPair</FUNCTION>
    <DECORATED>?computeIndexPair@?$SimpleTensorContractionMapper@M_J$00U?$TensorEvaluator@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$01$0A@_J@3@$$CBV?$Tensor@M$02$0A@_J@3@@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0BA@@internal@Eigen@@QEBA?AU?$IndexPair@_J@3@_J0_J@Z</DECORATED>
    <FUNCLINE>153</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContractionMapper.h</FILENAME>
      <LINE>179</LINE>
      <COLUMN>6</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>Ill-defined for-loop:  initial condition does not satisfy test.  Loop body not executed.</DESCRIPTION>
    <FUNCTION>Eigen::internal::SimpleTensorContractionMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::TensorCwiseBinaryOp&lt;Eigen::internal::scalar_product_op&lt;float,float&gt;,Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::Tensor&lt;float,3,0,__int64&gt; const &gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,16&gt;::computeIndexPair</FUNCTION>
    <DECORATED>?computeIndexPair@?$SimpleTensorContractionMapper@M_J$00U?$TensorEvaluator@$$CBV?$TensorCwiseBinaryOp@U?$scalar_product_op@MM@internal@Eigen@@$$CBV?$Tensor@M$01$0A@_J@3@$$CBV?$Tensor@M$02$0A@_J@3@@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0BA@@internal@Eigen@@QEBA?AU?$IndexPair@_J@3@_J0_J@Z</DECORATED>
    <FUNCLINE>153</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContractionMapper.h</FILENAME>
      <LINE>159</LINE>
      <COLUMN>6</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>Ill-defined for-loop:  initial condition does not satisfy test.  Loop body not executed.</DESCRIPTION>
    <FUNCTION>Eigen::internal::SimpleTensorContractionMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::DefaultDevice&gt;,std::array&lt;__int64,0&gt;,std::array&lt;__int64,1&gt;,4,0,16&gt;::computeIndexPair</FUNCTION>
    <DECORATED>?computeIndexPair@?$SimpleTensorContractionMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$00$0A@_J@Eigen@@UDefaultDevice@2@@Eigen@@V?$array@_J$0A@@std@@V?$array@_J$00@4@$03$0A@$0BA@@internal@Eigen@@QEBA?AU?$IndexPair@_J@3@_J0_J@Z</DECORATED>
    <FUNCLINE>153</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContractionMapper.h</FILENAME>
      <LINE>179</LINE>
      <COLUMN>6</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>Ill-defined for-loop:  initial condition does not satisfy test.  Loop body not executed.</DESCRIPTION>
    <FUNCTION>Eigen::internal::SimpleTensorContractionMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::DefaultDevice&gt;,std::array&lt;__int64,0&gt;,std::array&lt;__int64,1&gt;,4,0,16&gt;::computeIndexPair</FUNCTION>
    <DECORATED>?computeIndexPair@?$SimpleTensorContractionMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$00$0A@_J@Eigen@@UDefaultDevice@2@@Eigen@@V?$array@_J$0A@@std@@V?$array@_J$00@4@$03$0A@$0BA@@internal@Eigen@@QEBA?AU?$IndexPair@_J@3@_J0_J@Z</DECORATED>
    <FUNCLINE>153</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContractionMapper.h</FILENAME>
      <LINE>159</LINE>
      <COLUMN>6</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>Ill-defined for-loop:  initial condition does not satisfy test.  Loop body not executed.</DESCRIPTION>
    <FUNCTION>Eigen::internal::SimpleTensorContractionMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::DefaultDevice&gt;,std::array&lt;__int64,0&gt;,std::array&lt;__int64,1&gt;,4,1,16&gt;::computeIndexPair</FUNCTION>
    <DECORATED>?computeIndexPair@?$SimpleTensorContractionMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$00$0A@_J@Eigen@@UDefaultDevice@2@@Eigen@@V?$array@_J$0A@@std@@V?$array@_J$00@4@$03$00$0BA@@internal@Eigen@@QEBA?AU?$IndexPair@_J@3@_J0_J@Z</DECORATED>
    <FUNCLINE>153</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContractionMapper.h</FILENAME>
      <LINE>179</LINE>
      <COLUMN>6</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>Ill-defined for-loop:  initial condition does not satisfy test.  Loop body not executed.</DESCRIPTION>
    <FUNCTION>Eigen::internal::SimpleTensorContractionMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,1,0,__int64&gt; const ,Eigen::DefaultDevice&gt;,std::array&lt;__int64,0&gt;,std::array&lt;__int64,1&gt;,4,1,16&gt;::computeIndexPair</FUNCTION>
    <DECORATED>?computeIndexPair@?$SimpleTensorContractionMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$00$0A@_J@Eigen@@UDefaultDevice@2@@Eigen@@V?$array@_J$0A@@std@@V?$array@_J$00@4@$03$00$0BA@@internal@Eigen@@QEBA?AU?$IndexPair@_J@3@_J0_J@Z</DECORATED>
    <FUNCLINE>153</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContractionMapper.h</FILENAME>
      <LINE>159</LINE>
      <COLUMN>6</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>Ill-defined for-loop:  initial condition does not satisfy test.  Loop body not executed.</DESCRIPTION>
    <FUNCTION>Eigen::internal::SimpleTensorContractionMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,16&gt;::computeIndexPair</FUNCTION>
    <DECORATED>?computeIndexPair@?$SimpleTensorContractionMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0BA@@internal@Eigen@@QEBA?AU?$IndexPair@_J@3@_J0_J@Z</DECORATED>
    <FUNCLINE>153</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContractionMapper.h</FILENAME>
      <LINE>179</LINE>
      <COLUMN>6</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>Ill-defined for-loop:  initial condition does not satisfy test.  Loop body not executed.</DESCRIPTION>
    <FUNCTION>Eigen::internal::SimpleTensorContractionMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,16&gt;::computeIndexPair</FUNCTION>
    <DECORATED>?computeIndexPair@?$SimpleTensorContractionMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0BA@@internal@Eigen@@QEBA?AU?$IndexPair@_J@3@_J0_J@Z</DECORATED>
    <FUNCLINE>153</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContractionMapper.h</FILENAME>
      <LINE>159</LINE>
      <COLUMN>6</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>Ill-defined for-loop:  initial condition does not satisfy test.  Loop body not executed.</DESCRIPTION>
    <FUNCTION>Eigen::internal::SimpleTensorContractionMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,16&gt;::computeIndexPair</FUNCTION>
    <DECORATED>?computeIndexPair@?$SimpleTensorContractionMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0BA@@internal@Eigen@@QEBA?AU?$IndexPair@_J@3@_J0_J@Z</DECORATED>
    <FUNCLINE>153</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContractionMapper.h</FILENAME>
      <LINE>179</LINE>
      <COLUMN>6</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>Ill-defined for-loop:  initial condition does not satisfy test.  Loop body not executed.</DESCRIPTION>
    <FUNCTION>Eigen::internal::SimpleTensorContractionMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::ThreadPoolDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,16&gt;::computeIndexPair</FUNCTION>
    <DECORATED>?computeIndexPair@?$SimpleTensorContractionMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UThreadPoolDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0BA@@internal@Eigen@@QEBA?AU?$IndexPair@_J@3@_J0_J@Z</DECORATED>
    <FUNCLINE>153</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContractionMapper.h</FILENAME>
      <LINE>159</LINE>
      <COLUMN>6</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>Ill-defined for-loop:  initial condition does not satisfy test.  Loop body not executed.</DESCRIPTION>
    <FUNCTION>Eigen::internal::SimpleTensorContractionMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::DefaultDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,16&gt;::computeIndexPair</FUNCTION>
    <DECORATED>?computeIndexPair@?$SimpleTensorContractionMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UDefaultDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0BA@@internal@Eigen@@QEBA?AU?$IndexPair@_J@3@_J0_J@Z</DECORATED>
    <FUNCLINE>153</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContractionMapper.h</FILENAME>
      <LINE>179</LINE>
      <COLUMN>6</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>Ill-defined for-loop:  initial condition does not satisfy test.  Loop body not executed.</DESCRIPTION>
    <FUNCTION>Eigen::internal::SimpleTensorContractionMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::DefaultDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,0,16&gt;::computeIndexPair</FUNCTION>
    <DECORATED>?computeIndexPair@?$SimpleTensorContractionMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UDefaultDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$0A@$0BA@@internal@Eigen@@QEBA?AU?$IndexPair@_J@3@_J0_J@Z</DECORATED>
    <FUNCLINE>153</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContractionMapper.h</FILENAME>
      <LINE>159</LINE>
      <COLUMN>6</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>Ill-defined for-loop:  initial condition does not satisfy test.  Loop body not executed.</DESCRIPTION>
    <FUNCTION>Eigen::internal::SimpleTensorContractionMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::DefaultDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,16&gt;::computeIndexPair</FUNCTION>
    <DECORATED>?computeIndexPair@?$SimpleTensorContractionMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UDefaultDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0BA@@internal@Eigen@@QEBA?AU?$IndexPair@_J@3@_J0_J@Z</DECORATED>
    <FUNCLINE>153</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>D:\opennn\eigen\unsupported\Eigen\CXX11\src\Tensor\</FILEPATH>
      <FILENAME>TensorContractionMapper.h</FILENAME>
      <LINE>179</LINE>
      <COLUMN>6</COLUMN>
    </SFA>
    <DEFECTCODE>6294</DEFECTCODE>
    <DESCRIPTION>Ill-defined for-loop:  initial condition does not satisfy test.  Loop body not executed.</DESCRIPTION>
    <FUNCTION>Eigen::internal::SimpleTensorContractionMapper&lt;float,__int64,1,Eigen::TensorEvaluator&lt;Eigen::Tensor&lt;float,2,0,__int64&gt; const ,Eigen::DefaultDevice&gt;,std::array&lt;__int64,1&gt;,std::array&lt;__int64,1&gt;,4,1,16&gt;::computeIndexPair</FUNCTION>
    <DECORATED>?computeIndexPair@?$SimpleTensorContractionMapper@M_J$00U?$TensorEvaluator@$$CBV?$Tensor@M$01$0A@_J@Eigen@@UDefaultDevice@2@@Eigen@@V?$array@_J$00@std@@V34@$03$00$0BA@@internal@Eigen@@QEBA?AU?$IndexPair@_J@3@_J0_J@Z</DECORATED>
    <FUNCLINE>153</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
</DEFECTS>